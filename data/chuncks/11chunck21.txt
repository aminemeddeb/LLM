of different AUTOSAR models The form of the UUID Universally Unique Identifier is taken from a standard defined by the Open Group was Open Software Foundation This standard is widely used including by Microsoft for COM GUIDs and by many companies for DCE which is based on CORBA The method for generating these 128bit IDs is published 5 5 89 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 4 Class Identifiable abstract 4 in the standard and the effectiveness and uniqueness of the IDs is not in practice disputed If the id namespace is omitted DCE is assumed An example is DCE2fac123431f811b4a22208002b34c003 The uuid attribute has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the timestamp Tags xmlattributetrue Table A17 Identifiable Class Implementation abstract Package M2AUTOSARTemplatesCommonStructureImplementation Note Description of an implementation a single software component or module Base ARElement ARObject CollectableElement Identifiable MultilanguageReferrable Packageable Element Referrable Subclasses BswImplementation SwcImplementation Attribute Type Mult Kind Note buildAction ManifestBuildActionManifest 01 ref A manifest specifying the intended build actions for the software delivered with this implementation Stereotypes atpVariation Tags vhlatestBindingTimecodeGenerationTime codeDescriptor Code aggr Specifies the provided implementation code compiler Compiler aggr Specifies the compiler for which this implementation has been released generated ArtifactDependencyOnArtifact aggr Relates to an artifact that will be generated during the integration of this Implementation by an associated generator tool Note that this is an optional information since it might not always be in the scope of a single module or component to provide this information Stereotypes atpVariation Tags vhlatestBindingTimepreCompileTime hwElement HwElement ref The hardware elements eg the processor required for this implementation linker Linker aggr Specifies the linker for which this implementation has been released mcSupport McSupportData 01 aggr The measurement calibration support data belonging to this implementation The aggregtion is atpSplitable because in case of an already exisiting BSW Implementation model this description will be added later in the process namely at code generation time Stereotypes atpSplitable Tags atpSplitkeymcSupport programming LanguageProgramminglanguage Enum01 attr Programming language the implementation was created in 5 90 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 4 Class Implementation abstract requiredArtifact DependencyOnArtifact aggr Specifies that this Implementation depends on the existance of another artifact eg a library This aggregation of DependencyOnArtifact is subject to variability with the purpose to support variability in the implementations Different algorithms in the implementation might cause different dependencies eg the number of used libraries Stereotypes atpVariation Tags vhlatestBindingTimepreCompileTime required GeneratorToolDependencyOnArtifact aggr Relates this Implementation to a generator tool in order to generate additional artifacts during integration Stereotypes atpVariation Tags vhlatestBindingTimepreCompileTime resource ConsumptionResourceConsumption 01 aggr All static and dynamic resources for each implementation are described within the ResourceConsumption class Stereotypes atpSplitable Tags atpSplitkeyresourceConsumptionshortName swcBsw MappingSwcBswMapping 01 ref This allows a mapping between an SWC and a BSW behavior to be attached to an implementation description for AUTOSAR Service ECU Abstraction and Complex Driver Components It is up to the methodology to define whether this reference has to be set for the Swc or Bsw Implementtion or for both swVersion RevisionLabelString 01 attr Software version of this implementation The numbering contains three levels like major minor patch its values are vendor specific usedCode GeneratorString 01 attr Optional code generator used vendorId PositiveInteger 01 attr Vendor ID of this Implementation according to the AUTOSAR vendor list Table A18 Implementation Class ImplementationDataType Package M2AUTOSARTemplatesCommonStructureImplementationDataTypes Note Describes a reusable data type on the implementation level This will typically correspond to a typedef in Ccode Tags atprecommendedPackageImplementationDataTypes Base ARElement ARObject AbstractImplementationDataType AtpBlueprint AtpBlueprintable AtpClassifier AtpType AutosarDataType CollectableElement Identifiable MultilanguageReferrable Packageable Element Referrable Attribute Type Mult Kind Note dynamicArray SizeProfileString 01 attr Specifies the profile which the array will follow in case this data type is a variable size array isStructWith Optional ElementBoolean 01 attr This attribute is only valid if the attribute category is set to STRUCTURE If set to True this attribute indicates that the ImplementationDataType has been created with the intention to define at least one element of the structure as optional 5 91 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 4 Class ImplementationDataType subElement orderedImplementationData TypeElement aggr Specifies an element of an array struct or union data type The aggregation of ImplementionDataTypeElement is subject to variability with the purpose to support the conditional existence of elements inside a Implementation DataType representing a structure Stereotypes atpVariation Tags vhlatestBindingTimepreCompileTime symbolProps SymbolProps 01 aggr This represents the SymbolProps for the Implementation DataType Stereotypes atpSplitable Tags atpSplitkeysymbolPropsshortName typeEmitter NameToken 01 attr This attribute is used to control which part of the AUTOSAR toolchain is supposed to trigger data type definitions Table A19 ImplementationDataType Class ImplementationDataTypeElement Package M2AUTOSARTemplatesCommonStructureImplementationDataTypes Note Declares a data object which is locally aggregated Such an element can only be used within the scope where it is aggregated This element either consists of further subElements or it is further defined via its swDataDefProps There are several use cases within the system of ImplementationDataTypes fur such a local declaration It can represent the elements of an array defining the element type and array size It can represent an element of a struct defining its type It can be the local declaration of a debug element Base ARObject AbstractImplementationDataTypeElement AtpClassifier AtpFeature AtpStructureElement Identifiable MultilanguageReferrable Referrable Attribute Type Mult Kind Note arrayImplPolicy ArrayImplPolicyEnum 01 attr This attribute controls the implementation of the payload of an array It shall only be used if the enclosing ImplementationDataType constitutes an array arraySize PositiveInteger 01 attr The existence of this attributes if bigger than 0 defines the size of an array and declares that this Implementation DataTypeElement represents the type of each single array element Stereotypes atpVariation Tags vhlatestBindingTimepreCompileTime arraySize HandlingArraySizeHandling Enum01 attr The way how the size of the array is handled in case of a variable size array arraySize SemanticsArraySizeSemantics Enum01 attr This attribute controls the meaning of the value of the array size isOptional Boolean 01 attr This attribute represents the ability to declare the enclosing ImplementationDataTypeElement as optional This means that at runtime the ImplementationDataType Element may or may not have a valid value and shall therefore be ignored The