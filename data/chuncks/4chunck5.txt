level is at least minSL An unbounded number of rules can becombined ending up dening the entire set of communications that can occur between the applications hosted in a vehicle ie a whitelisting approach is adopted Being the session establishment phase carried out by means of asymmetric cryptography each application is required to be associated with a private key sealed within the secure storage and a digital certicate embedding the corresponding public key Digital certicates need to be signed to guarantee the authenticity and integrity of their content according to a chain of certication Without loss of generality in the following we consider a simplied chain composed by no intermediate levels between the leaves and the trusted root Yet to achieve the best degree of security we suggest using a different root certicate for each vehicle Thus even if an attacker eventually succeeds in obtaining a valid private key eg by violating the secure storage of an ECU he can leverage it only on the original device being the corresponding certicate recognized as invalid by all the other vehicles Certicate revocation is currently considered a critical task in the vehicular domain due to the requirements for an Internet access and the rapidly growing size associated with CRLs Hence pervehicle certicates required to be periodically renewed are deemed to represent a good compromise between security and complexity In light of this we propose to leverage the digital certicates themselves as trustworthy anchors to express the set of services each application is authorized to access In particular in the following we delineate two possible alternatives highlighting the most relevant differences between them 1 Centralized approach each digital certicate binds a public key to the identier of the application it is associated to Then a centralized repository available on each vehicle is leveraged to store the entire set of relevant authorization rules according to the format dened by 1 where appcorresponds to the identier contained in a certicate Additionally a digital signature enforces the authenticity and integrity of the rule set to detect any possible tampering attempts Whenever a new secure connection has to be established the framework performs two lookups in the repository to verify whether both parties are authorized to participate in the communication According to this solution each vehicle is characterized by a single source of trust stating the entire trafc matrix Still the repository might be replicated on every ECU to simplify its secure access and limit the communication latency Nonetheless whenever eg a new application is installed or an update involves a modication in the rule set the entire repository needs to be rebuilt signed by the car manufacturer and stored on the target vehicle possibly introducing a quite high overhead 2 Distributed approach each digital certicate directly binds a public key to the rule set associated with that specic application Technically speaking with reference to the X509 standard we propose to store each authorization rule as a Subject Alternative Name SAN adopting a URIlike format someip srvinst roleminSL 2 where someip is a keyword characterizing the type of entry andapp is implied by the owner of the private key associated with the certicate Although having no longer a central repository containing the entire set of rules the distributed7 approach is characterized by a few advantages over a centralized solution i The framework does not need to perform any table lookup when establishing the connection being all the required pieces of information contained by the certicates it is presented to ii Installing or updating an application does not require to regenerate the entire rule set but only to issue a new digital certicate containing the updated rules relevant for that application Indeed the authorizations associated with all the other applications still remain valid as they are bounded to SOMEIP services and do not imply the identity of the actual counterpart As a practical example lets suppose an upgrade is installed in a vehicle introducing a new rearview camera and its companion application This application is authorized to offer an rwcstream service to transmit the video stream as well as to send alerts to a collisionalert service signaling possible upcoming dangers Assuming the central dashboard was already offering the collisionalert service to receive alerts from other sources it will transparently get notications from the new application too being the access compatible with its digital certicate Conversely if no support was provided to read data from the rwcstream service the displaying application would require an update to introduce this capability as well as to regenerate its digital certicate accordingly Long story short the car manufacturer is required to issue an updated digital certicate only when the corresponding application is also updated iii Certicates can be leveraged by car makers as a sort of contract to certify that a given application optionally developed by a thirdparty is authorized to request andor offer a predetermined set of service instances Thanks to the increased modularity and dynamism we will stick to the distributed approach for the rest of the discussion Nonetheless in case deemed appropriate the security framework could be trivially adapted to support the centralized solution E Symmetric Keys Granularity Generally speaking SOMEIP service instances are asso ciated with a one offerer many requesters topology They possibly encompass unicast interactions between each separate requester and the single offerer as well as group notications transmitted by the provider to a subset of the requesters With that in mind the security framework needs to be compatible with both unicast and multicast messages in order not to impose any limitations on the SOMEIP middleware Runtime messages protection has been designed to be ef ciently provided by means of symmetric cryptography Hence two possible alternatives open up regarding the granularity of the symmetric keys associated with each service instance First the framework may leverage a different symmetric key between the offerer and each requester to secure the direct communications An additional key should then be shared among all the applications accessing the service instance to cope with multicast trafc optionally to increase even further the granularity different keys might be used for different events Second a single symmetric key could