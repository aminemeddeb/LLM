different domains each subnetwork would still remain totally unprotected When it comes to invehicle Ethernetbased communications Hamad et al 30 proposed in 2017 a framework that aims to provide secure communications between ECUs by exploiting security policies to dene who should talk to whom Their solution is made up of two main building blocks First a framework used to build communication policies gradually throughout the design and lifecycle of the software component modelling trust relationships through a Public Key Infrastruc ture PKI Second a security module enforcing the policies in a distributed manner Nonetheless it requires the denition of lowlevel rules strongly limiting the dynamism introduced by SOAs Additionally the verication of lengthy chains of trust may impose an excessive burden at startup time The same year Zelle et al 31 studied the feasibility of using TLS to guarantee authentication and condentiality to Ethernet based invehicle communications In the end they concluded that TLS could meet most of the realworld performance requirements using typical automotive hardware especially when evaluating the actual runtime protection A single session establishment however took more than 2 sto complete rising many doubts whether it could be sustainable in case hundreds of connections needed to be established in parallel Additionally they only considered the exploitation of TLS to protect TCP communications while leaving the use of UDP and DTLS as a future work Indeed UDP appears to be the privileged transport protocol to be used in conjunction with SOMEIP being particularly lightweight Nonetheless as of today no standard version of DTLS does provide compatibility with multicast communications usually leveraged in vehicular networks III B ACKGROUND This section introduces the basic vehicular system archi tecture focusing on highperformance ECUs and presents the SOMEIP middleware its opensource implementation vsomeip as well as an alternative solution DDSA System Model Typical vehicles consist of roughly 100 ECUs microcon trollers responsible for specic tasks such as engine control power train body control and so on Each functional ECU is directly attached to multiple sensors and actuators while their interconnection is realized through multiple CAN buses Yet emerging use cases including automated driving high speed onboard and vehicletovehicle V2V communication multimedia applications and continuous overtheair updates are pushing towards the socalled central server architec ture 32 According to this paradigm many different ECUs are replaced with few more complex devices usually consisting of a highperformance microprocessor complemented by multiple microcontrollers interconnected through highspeed Ethernet links Sensors and actuators can be attached directly to the network or through integration nodes becoming more and more ECU and vehicle independent To increase the interoperability between multiple devices and allow for a faster development of the applications the AUTOSAR consortium recently standardized Adaptive Plat form 33 which is becoming the de facto standard for high performance ECUs It seeks to provide a common middleware interface between applications and ECUs on top of POSIX compliant operating systems eg Linux PikeOS or QNX to enable the efcient usage of the underlying hardware resources and abstract the lowlevel details According to the traditional approach ie Classical AUTOSAR each application is statically assigned to a single ECU and the trafc matrix is dened at the time of conguration Conversely Adaptive AUTOSAR adopts a more exible solution leveraging the serviceoriented pattern to decouple the logical highlevel goals from the actual implementations and the network topology B SOMEIP Scalable serviceOriented MiddlewarE over IP SOMEIP is a communication middleware standardized by the AUTOSAR consortium as part of its effort to develop a futureproof on board architecture 10 To achieve isolation and modularity SOMEIP adopts a serviceoriented abstraction A service logically represents a business activity with a specied outcome accessible through a welldened interface In other words consumers perceive each service as a black box Services can be built upon other services as well as combined to provide more complex functionality Additionally different instances of the same service may coexist at the same time eg for redundancy purposes and reside on different ECUs as well as on the same device Finally service discovery functionalities are foreseen to advertise the availability of the different services and their associated network parameters 34 SOMEIP provides two main communication models First requestresponse implementing classical Remote Procedure Calls RPC to invoke functions exposed by applications running on remote devices Second the publishsubscribe approach which is rather typical in automotive networks It decouples the sender from the recipients of the messages whenever an event occurs the corresponding service publishes a new notication applications willing to receive updates on4 the other hand express their interest by subscribing to the event The actual messages are delivered seamlessly by the middleware which can leverage all the features offered by lower network layers eg multicast messages to save transmissions on the communication medium SOMEIP operates on the top of a transport protocol in charge of delivering the messages from the sender to the recipients Two main bindings are currently supported by the specications UDP and TCP Generally speaking UDP shall be the preferred binding introducing few overhead and being suitable also in case of hard latency requirements Additionally it supports multicast messages thus optimizing the network utilization On the other hand being a heavyweight protocol TCP is suggested only in case very large chunks of data need to be transported and no hard latency requirements in case of error exist Other transport mechanisms such as Network File System NFS or Automotive Pixel Link could be used if more suited for the specic use case As for message protection the SOMEIP standard does not integrate any security measures including authentication integrity and condentiality Instead they are delegated to the transport layer which may impose unwanted limitations and introduce excessive overhead C vsomeip Thevsomeip stack1is an opensource implementation of the SOMEIP specications In a nutshell the library provides all the functionalities required to abstract the communication between both local and remote applications including seri alization of message headers establishment of connections management of communication endpoints packets transmission and servicediscovery facilities In addition it exposes a public API to the application developers taking advantage of an eventloop abstraction as well as leverages conguration les to allow netuning a wide range of