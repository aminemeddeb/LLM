most security parameters eg security levels and cryptographic algorithms need to be shared by all the applications accessing the same service instance Hence they are decided by the offerer and communicated to the other members during the session establishment phase Once initialization is terminated the offerer is ready to accept authentication requests as represented by the innite loop at lines 521 The actual session establishment is started by the requester which initially generates a new random nonce n leveraged to associate each request to the corresponding response and prevent message replay Then it builds up the authentication request message identifying the target service instance and containing the digital certicate associated with the requester Upon reception the offerer performs some sanity checks veries the validity of the digital certicate and the fulllment of the authorization policy Bi In particular it ensures that Biis authorized to access fsrvxinst xgas a requester as well as that the security level slisacceptable according to Bi In other words it prevents an application from accessing a service instance less secure than required In case an inconsistency is identied during any step the handshake is immediately aborted If all checks pass the framework leverages asymmetric cryptography to encrypt the symmetric key with the public key extracted from the digital certicate of the requester lines 1516 Hence only the owner of the corresponding private key would be able to decipher it The9 SOMEIP header VersionAsymmetric Algorithm IDMessage Digest Algorithm IDUnused Nonce n Certicate Fingerprint certAorcertBiAuth Request Security Level IDSymmetric Algorithm IDPeer ID peerid Encrypted Key Length Encrypted Symmetric Key enckey Signature Length Digital Signature signature Auth Response Fig 1 Onwire format of the SOMEIP messages exchanged during the session establishment phase the request encompasses the elds up to Certicate Fingerprint while the response includes all the elements presented response message is then constructed mainly including the nonce copied from the request the certicate of the offerer the encrypted key the security level selected by the offerer and an identier peerid uniquely assigned to each requester the offerer has peerid 0 Finally the response is digitally signed with the private key skAof the offerer line 18 to ensure its authenticity and integrity In the end the message is sent back to the requester Once the response is received the requester performs again a set of checks verifying whether the security level slselected by the offerer is acceptable according its own authorization policy B and ensuring the validity of certA Additionally it extracts the offerers authorization policy Ato make sure Ahasrole equal to offer andslisacceptable for the offerer Indeed no legitimate requester would access fsrvxinst xgifsl A to prevent an offerer from violating its constraints Then the digital signature is veried by means of the public key extracted fromcertA explicitly authenticating Aline 16 In case of successful outcome the framework can proceed deciphering enckey by means of its private key line 19 Hence the requester nally obtained the symmetric key leveraged to secure runtime messages No conrmation is sent to the offerer thus achieving an implicit authentication Nonetheless a malicious application would not own the correct private key skBi effectively being prevented from decrypting the symmetric key and participating in the subsequent communication The session establishment phase is transparently executed by the security framework on behalf of the actual applications which are notied of the availability of a service instance only after successfully completing the entire process Indeed the SOMEIP middleware is exploited for the efcient delivery of the handshake messages by leveraging the requestresponse pattern Fig 1 graphically depicts the onwire format of the messages exchanged during the session establishment phase including all the pieces of information considered in Algorithms 1 and 2 as well as a set of identiers concerning the request generatedrequest sentresponse received session establishedresponse not receivedhandshake abortedsend auth requestreceive auth response valid responseinvalid responsetimeout repeat nrepeatnFig 2 State machine representing the session establishment process performed by a requester Bi accounting for possible message losses actual cryptographic algorithms leveraged for the handshake For the sake of efciency digital certicates are assumed to be replicated on every physical ECU when each application is ini tially deployed Hence during the handshake process they are identied by a ngerprint a unique identier obtained applying a cryptographic hash function Nonetheless this assumption may raise concerns in case of small and resourceconstrained devices with limited storage capabilities as well as for the additional complexity introduced during the update process In the rst case a centralized certicate repository might be leveraged to relax the storage requirements complemented by a helper SOMEIP service exposing an interface for their retrieval and a caching mechanism to limit the overhead of the session establishment Additionally automatic mechanisms could be devised to transparently replicate the certicates on the different ECUs whenever the central repository is modied thus greatly simplifying the update process Finally the handshake is designed to be agnostic about the transport protocol selected by SOMEIP adopting an automatic retransmission mechanism to face message losses To this end the complete state machine depicting the different states that the requester can assume during the process is shown in Fig 2 C RunTime Message Protection As soon as at least one requester Bisuccessfully completed the authentication handshake the transmission of secured SOMEIP messages can start involving both direct interactions and event notications Nonetheless other session establish ments might be carried out in parallel at any time gradually granting access to a wider set of requesters Depending on the security level characterizing the service instance considered a different family of symmetric cryptography algorithms is leveraged to secure the messages Yet if a service instance is operated at nosec security level unmodied messages are simply transmitted by the framework in order to achieve full compatibility with applications built on top of vanilla SOMEIP In detail the authentication and integrity of authentication level messages both the SOMEIP header and the actual payload is guaranteed by a Message Authentication Code MAC appended at the end of each SOMEIP packet Service instances operating at condentiality level on the other hand are secured leveraging an Authenticated Encryption with Associated Data AEAD algorithm It combines in a single interface