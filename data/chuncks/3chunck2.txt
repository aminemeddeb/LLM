Session establishment The purpose of the session establishment phase is twofold On the one side a mutual authentication is carried out verifying that both the server and the client have respectively the right to offer and request the considered service The former performs an explicit authentication by means of a digital signature while the latter is implicitly authenticated being required to use its private key during the process On the other one session parameters are communicated to the requester transmitting in an encrypted form the symmetric key necessary for the subsequent protection of messages The actual security level of the service instance is decided by the offerer and it must be compatible with equal to or possibly greater than the one stated within its own certicate At the same time during the handshake the requester compares the advertised security level with its own specications to prevent the access to a service less secure than its needs The handshake phase is implemented by a simple protocol made up of two message exchanges which follows the re questresponse communication pattern Hence all the necessary pieces of information are transported by SOMEIP packets targeting the service for which the authentication is carried on and in particular a special method devoted to this task Fig 3 summarizes the main data exchanged during different session establishment handshakes performed in parallel by multiple applications Every independent handshake is started by the framework on behalf of the application requesting a service by sending an initial request to begin the communication Most notably the request message contains the digital certicate associated with the requesting application trustworthily stating the list of service instances it can access Once the offerer of the service receives the authentication request it retrieves the peers certicate validates it by means of the trusted root certicate and veries whether the handshake can continue or the request shall be denied due to a lack of privileges In case of a successful outcome the response message is prepared by the offerer to share with the requester its own certicate and the parameters necessary for the subsequent4 Requests service Climate Control Requests service Climate Control Requests service Climate Control Offers service Climate Control digital certicate private key public key encryption digital signature symmetric key Fig 3 Three session establishment handshakes performed in parallel by multiple applications requesting the same service along with the exchanged messages different colors are used to associate each element to the corre sponding owner protection of the actual application messages In particular the response contains the symmetric key associated with the service instance of interest encrypted with the public key stated by the certicate of the requester This procedure guarantees that only the owner of the corresponding private key can decrypt it thus enforcing the condentiality of the symmetric key Additionally the same message comprises the digital signature computed by the offerer over the entire response to guarantee its authenticity and integrity In the end when the requester receives the response it validates the certicate and veries the permissions associated with the offerer Finally it can check the validity of the digital signature using the public key extracted from the digital certicate and in case of match decrypt the symmetric key leveraging its own private key The handshake protocol has been designed to be entirely executed by the communication middleware Hence the process is completely transparent from the applications point of view which are notied of the availability of the service only once the authentication has been successfully completed Additionally no limitations are introduced on the transport layer used by the middleware for the handshake phase Hence automatic retransmissions are foreseen in case of message losses and random nonces are used to associate each response to the corresponding request Finally although the description up to now mentioned the transmission of whole digital certicates for reasons of clarity it would certainly be a waste of both time and network bandwidth due to their considerable size Being the vehicle a closed system in fact it is possible to assume the placement of the necessary cryptographic material inside every ECU at applications deploy time For these reasons according to a wellestablished practice certicates are actually identied during the handshake through a ngerprint a unique identier computed by means of a cryptographic hash function C Message protection After having successfully established a secure session messages can be securely exchanged between the involved parties The technique adopted for the runtime protection 0 78 1516 23 24 31 Service ID Method ID Length Client ID Session ID Protocol VersionInterface VersionMessage TypeReturn CodeSOMEIP header Payload variable sizeEncryptedbraceleftBigg Support Data variable size Authenticated Message Authentication Code variable sizeFig 4 Secured SOMEIP message format varies based on the security level at which the service operates While in case of nosec services vanilla SOMEIP messages are simply serialized authentication andcondentiality level packets are respectively processed by the selected Message Authentication Code MAC 13 and Authenticated Encryption with Associated Data AEAD 14 algorithm Similarly when a message is received its security level is immediately compared against the expected one in addition authentication and condentiality level packets are processed by the corresponding cryptographic function to verify their authenticity and in the latter situation to decrypt the payload if a mismatch is detected the message is immediately discarded Fig 4 shows the format of a secured packet highlighting in bold the differences with respect to a vanilla SOMEIP packet While the entire message including the SOMEIP header is authenticated in both authentication andcondentiality levels the latter provides also the encryption of the payload which carries application data The modications are analyzed in the following Length since the secured packet comprises more infor mation with respect to vanilla SOMEIP the content of the length eld needs to be updated to reect the changes to allow for a correct deserialization at reception side Message Type two previously unused bits of this eld are exploited as ags to specify the security level associated with the current message Support Data includes all the pieces of information required to be transmitted along with the MAC to perform validation and decryption when the message is received while