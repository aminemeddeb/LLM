REQUESTNORETURN NA set to 0x00 EOK NOTIFICATION NA set to 0x00 EOK RESPONSE See Return Codes in SWSSomeIpXf00115 Table 77 Return Codes 7238 Payload variable size SWSSomeIpXf00165 dThe Payload field shall have variable size cSRSXfrm 00008 SWSSomeIpXf00166 dThe Payload field shall contain the transported data c SRSXfrm00008 The serialization of the data will be specified in the following section 724 Serialization of Parameters and Data Structures SWSSomeIpXf00034 dThe serialization shall be based on the Sender ReceiverInterface orClientServerInterface of the datacSRSXfrm 00101 SWSSomeIpXf00169 dTo allow migration the deserialization shall ignore parame ters attached to the end of previously known parameter list cSRSXfrm00101 This means Parameters that were not defined in the ClientServerInterface or SenderReceiverInterface used to generate or parameterize the deserialization code at the end of the serialized data will be ignored by the deserialization SWSSomeIpXf00259 dAfter the serialized data of a variable data length Dat aPrototype a padding for alignment purposes shall be added for the configured alignment see SWSSomeIpXf00260 and SWSSomeIpXf00262 if the variable data length DataPrototype is not the last element in the serialized data stream This requirement does not apply for the serialization of extensible structs and methods c SRSXfrm00101 Note See also chapter 7243 SWSSomeIpXf00260 dIfSOMEIPTransformationProps alignment is set for a variable data length data element the value of SOMEIPTransformationProps alignment defines the alignment This requirement does not apply for the serializa tion of extensible structs and methods cSRSXfrm00101 Note See also chapter 7243 29 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 SWSSomeIpXf00262 dIfSOMEIPTransformationProps alignment is not set for a variable data length data element the value of SOMEIPTransformationDe scription alignment defines the alignment This requirement does not apply for the serialization of extensible structs and methods cSRSXfrm00101 Note See also chapter 7243 SWSSomeIpXf00263 dAfter serialized fixed data length data elements the SOMEIP transformer shall never add automatically a padding for alignment cSRS Xfrm00101 Note If the following data element shall be aligned a padding element of accord ing size needs to be explicitly inserted into the ImplementationDataType in case of serialization based on ImplementationDataType s according to SWSSomeIpXf00307 or into the AutosarDataType in case of serialization based on NetworkRepresentation according to SWSSomeIpXf00306 SWSSomeIpXf00037 dAlignment shall always be calculated from start of SOMEIP messagecSRSXfrm00101 This attribute defines the memory alignment The SOMEIP Transformer does not try to automatically align parameters but aligns as specified The alignment is currently constraint to multiple of 1 Byte to simplify code generators SOMEIP payload should be placed in memory so that the SOMEIP payload is suit able aligned For infotainment ECUs an alignment of 8 Bytes ie 64 bits should be achieved for all ECU at least an alignment of 4 Bytes should be achieved An efficient alignment is highly hardware dependent SWSSomeIpXf00016 dIf more data than expected are handed over to the SOMEIP transformer during deserialization of data the unexpected data shall be dis carded The known fraction shall be considered cSRSXfrm00101 SWSSomeIpXf00017 dIf less data than expected are handed over to the SOMEIP transformer during deserialization of data the following shall happen if for the corresponding ISignal an initial value is specified in serialized form use the value to fill the missing elements at the end of the serialized stream if no initial value is available abort deserialization with ESERMALFORMEDMESSAGE cSRSXfrm00101 Missing data can only be recognized by comparing the length of received serialized data with the expected length of the data SWSSomeIpXf00017 enables extensions of data by adding elements to the end and achieve backward compatibility of an ECU with older boardnet layouts that are missing those data In the following the serialization of different parameters is specified 30 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 SWSSomeIpXf00306 Serialization based on NetworkRepresentation dIf a networkRepresentationProps is defined according to TPSSYST02136 on the ISignal then the SOMEIP serialization shall be based on the networkRepresen tationProps cSRSXfrm00101 Note For details refer to chapter Network Representation in 7 SWSSomeIpXf00307 Serialization based on ImplementationDataTypes dIf no networkRepresentationProps is defined on the ISignal then according to TPSSYST02137 the SOMEIP serialization shall be based on the Implementa tionDataType scSRSXfrm00101 7241 Basic Datatypes SWSSomeIpXf00036 dTheSwBaseType s defined in 8 and according to TPS STDT00067 placed in the package AUTOSARPlatformBaseTypes eg AU TOSARPlatformBaseTypesuint32 whihc shall be supported for serialization are listed in Table 78 cSRSXfrm00101 Type Description Size bit Remark boolean TRUEFALSE value 8 FALSE 0 TRUE 1 uint8 unsigned Integer 8 uint16 unsigned Integer 16 uint32 unsigned Integer 32 uint64 unsigned Integer 64 sint8 signed Integer 8 sint16 signed Integer 16 sint32 signed Integer 32 sint64 signed Integer 64 float32 floating point number 32 IEEE 754 binary32 Single Preci sion float64 floating point number 64 IEEE 754 binary64 Double Preci sion Table 78 SwBaseType s supported for serialization The Byte Order is specified common for all parameters by byteOrder ofSOMEIP TransformationDescription See chapter 722 7242 Structured Datatypes structs SWSSomeIpXf00042 dA struct shall be serialized in order of depthfirst traversal c SRSXfrm00101 The transformer doesnt automatically align parameters of a struct 31 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 Insert reservedpadding elements into the AUTOSAR data type if needed for alignment since the SOMEIP implementation shall not automatically add such padding So if for example a struct includes a uint8 and a uint32 they are just written sequentially into the buffer This means that there is no padding between the uint8 and the first byte of the uint32 therefore the uint32 might not be aligned So the system designer has to consider to add padding elements to the data type to achieve the required alignment or set it globally Warning about unaligned structs or similar shall not be done in the implementation but only in the tool chain used to generate the implementation Messages of legacy busses like CAN and FlexRay are usually not aligned Warnings can be turned off or be ignored in such cases The SOMEIP transformer does not automatically insert dummypadding elements SOMEIP allows to add a length field of 8 16 or 32 bit in front of structs The length field of a struct describes the number of bytes of the