and ADAS A Session Establishment The rst target of the benchmark evaluation was the session establishment phase to measure the latency introduced before a service could be accessed To this end we developed two applications the former acts as a server offering 256different SOMEIP services The latter on the other hand concurrently requests a varying number of services ie implicitly starts the corresponding session establishment to evaluate how the handshake phase scales Technically speaking all authentication handshakes have been performed over UDP adopting RSA 2048 as a strong asymmetric cryptography algorithm for encryption and digital signatures Fig 4 presents the outcome of the evaluation when varying the amount of parallel session establishments Considering the dotted line as a reference the overall trend conrms the scalability of the approach proposed Indeed doubling the number of services resulted in an increase of less than double the total authentication overhead thanks to the efcient exploitation of the available parallelism B RunTime Protection Subsequently we studied the effects of the three available security levels on the transmission of actual SOMEIP packets while adopting vanilla vsomeip as a reference Concerning cryptography we selected ChaCha20Poly1305 as symmetric algorithm to secure both authentication and condentiality level services given its outstanding performance even without using hardware accelerators To account for multiple use cases and evaluate the different facets associated with the communication we adopted three complementary approaches 4httpsgithubcomnetgrouppolitosecurevsomeip 1 2 4 8 16 32 64 128 25664128256512102420484096 of concurrent session establishmentsTotal Elapsed Time msFig 4 Evaluation of the time required to concurrently complete multiple session establishments varying the handshake parallelism the dotted line represents a reference corresponding to a doubling in the elapsed time Namely we considered the effects on message roundtrip time RTT number of interactions per second IPS and throughput Additionally concerning overall performance we complemented the benchmarks with CPU usage measurements C Round Trip Time First we evaluated the transmission of periodic messages in absence of other trafc assessing the latency introduced by message authentication and condentiality To this end we measured the total time required for an application to send a request message and receive its corresponding response Hence it accounts for the computations performed by the middleware as well as the network overhead The benchmark has been repeated considering multiple payload sizes ranging from 1 to1024 bytes to evaluate how much it inuences the results Only the request was modied between different runs while the responses were characterized by the absence of the payload Concerning the topology both applications have been ini tially executed on the same device Thus vsomeip leveraged Unix domain sockets for the delivery of the packets and the CPU was actually shared by both parties halving the total computational capacity Yet this conguration is deemed to better highlight the effects ascribable to security being the network latency much smaller compared to a physical network Fig 5a presents the results obtained which elicit three main considerations First security obviously introduced an overhead in the message transmission accounting for about 25 the total RTT Yet authentication andcondentiality security levels appear to be characterized by almost the same results Second no signicant differences emerge varying the message size with the security overhead becoming a little more prominent only for the biggest payload Third the CPU usage was quite high during the entire evaluation indeed both applications were executed on the same ECU effectively doubling the values presented Yet it remained constant presenting no valuable deviations when increasing the security level Second we hosted the two applications on different ECUs to assess the overhead in case of actual network communication In this conguration the measured RTTs were almost one order of magnitude higher than the previous situation 25 ms due to physical network communication overhead Conversely the effects of security appeared to be way less prominent playing only a very small role in the total values Similarly the CPU load remained denitely low 5 being at the same time only slightly inuenced by cryptography13 Vanilla vsomeip Nosec level Authentication level Condentiality level iperf3 only graph c 001020304RTT ms 1 4 16 64 256 102402040 Payload size bytes CPU a 05101000IPS 1 4 16 64 256 102402040 Payload size bytes CPU b 0020406Thr Gbps UDP TCP0204060 Transport protocolCPU c Fig 5 Outcome of the benchmarks comparing vanilla vsomeip and our securityenhanced version in terms of a roundtriptime RTT in case of local communication b interactionspersecond IPS in case of local communication and c throughput in case of remote communication D Interactions Per Second Then we assessed the performance of secure SOMEIP under stress measuring the number of maximum interactions per second ie requests that an offerer can reply to in a given unit of time Although adopting a methodology similar to the RTT benchmarks the client was now congured to send the highest possible number of messages in parallel Fig 5b shows the outcome of the evaluation concerning local communication Generally speaking security features impacted for about 2530 without particular differences when varying the payload size or moving from the authentication to the condentiality security level Furthermore the results were denitely similar regardless of the type of communication adopted ie local or remote being the network overhead mitigated by the high number of parallel requests Additionally both benchmarks signicantly overloaded the CPU Indeed in case of local communication both the offerer and the requester were concurrently hosted by the same ECU thus halving the total computational capacity and corresponding to a total CPU usage slightly below 100 As for the remote communication benchmark instead the CPU load remained consistently around 75 Nonetheless the introduction of security did not cause signicant differences in the CPU load being all measurements contained in the same uncertainty band E Throughput Moving on we evaluated the performance concerning the transmission of high amounts of data eg video streams To this end we leveraged the publishsubscribe communication pattern the offerer continuously streams SOMEIP packets eventually consumed by one of more requesters Regarding the transport protocol we assessed both the usage of UDP given its support to multicast communication and TCP which is deemed to be more suitable for the transmission of large chunks of