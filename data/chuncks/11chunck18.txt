value None Description This service initializes the transformer for the further processing 5 76 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 4 Available via SomeIpXfh cSRSBSW00407 SRSBSW00411 835 SomeIpXfDeInit SWSSomeIpXf00182 d Service Name SomeIpXfDeInit Syntaxvoid SomeIpXfDeInit void Service ID hex 0x02 SyncAsync Synchronous Reentrancy Reentrant Parameters in None Parameters inout None Parameters out None Return value None Description This service deinitializes the transformer Available via SomeIpXfh cSRSBSW00407 SRSBSW00411 836 SomeIpXfGetVersionInfo SWSSomeIpXf00180 d Service Name SomeIpXfGetVersionInfo Syntaxvoid SomeIpXfGetVersionInfo StdVersionInfoType VersionInfo Service ID hex 0x00 SyncAsync Synchronous Reentrancy Reentrant Parameters in None Parameters inout None Parameters out VersionInfo Pointer to where to store the version information of this module Return value None Description This service returns the version information of the called transformer module Available via SomeIpXfh cSRSBSW00407 SRSBSW00411 77 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 84 Callback notifications There are no callback notifications 85 Scheduled functions SOMEIP Transformer has no scheduled functions 86 Expected interfaces There are no expected interfaces 78 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 9 Sequence diagrams There are no sequence diagrams applicable to SOMEIP Transformer 79 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 10 Configuration specification There is no module specific configuration available to the SOMEIP Transformer The EcuC defined in 3 ASWS Transformer General shall be used SWSSomeIpXf00185 dTheapiServicePrefix of the SOMEIP transformers EcuC shall be set to SomeIpXf cSRSBSW00159 80 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 A Referenced Meta Classes For the sake of completeness this chapter contains a set of class tables representing metaclasses mentioned in the context of this document but which are not contained directly in the scope of describing specific metamodel semantics Class ApplicationArrayDataType Package M2AUTOSARTemplatesSWComponentTemplateDatatypeDatatypes Note An application data type which is an array each element is of the same application data type Tags atprecommendedPackageApplicationDataTypes Base ARElement ARObject ApplicationCompositeDataType ApplicationDataType AtpBlueprint Atp Blueprintable AtpClassifier AtpType AutosarDataType CollectableElement Identifiable Multilanguage Referrable PackageableElement Referrable Attribute Type Mult Kind Note dynamicArray SizeProfileString 01 attr Specifies the profile which the array will follow if it is a variable size array element ApplicationArray Element01 aggr This association implements the concept of an array element That is in some cases it is necessary to be able to identify single array elements eg as input values for an interpolation routine Table A1 ApplicationArrayDataType Class ApplicationError Package M2AUTOSARTemplatesSWComponentTemplatePortInterface Note This is a userdefined error that is associated with an element of an AUTOSAR interface It is specific for the particular functionality or service provided by the AUTOSAR software component Base ARObject Identifiable MultilanguageReferrable Referrable Attribute Type Mult Kind Note errorCode Integer 01 attr The RTE generator is forced to assign this value to the corresponding error symbol Note that for error codes certain ranges are predefined see RTE specification Table A2 ApplicationError Class ApplicationPrimitiveDataType Package M2AUTOSARTemplatesSWComponentTemplateDatatypeDatatypes Note A primitive data type defines a set of allowed values Tags atprecommendedPackageApplicationDataTypes Base ARElement ARObject ApplicationDataType AtpBlueprint AtpBlueprintable AtpClassifier AtpType AutosarDataType CollectableElement Identifiable MultilanguageReferrable PackageableElement Referrable Attribute Type Mult Kind Note Table A3 ApplicationPrimitiveDataType 81 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 Class ArgumentDataPrototype Package M2AUTOSARTemplatesSWComponentTemplatePortInterface Note An argument of an operation much like a data element but also carries direction information and is owned by a particular ClientServerOperation Base ARObject AtpFeature AtpPrototype AutosarDataPrototype DataPrototype Identifiable Multilanguage Referrable Referrable Attribute Type Mult Kind Note direction ArgumentDirection Enum01 attr This attribute specifies the direction of the argument prototype serverArgument ImplPolicyServerArgumentImpl PolicyEnum01 attr This defines how the argument type of the servers RunnableEntity is implemented If the attribute is not defined this has the same semantics as if the attribute is set to the value useArgumentType for primitive arguments and structures Table A4 ArgumentDataPrototype Enumeration ArraySizeSemanticsEnum Package M2AUTOSARTemplatesCommonStructureImplementationDataTypes Note This type controls how the information about the number of elements in an ApplicationArrayDataType is to be interpreted Literal Description fixedSize This means that the ApplicationArrayDataType will always have a fixed number of elements Tags atpEnumerationLiteralIndex0 variableSize This implies that the actual number of elements in the ApplicationArrayDataType might vary at runtime The value of arraySize represents the maximum number of elements in the array Tags atpEnumerationLiteralIndex1 Table A5 ArraySizeSemanticsEnum Class AutosarDataType abstract Package M2AUTOSARTemplatesSWComponentTemplateDatatypeDatatypes Note Abstract base class for user defined AUTOSAR data types for software Base ARElement ARObject AtpClassifier AtpType CollectableElement Identifiable Multilanguage Referrable PackageableElement Referrable Subclasses AbstractImplementationDataType ApplicationDataType Attribute Type Mult Kind Note swDataDef PropsSwDataDefProps 01 aggr The properties of this AutosarDataType Table A6 AutosarDataType Class BaseType abstract Package M2MSRAsamHdoBaseTypes Note This abstract metaclass represents the ability to specify a platform dependent base type Base ARElement ARObject CollectableElement Identifiable MultilanguageReferrable Packageable Element Referrable Subclasses SwBaseType Attribute Type Mult Kind Note 5 82 of 107 Document ID 660 AUTOSARSWSSOMEIPTransformerSpecification of SOMEIP Transformer AUTOSAR CP R2111 4 Class BaseType abstract baseType DefinitionBaseTypeDefinition 1 aggr This is the actual definition of the base type Tags xmlroleElementfalse xmlroleWrapperElementfalse xmlsequenceOffset20 xmltypeElementfalse xmltypeWrapperElementfalse Table A7 BaseType Class BaseTypeDirectDefinition Package M2MSRAsamHdoBaseTypes Note This BaseType is defined directly as opposite to a derived BaseType Base ARObject BaseTypeDefinition Attribute Type Mult Kind Note baseType EncodingBaseTypeEncoding String01 attr This specifies how an object of the current BaseType is encoded eg in an ECU within a message sequence Tags xmlsequenceOffset90 baseTypeSize PositiveInteger 01 attr Describes the length of the data type specified in the container in bits Tags xmlsequenceOffset70 byteOrder ByteOrderEnum 01 attr This attribute specifies the byte order of the base type Tags xmlsequenceOffset110 memAlignment PositiveInteger 01 attr This attribute describes the alignment of the memory object in bits Eg 8 specifies that the object in question is aligned to a byte while 32 specifies that it is aligned four byte If the value is set to 0 the meaning shall be interpreted as unspecified Tags xmlsequenceOffset100 native DeclarationNativeDeclarationString 01 attr This attribute describes the declaration of such a base type in the native programming language primarily in the Programming language C This can then be used by a code generator to include the necessary declarations into a header file For example BaseType with shortName MyUnsignedInt native Declaration unsigned short Results in