the adversary has bounded computational power Specically he is assumed to be unable to subvert widely adopted cryptographic functions or break sufciently long secrets by brute force For the purpose of our analysis it is not relevant how the attacker obtained its access eg through software compromise or by connecting a physical device to the invehicle network for tuning reasons or by a dishonest repair shop Nonetheless we recognize that ECUs are completely accessible by possible hackers who can study and practice multiple attacks on their own vehicles before moving to the actual targets Hence to achieve a sufcient level of protection we suppose each ECU is equipped with a hardware secure storage preventing anattacker to access the cryptographic material At minimum the secure storage shall securely store and bind each private key to a specic application as well as guarantee the integrity of critical les eg the root digital certicate Yet the usage of hardware security modules in the automotive industry has already been envisioned quite a long time ago 39 B Security Granularity Compatibly with the serviceoriented paradigm adopted by SOMEIP our security framework operates at service instance granularity In other words every instance of a SOMEIP service is an atomic entity which from the security point of view every application is either allowed or denied access to This granularity level originates as a tradeoff between strong isolation pushing towards a very ne discrimination and the constrained resources available in vehicular networks Yet it is deemed not to introduce any particular limitations First services represent just a logical abstraction on the top of the applications implementing the actual functionalities ie multiple services can be provided by the same application Hence the security granularity ultimately depends on the architectural choices made by the designers in charge of deciding what to call a service Second services should inherently group together closely related operations intuitively associated with also similar security constraints and accessible by the same requesters Yet it might be reasonable to divide the functions only returning pieces of information ie getters and events from those modifying the environment the latter being possibly restricted to a narrower group of users C Security Levels Different services may be associated with different require ments in terms of security depending on the functionalities they provide and the corresponding degree of criticality Accounting for multiple use cases our framework provides three incremental security levels namely nosec authentication andcondentiality They can be independently assigned to each instance of a service to achieve the best trade off between protection and overhead 1 Nosec it is the simplest security level merely corre sponding to vanilla SOMEIP Albeit not providing any security property it may be suitable for very simple use cases since it introduces no additional communication overhead Additionally it ensures full compatibility with legacy applications imposing no modications to the message format 2 Authentication it provides data authentication and in tegrity Specically it ensures that the middleware processes only messages originating from a legitimate source ie authentication and authorization given they have not been modied while owing through the network ie integrity Additionally this security level provides replay protection In other words it identies and drops duplicate packets preventing an attacker from capturing valid messages to subsequently retransmit them and trigger multiple times the same action as well as cause application crashes Intuitively the security properties enforced by the authentication level are of the highest importance whenever a communication takes place Yet they6 are even more imperative in a vehicular network being cars safetycritical systems The higher the level of automation the more serious the potential effects in the automated driving era companies might be considered liable in case of incidents caused by malfunctioning software 3 Condentiality it ensures authentication authorization integrity and condentiality as well as replay protection In other words it includes all the security properties introduced by the authentication level complemented by encryption to prevent a possible attacker from accessing the contents of the messages transmitted across the network ie providing data condentiality Different use cases may justify the introduction of data condentiality First invehicle networks are no longer conned to sensor data Indeed GPS positioning advanced infotainment systems as well as the interconnection with personal devices eg smartphones produce a great amount of valuable data possibly revealing privacysensitive information about the driver and the passengers For instance a very simple device may be able to track all the movements of a vehicle simply eavesdropping the periodic messages advertised by the navigation system Additionally car manufacturers may be interested in ensuring data condentiality to prevent industrial espionage Indeed network messages may provide important hints to reconstruct the logic of complex and possibly distinctive systems especially those related to perception and automated driving Finally encryption might be leveraged to forbid nonauthorized aftermarket ECUs from reading the messages exchanged between the other devices Hence it provides a way to selectively limit their ability to grab external information D Expressing the Trafc Matrix One of the most distinctive aspects of our security framework resides in the usage of simple highlevel authorization policies to express the permitted trafc matrix ie the set of connections that are allowed to be established by the middleware Sticking to the SOMEIP jargon we delineate the conceptual format of each independent authorization rule as the 5tuple fappsrvinstrolemin SLg 1 where app identies the application to which the rule applies srvpoints out the SOMEIP service the rule refers to inst species either an explicit instance of srvto which the rule applies or contains a wildcard to extend its validity to any instance role denes the role app can assume for the considered service instance among offer ie implement the interface dened by the service and request ie consume the functionalities exposed by the service the offerer of a service instance is automatically allowed to request it minSLstates the minimum security level among nosec authentication andcondentiality the application requires to be enforced when accessing the service instance In other words each policy states that an application app is authorized to access a specic service instance fsrvinstg with a given role ie offer or request granted that its security