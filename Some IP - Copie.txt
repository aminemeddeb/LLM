What is someIP, some IP, SOMEIP, SOME ip?  
SOME/IP is an automotive middleware solution that can be used for control messages. It was designed from beginning on to fit devices of different sizes and different operating systems perfectly. This includes small devices like cameras, AUTOSAR devices, and up to head units or telematics devices. It was also made sure that SOME/IP supports features of the Infotainment domain as well as that of other domains in the vehicle, allowing SOME/IP to be used for MOST replacement scenarios as well as more traditional CAN scenarios.
 

Scalable Service-Oriented Middleware over IP ( SOME/IP ) is a communication middleware in the automotive sector, which is used in AUTOSAR , among other things . SOME/IP is the only solution that has supported both AUTOSAR platforms since the beginning of the Adaptive Platform. This makes SOME/IP very widely used as middleware for Ethernet communication in vehicles.
Publications on SOME/IP have been published since 2011 as part of the BMBF-funded SEIS project.
The first AUTOSAR specifications from SOME/IP were published in 2013 as part of the Classic Platform (version 4.1).

Components of SOME/IP
SOME/IP itself comprises several core components:

SOME/IP – Serialization and message exchange.
SOME/IP-SD – Service Discovery (SD) and Publish/Subscribe.
SOME/IP-TP – Transport Protocol (TP) for segmenting large messages.
The SOME/IP serialization was highly optimized for resource requirements in order to manage with few memory and CPU resources. Therefore, a binary and non-descriptive form of serialization was used.
Later, an incompatible, proprietary extension to a TLV -like serialization was defined. This extension attempts to achieve more flexibility through a TLV-like serialization at the expense of the resource requirements of the serialization.

Basics
SOME/IP is based on service-oriented communication. Control units act as both clients and servers and can therefore offer so-called services themselves or request services from other control units. In contrast to signal-oriented data transmission, messages are only sent when required. The advantage here is the significantly reduced bus load. However, this type of transmission requires that a server knows about every client that has requested something.

A client can use a SOME/IP-SD message to subscribe to a service, i.e. to show a need for a service. The server can confirm this request either positively or negatively. If the confirmation is positive, the server saves the client's connection data and can inform the client if necessary. A client can find out which services are offered within its network in two ways. Using a SOME/IP-SD Find Service message, it can actively search the network for certain services. If a server offers this service, it can respond. In addition, a server can use SOME/IP-SD Offer Service messages to broadcast the services it offers to all clients. The participants (clients) thus passively receive the services offered in the network.
A client can also send requests to a server without a subscription. In contrast to subscribed content, where the client usually wants to receive an automatic response every time the data changes, the client here requires a direct one-time response. Requests that do not require a response are also possible. [2]
SOME/IP is the first protocol in the automotive sector that does not use the classic approach of signal-based communication such as CAN / LIN / FlexRay or MOST .

Service Discovery
The SOME/IP-SD (Service Discovery) protocol regulates the provision of services and the sending of events. It was designed to ensure efficient unicast communication using SOME/IP. This can minimize data traffic on the bus and reduce the overall load. To ensure these requirements, Service Discovery includes the following set of messages that can be sent: [3]

Find Service – finds a service instance.
Offer Service – publishes a service instance.
Stop Offer Service – stops the availability of a service instance.
Subscribe Eventgroup – subscribes to the events and fields of an event group.
Stop Subscribe Eventgroup – stops a Subscribe Eventgroup entry.
Subscribe Eventgroup Ack – confirms a Subscribe Eventgroup entry.
Subscribe Eventgroup Nack – rejects a Subscribe Eventgroup entry.

Embassies
SOME/IP
A SOME/IP message can be separated into a header and a payload. Within the payload, data can be in Type-Length-Value format or Length-Value format.

Headers
The header contains the following information:

32-bit message ID that assigns the message to a specific service and method.
32-bit length field containing the length in bytes of the following information.
32-bit request ID, which assigns the message to a client and a session ID.
8-bit protocol version
8-bit interface version
8-bit message type, which includes a distinction between the different message types
8-bit return code, which indicates whether a request was processed correctly

Payload
A SOME/IP payload consists of data in TLV format. Both complex data types and simple data types can be used.

The following simple data types can be used  :
boolean: 8 bit field which can only take values ​​of 0 (False) or 1 (True).
uint8: unsigned integer with 8 bit size.
uint16: unsigned integer with 16 bit size.
uint32: unsigned integer with 32 bit size.
uint64: unsigned integer with 64 bit size.
sint8: signed integer with 8 bit size.
sint16: signed integer with 16 bit size.
sint32: signed integer with 32 bit size.
sint64: signed integer with 64 bit size.
float32: floating point numbers with 32 bit size.
float64: floating point numbers with 64 bit size.

The following complex data types can be used :
struct: A data structure that contains a predefined number of additional complex and/or simple data types.
string: Character string, typically containing data in ASCII, UTF-8, or UTF-16 format. Dynamic length strings include a length field at the beginning
array: A data structure that only contains elements of the same type. It can be a static array with a fixed length or a dynamic array with a variable length. A length field is used for dynamic arrays.
enumeration: an uint with the option of naming different values.
bitfield: 8, 16, or 32bit parameter where each bit value represents a Boolean value.
union: A parameter that can be interpreted as different data types at the same time.
The tag in TLV format in AUTOSAR consists of a wire type, the data ID and a potential length field. If it is a simple data type (wire type 0-3), the length field can be omitted, since the length of the data type is already defined by the wire type itself. The following wire types are defined  :
Wire Type	Following Data
0	8 Bit Data Base Datatype
1	16 Bit Data Base Datatype
2	32 Bit Data Base Datatype
3	64 Bit Data Base Datatype
4	Complex Data Type: Array, Struct, String, Union with length field of static size (configured in data definition)
5	Complex Data Type: Array, Struct, String, Union with length field size 1 byte (ignore static definition)
6	Complex Data Type: Array, Struct, String, Union with length field size 2 byte (ignore static definition)
7	Complex Data Type: Array, Struct, String, Union with length field size 4 byte (ignore static definition)

SOME/IP-SD
Service Discovery is based on the SOME/IP protocol and uses the header elements of the SOME/IP header already mentioned (with the exception of the message ID and the length field). This is followed by a 1-byte field with various flags. The following 3 bytes are reserved and not used. Entry arrays are present in the payload. The number of these is defined by a preceding length field. This is followed by an options array, also with a preceding length field.
Two types can occur in entry arrays, one for services and one for event groups.

An entry array element for services contains the following fields:
8-bit type, which can accept either Find (0x00) or Offer (0x01)
8-bit index containing the first index in the options entry for the first pass
8-bit index containing the first index in the options entry for the second pass
4-bits number of options 1st pass
4-bit number of options 2nd pass
16-bit service ID
16-bit instance ID
16-bit major version
24-Bit Time To Live
32-bit minor version

An entry array element for event groups contains the following fields: 
8-bit type, which can accept either SubscribeEventgroup/StopSubscribeEventgroup (0x06) or SubscribeEventgroupNack/SubscribeEventgroupAck (0x07)
8-bit index containing the first index in the options entry for the first pass
8-bit index containing the first index in the options entry for the second pass
4-bits number of options 1st pass
4-bit number of options 2nd pass
16-bit service ID
16-bit instance ID
16-bit major version
24-Bit Time To Live
16-bits Reserved
16-bit event group ID

An option array can contain additional information for the individual entries. It contains the following elements: 
8-bit length field containing the length in bytes of the configuration string.
4-bit type, with static value 0x01
4 bits reserved, with static value 0x00
Null terminated configuration string

A configuration string contains elements that correspond to the format [Length][Key][=][Value]. The string is terminated with a length field of the value 0, which specifies no subsequent elements.

Scalable service-Oriented MiddlewarE over IP (SOME/IP)
Overview
SOME/IP is an automotive middleware solution that can be used for control messages. It was designed from beginning on to fit devices of different sizes and different operating systems perfectly. This includes small devices like cameras, AUTOSAR devices, and up to head units or telematics devices. It was also made sure that SOME/IP supports features of the Infotainment domain as well as that of other domains in the vehicle, allowing SOME/IP to be used for MOST replacement scenarios as well as more traditional CAN scenarios.

SOME/IP supports a wide range of middleware features:

Serialization – transforming into and from on-wire representation.
Remote Procedure Call (RPC) and Messaging – implementing remote invocation of functions as well as other messages.
Service Discovery (SD) – dynamically finding and functionality and configuring its access.
Publish/Subscribe (Pub/Sub) – dynamically configuring which data is needed and shall be sent to the client.
Segmentation of UDP messages – allowing the transport of large SOME/IP messages over UDP without the need of fragmentation.
Serialization
The SOME/IP serialization was designed to be highly efficient; i.e. it uses the minimal RAM and CPU resources. This is achieved by using a binary and non-descriptive format. Basically all parameters are written behind each other. The format of a message is very similar or many cases exactly the same as the in-memory representation of the message (packed struct).

SOME/IP can serialize the following basic datatypes (datatypes are encoded per default in network byte order/big endian but can also encoded in little endian):

boolean: an 8bit field encoding False (0) or True (1). All other values are not allowed to be used.
uint8: unsigned integer with 8 bit size.
uint16: unsigned integer with 16 bit size.
uint32: unsigned integer with 32 bit size.
uint64: unsigned integer with 64 bit size.
sint8: signed integer with 8 bit size.
sint16: signed integer with 16 bit size.
sint32: signed integer with 32 bit size.
sint64: signed integer with 64 bit size.
float32: floating point numbers with 32 bit size.
float64: floating point numbers with 64 bit size.
SOME/IP can serialize the following complex datatypes:

struct: a parameter that combines a predefined list of parameters. A struct can start with an optional length field counting all bytes of the struct following the length field.
string: fixed length or dynamic length character strings transporting ascii, UTF-8, or UTF-16 characters. For dynamic length strings, the string starts with a big-endian encoded length field counting the bytes the string characters use.
array: a parameter that contains a repetition of the same parameter type. This can be predefined number or dynamic number of parameters. For arrays with dynamic length a length field is used.
enumeration: an uint with the option of naming different values.
bitfield: 8, 16, or 32bit parameter, with each bit representing a boolean. Each boolean can have a name as well as a name for the True and False value each.
union: a parameter that can carry a parameter of a predefined parameter type, which is determined at the runtime. The serialization uses a length field, type field, and the data of the parameter.
The size of length and type fields is 32 bit (default) and be be configured to be 0, 8, 16, or 32 bit. All length and type fields are encoded in network byte order/big-endian.

Remote Procedure Call (RPC) and Messaging
SOME/IP services support the following messages:

Request/Response Methods: A request sent from a client to the server and a response sent back from server to client. Additionally, SOME/IP allows error responses to be sent back from server to client instead of the regular response. This feature might be used to implement a different payload format in error cases.
Fire and Forget Methods: A request is sent from a client to the server.
Event: An event is sent from the server to a relevant clients. Which client needs this event will be determined via SOME/IP-SD.
Field: A field can have an option notifier (event to be sent cyclically or on-change), an optional setter (a request/response method to update the field), and an optional getter (a request/response method to read out the current value of the field.)
Proprietary extension to the SOME/IP serialization
SOME/IP already supports a lot of flexibility in the serilization of messages, like adding parameters to messages or inside structs later.

A proprietary extension (wrongly called a TLV extension at first) was added to SOME/IP in later AUTOSAR releases to support even more flexibility. Basically parameters and/or struct members can be prefixed with an Data ID and Length Indication. While this makes the serialization much less efficient, it adds flexibility, like removing parameters from messages or reordering parameters later. To use this feature, APIs and applications need to support this too.

Due to the limited flexiblity and the high overhead, this extension is currently NOT widely used.

Keep in mind that not all SOME/IP implementation support this extension since its not part of the original SOME/IP.

AUTOSAR support
SOME/IP is the only known middleware that was designed to be integrated into AUTOSAR 4.x releases:

AUTOSAR 4.0 – basic support for SOME/IP messages already existing.
AUTOSAR 4.1 – support for SOME/IP-SD and Publish/Subscribe was added.
AUTOSAR 4.2 – the transformer was added for serialization as well as other optimizations.
AUTOSAR 4.3 – fixing some transformer bugs, adding support for large UDP messages with SOME/IP-TP as well as SOME/IP-SD optimizations.

Publications
Articles & Papers
SOME/IP – Die Middleware für Ethernet-basierte Kommunikation
Dr. Lars Völker
Nov. 2013 / Article in Hanser automotive networks / German / cached content.
Presentations
The Road to SDV: how architectures lead the way
Dr. Lars Völker
May 2024 / Vehicle Electronics & Connected Services (VECS), Gothenburg, Sweden / English / slides (cached).

Is SOME/IP the right solution for the next 10 years of vehicles?
Dr. Lars Völker, Josetxo Villanueva, Jan Schäferling
Mar. 2024 / Automotive Ethernet Congress, Munich / English / slides (cached).

TCP and Automotive Ethernet – How to Resolve the Everlasting Struggle
Iago Alvarez, Karl Budweiser, Stefan Lachner, Dr. Lars Völker
Nov. 2022 / Ethernet & IP @ Automotive Technology Day, Yokohama / English / slides (cached) / external video.

Your Automotive Protocol Stack – A journey from specification to SOP
Dr. Lars Völker
Dec. 2020 / Nikkei BP, virtual / English / Slides.

Lessons learned of 10+ years Ethernet Development – Ways on keeping the complexity under control
Thomas Königseder and Dr. Lars Völker
Sep. 2020 / Ethernet & IP @ Automotive Technology Week, virtual / English / external slides.

SOME/IP Service Discovery – The need for Service Discovery in the Vehicle
Dr. Lars Völker
May 2014 / Vector Ethernet Symposium, Stuttgart / German + English / pdf (cached).

Communication protocols for Ethernet in the vehicle
Dr. Lars Völker
Dec. 2013 / Automotive BUS Systems + Ethernet, Sindelfingen / English / external slides.

SOME/IP Tutorial
Dr. Lars Völker
Oct. 2013 / OPEN Alliance Meeting before the 3rd Ethernet & IP @ Automotive Techday, Leinfelden-Echterdingen / English.

One for All, Interoperability from AUTOSAR to GENIVI
Lars Völker
Nov. 2011 / 1st Ethernet & IP @ Automotive Techday, Munich / English / pdf (cached).

Überblicksvortrag SEIS Teilprojekt 3
Lars Völker
Sep. 2011 / SEIS Statusseminar / German / pdf (cached).

Specification Drafts / Releases
SOME/IP – Scalable service-Oriented MiddlewarE over IP
Benjamin Krebs, Dr. Lars Völker
Jul. 2012 / pdf
First release with SOME/IP-SD and Magic Cookie Messages

SOME/IP – Scalable service-Oriented MiddlewarE over IP
Benjamin Krebs, Dr. Lars Völker
Nov. 2011
First public release.

Automotive Network Security
Overview
Automotive Network Security uses mostly known standards to protect communication inside the vehicle. Protocols like SSL/TLS, IPsec, and MACsec are also used in other industries and some additional automotive-specific solutions like SecOC exist.

The main difference between Network Security in vehicles and most other areas are in special aspects, like the startup time of the solutions. While in most industries the startup of a security solution may take seconds without problems, in the automotive use cases a startup in a few milliseconds is required.

This ECU and Network Test Specification  is designed to determine if a product conforms to specifications 
defined in OPEN Specification s or related requirements  This specification is a collection of all test cases 
which are recommend to be considered for automotive use and should be referred by car 
manufacturers within their quality control processes  
Sucessful execution and passing all relevant tests gives a De vice Under Test DUT a mimimum approval 
that the devices basic implementiations are done correctly  
 
This Test specification document is grouped in several chapters oriented on the scopes Automotive 
Ethernet  TCPIP Protocol Family  and  Automotive P rotocols  which are described in chapter 13 Tests are organized and identified with distinct IDs that relate to their scopes and a unique enumeration 
For every scope introduction chapters explain common requirements on the Device under Test the Test 
Setup and parameters used by the following tests  
Definition of Test Scopes  
Test Scope Automotive Ethernet  
Scope Automotive Ethernet includes the following ISOOSI layers  
 Layer 1 Physical Layer  BroadR Reach OABR  
 Layer 2 Data Link Layer eg IEEE Ethernet MAC  VLAN 8021Q  ARP  
Test Scope TCPIP Protocol Family  
Scope TCPIP Protocol Family includes the following ISOOSI layers  
 Layer 3 Network Layer eg IP  ICMP  
 Layer 4 Transport Layer eg UDP TCP DHCP  
Test Scope Automotive Protocols  
Scope Automotive Protocols includes the following ISOOSI layer  
 Layers 5 6 7 Application oriented layers eg UDP NM SOMEIP SD  

  
    
Version Control of Document  
Version  Author  Description  Date  
1.0 TC8 members  First release  15012016  
1.1 TKirchmeier 
BMW  Improvments regarding IPv4 test cases see change history  31052016  
1.2 TKirchmeier 
BMW  Improvments regarding UDP test cases see change history  29062016  
1.3 TKirchmeier 
BMW  Improvments regarding ICMPv4 test cases see change history  07092016  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Chapter 56 DHCPv4 Server deleted  19052017  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Improvements regarding TCP test cases see change history  23052017  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Added chapters  
614 Specification of the SOMEIP TestStub Enhanced 
Testability Service ETS  
616 Test Cases ETS  
 
Improvements regarding ARP test cases see change history  24.05.2017  
1.4 Georg Janker  Update of Layer 1 and Layer2 Chapters  24.05.2017  
1.5 Georg Janker  Update of AUTOSAR References for SOMEIP to 110  30.05.2017  
1.5 Georg Janker  Inserted Chapter 36 Referenced TC 11 Tests  30.05.2017  
1.6 Martin 
Heinzinger 
Ruetz System 
Solutions 
GmbH  Removed Port Disabling test and referenced to the 
corresponding TC11 Test  07062017  

  
1.7 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Deleted invalid or duplicate Test Cases See change history  20062017  
1.8 Frederic 
Garraud  Update 13 References  22062017  
1.9 Martin 
Heinzinger 
Ruetz System 
Solutions 
GmbH  Updated change history for L2 Switching  23062017  
 
 

Test Scope Automotive Protocols  
Scalable service Oriented MiddlewarE over IP Protocol SOMEIP  
General  
Reference d specification  
 
The scope of this chapter is to specify test cases for Scalable service Oriented MiddlewarE over IP 
Protocol from the following standards  
 Specification of Service Discovery V120 R41 Rev 3  
 Example for a Serialization Protocol SOMEIP V110 R41 Rev 3  
5112  Simulated topologies  
 
5113  Required topology related configuration  
 
Tester configuration required for the tests in the following sections pertaining to SOMEIP  tests  
 
 Correct DUT IP Address for DUT interface connected to TESTER interface  
 All the test cases in this suite require DUT to be configured with only one IP interface  
5114  Coverage  
  Specification Document  Section   
Number  Test Category           Test Numbers       
Specification of Service 
Discovery V120 R41 Rev 
3  73  Message format  SOMEIPSRVFORMAT01 to 
SOMEIPSRVFORMAT27  
Specification of Service 
Discovery V120 R41 Rev 
3  739  Options Array  SOMEIPSRVOPTIONS01 to 
SOMEIPSRVOPTIONS15  
Specification of Service 
Discovery V120 R41 Rev 745  StopOfferService entry  SOMEIPSRVSDBEHAVIOR05  HOST 
1HOST 1 DIface 0 TIface 0 
ECU 
DUT 
TOPOLOGY 1                  TOPOLOGY 1 

  
    
   3  
Specification of Service 
Discovery V120 R41 Rev 
3  7462  StopSubscribeEventgroup 
entry  SOMEIPSRVSDBEHAVIOR0 6 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67411  Find Service Entry  SOMEIPSRVSDMESSAGE01 
to 
SOMEIPSRVSDMESSAGE06  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67412  Offer Service Entry  SOMEIPSRVSDMESSAGE07 
to 
SOMEIPSRVSDMESSAGE09  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67413  Stop Offer Service Entry  SOMEIPSRVSDMESSAGE10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67421  Subscribe Eventgroup 
Entry  SOMEIPSRVSDMESSAGE11  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67422  Stop Subscribe 
Eventgroup Entry  SOMEIPSRVSDMESSAGE12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67423  Subscribe Eventgroup 
Acknowledgement Entry  SOMEIPSRVSDMESSAGE13  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67424  Subscribe Eventgroup 
Negative 
Acknowledgement Entry  SOMEIPSRVSDMESSAGE14 
to 
SOMEIPSRVSDMESSAGE19  
Example for a Serialization 
ProtocolSOMEIP V110  
R41 Rev 3  6751  Startup Behavior  SOMEIPSRVSDBEHAVIOR01 
to 
SOMEIPSRVSDBEHAVIOR02  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6752  Server Answer Behavior  SOMEIPSRVSDBEHAVIOR03 
to 
SOMEIPSRVSDBEHAVIOR04  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  61  Definition of Identifiers  SOMEIPSRVBASIC01 to 
SOMEIPSRVBASIC03  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  62311  Mapping of IP Addresses 
and Ports Respons e and 
Error Messages  SOMEIPSRVONWIRE01 to 
SOMEIPSRVONWIRE12  

  
    
   Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  62321  Structure of the Message 
ID  SOMEIPSRVONWIRE02  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6234  Request ID  SOMEIPSRVONWIRE03 to 
SOMEIPSRVONWIRE04  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6235  Protocol Version  SOMEIPSRVONWIRE05  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6236  Interface Version  SOMEIPSRVONWIRE05 6 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6237  Message Type  SOMEIPSRVONWIRE07 to 
SOMEIPSRVONWIRE10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6238  Return Code  SOMEIPSRVONWIRE11 to 
SOMEIPSRVONWIRE12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6312  TCP Binding  SOMEIPSRVRPC01 
SOMEIPSRVRPC02 
SOMEIPSRVRPC17  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  635  Fields  SOMEIPSRVRPC03 
SOMEIPSRVRPC11 
SOMEIPSRVRPC12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  633  FireForget 
Communication  SOMEIPSRVRPC04  
SOMEIPSRVRPC0 5 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6362  Return Code  SOMEIPSRVRPC06 to 
SOMEIPSRVRPC10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6313  Multiple Service Instances  SOMEIPSRVRPC13  
SOMEIPSRVR PC1 4 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6341  Strategy for sending 
notifications  SOMEIPSRVRPC15  
SOMEIPSRVRPC1 6 
 
 

  
    
  Parameters used in the tests  
  User defined configuration parameters for IUT  
Parameter used in 
test Description  
Listen Time Setting  This is the maximum time interval for which anvl waits for a packet for cases 
when a certain event has been triggered on the DUT either by some protocol 
timer or using some external mechanism script  
Default 10  
Tolerance Time 
Setting  Tolerance time associated with an event When waiting or listening then this 
number will be added with the actual wait time or listen time  
Default 1  
Process Time 
Setting  This is the time DUT appoximately takes to process packet ANVL uses this 
process time added with listen time for some time critical situation while 
listening for DUT Responses  
Default 2  
Millisec Tolerance 
Time Setting  Tolerance time associated with some event in Millisecond When waiting or 
listening then this  number will be added with the actual wait time or listen 
time This is currently used in case of DUTs responses are in millisecond interval  
Default 100  
DUT Supports Error 
Messages Setting  This is used to indicate whether DUT supports SOMEIP Error messages  
Default false  
DUT Supports SD 
Reception via Unicast 
Setting  This is Used to indicate whether DUT supports SD message reception via 
Unicast  
Default true  
DUT Supports 
Multiple Service 
Instances Setting  This is Used to indicate whether DUT sup ports Multiple instances of SAME 
service  
Default false  
Server Unknown 
Method ID Setting  This is a Method ID value that is not implemented in DUT and not listed in xml 
specification as well  
Default 15  

  
    
   Server Unknown 
Interface Version 
Setting  This is a Service Interface version value that is not implemented in DUT and not 
listed in xml specification as well  
Default 0xFF  
Server Unknown 
Service ID Setting  This is a Service ID value that is not implemented in DUT and not listed in xml 
specification as well  
Default 0xFF  
Server Unknown 
EventGroup ID 
Setting  This is an Eventgroup ID value that is not implemented in DUT and not listed in 
xml specification as well  
Default 50  
Server Interface 
Specification 
XMLSetting  This is path for SOMEIP Service Interface Specification XML file  
Default  someipserverspecxml  
5122  User defined configuration parameters for TESTER  
Parameter used in test  Description  
DIface n  nth Interface of DUT  
SERVICE ID1  Service ID of Service 1  
SERVICE ID2  Service ID of Service 2  
SERVICE ID1INSTANCE ID  Instance ID of Service 1  
SERVICE ID1MAJ VER  Major version supported by Service 1  
SERVICE ID1INTF VERMAJ  Interface Version of Service 1  
SERVICE ID2INTF VERMAJ  Interface Version of Service 2  
SERVICE ID1TTL  TTL value of Service 1  
SERVICE ID1MINOR VER  Minor version supported by Service 1  
SERVICE ID1INST 1  First Instance ID of Service 1  
EVENT GROUP ID2  Eventgroup ID 2  
EVENT GROUP ID1SI1  Eventgroup ID 1 of Service 1  
SERVICE ID1UDP PORT  UDP port number where Service 1 runs  
SOMEIPMULTICASTIPADDR  Multicast Address used by SOMEIP SD  
CLIENT1 CURR REQUEST ID  Current Request ID of Client 1  
EVENT ID1EGID1  Event ID 1 of Eventgroup ID 1  
EVENT ID2EGID1  Event ID 2 of Eventgroup ID 1  
EVENT ID2EGID2  Event ID 2 of Eventgroup ID 12  
EVENT ID2EGID1CYCLIC TIME  Cycle Time of Event ID 2 of Eventgroup 1Here Event ID 
1 is assumed to be a cyclic event  
EVENT GROUP ID1SI1
MulticastAddr  Muticast Address of Eventgroup 1 of Service 1 where 
the event and notifications will be multicast  

  
    
   UNKNOWN SERVICE ID  Invalid Service ID  
UNKNOWN EVENT GROUP ID  Invalid Eventgroup ID  
UNKNOWN METHOD IDSI1  Invalid Method ID of Service ID 1  
UNKNOWN INTF VERMAJ SI1  Invalid Interface Version of Service ID 1  
SERVICE ID1REPBASE INTV  Repetition Base Interval of Service 1  
SERVICE ID1TOTAL REPINTV  Total Repetition Period of Service 1 Calculated using 
Repetition max value as  Repetitionbaseintv  2  
repetitonmax  1  
SERVICE ID1INITIAL WAIT TIME  Initial Wait tim e for Service 1  
SERVICE ID1CYCLE INTV  Offer Cycle interval of Service 1  
METHOD ID1SI1  First InOut Type Method Listed in XML file for Service 1  
METHOD ID1SI2  First InOut Type Method Listed in XML file for Service 2  
SERVICE ID2TRANSPORT PORT  Transport port of Service ID 2UDPTCP  
SERVICE ID2INITIAL WAIT TIME  Time taken by the DUT before Sending Offer Service 
message  
SERVER1 IPADDR  IP Address of SOMEIP SD Server 1  
CLIENT1 IPADDR  ANVL client1 IP address  
CLIENT1 UDP PORT  ANVL client1 UDP port  
FOREGROUND  Boolean value set to false to indicate script running in 
foreground  
BACKGROUND  Boolean value set to true to indicate script running in 
background  
ParamToleranceTime  This is tolerance time taken from parameter file  
CLIENT1 LISTEN TIME  Listen time used by ANVL taken from parameter file  
BUSY WAIT  It is to indicate ANVL will be listening to incoming 
packets while waiting  
LAZY WAIT  It is to indicate ANVL will not be listening to incoming 
packets while waiting  
ListenTime  This is the maximum time interval for which anvl waits 
for a packet for cases when a certain event has been 
triggered on the DUT either by some protocol timer or 
using some external mechanism script  
Default 10 second  
ToleranceTime  Tolerance time associated with an event When waiting 
or listening then this number will be added with the 
actual wait time or listen time  
Default 1 second  
513  Terminology us ed in Test Procedure  
 
Name  Description  
TESTER  Entity which is responsible for validating the Device 
under Test DUT  
DUT  Device under Test  

  
    
  Specification of the SOMEIP TestStub Enhanced Testability Service 
ETS  
5141  Introduction  
51411  Overview  
Defined interfaces are needed to test SOMEIP 1 In order to allow for generic testing tools and test 
cases this interface needs to be defined and possibly standardized This interface and the functionality 
behind it are called Enhanced Testability Serv ice ETS   
The protocol parts currently being addressed by the Enhanced Testability Service include  
SOMEIP Stack  Service Discovery  
SOMEIP Stack  Serialization  
SOMEIP Stack  Remote Procedure Call  
SOMEIP Stack  Service Discovery  
SOM EIP Stack  PublishSubscribe  
 
The Enhanced Testability Service further allows different categories of tests eg when used in 
component testing scenarios for devices under test DUTs These include positive tests testing using 
valid messages negati ve tests testing error handling load testing and regression testing  
51412  References  
1 SOMEIP Protocol Spec ification AUTOSAR FO Release 11 0 
2 SOMEIP Service Discovery Protocol Spec ification AUTOSAR FO Release 11 0 
5142  Enhanced Testability Service  
 
Table 1 List of Methods  
Method  ID FireForget  
checkByteOrder  31 0x1F   

  
    
  clientServiceActivate  47 0x2F  X 
clientServiceDeactivate  48 0x30  X 
clientServiceCallEchoUINT8Array  49 0x31   
clientServiceSubscribeEventgroup  50 0x32  X 
echoCommonDatatypes  35 0x23   
echoENUM  23 0x17   
echoExtendedDatatypes  36 0x24   
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39   
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38   
echoFLOAT64  18 0x12   
echoInt64  52 0x34   
echoINT8  14 0x0E   
echoStaticUINT8Array  54 0x36   
echoSTRUCT  24 0x18   
echoSTRUCTSimple  64 0x40   
echoTYPEDEF  26 0x1A   
echoUINT64  51 0x33   
echoUINT8  8 0x08   
echoUINT8Array  9 0x09   
echoUINT8Array8BitLength  62 0x3E   
echoUINT8Array16BitLength  63 0x3F   
echoUINT8Array2Dim  53 0x35   
echoUINT8ArrayMinSize  55 0x37   
echoUINT8E2E  11 0x0B   
echoUINT8RELIABLE  10 0x0A   
echoUNION  25 0x19   
echoUTF16DYNAMIC  22 0x16   
echoUTF16FIXED  20 0x14   
echoUTF8DYNAMIC  21 0x15   

  
    
 echoUTF8FIXED  19 0x13   
resetInterface  1 0x01  X 
suspendInterface  2 0x02  X 
triggerEventUINT8  3 0x03  X 
triggerEventUINT8Array  4 0x04  X 
triggerEventUINT8E2E  6 0x06  X 
triggerEventUINT8Reliable  5 0x05  X 
triggerEventUINT8Multicast  58 0x3A  X 
clientServiceGetLastValueOfEventTCP  59 0x3B   
clientServiceGetLastValueOfEventUDPUnicast  60 0x3C   
clientServiceGetLastValueOfEventUDPMulticast  61 0x3D   
echoBitfields  65 0x41   
 
Table 2 List of Events and Fields  
Type  Name  ID Eventgroups  
0x0002  0x0005  0x0006  
Event  TestEventUINT8  0x8001  x x   
Event  TestEventUINT8Array  0x8002  x x   
Event  TestEventUINT8E2E  0x8004  x x   
Event  TestEventUINT8Reliable  0x8003  x    
Event  TestEventUINT8Multicast  0x800B  x x x 
Field  InterfaceVersion  0x8005 Notify  x x   
0x25 Getter  x x   
Field  TestFieldUINT8  0x8006 Notify  x x   
0x26 Getter  x x   
0x27 Setter  x x   
Field  TestFieldUINT8Array  0x8007 Notify  x x   
0x28 Getter  x x   
0x29 Setter  x x   
Field  TestFieldUINT8Reliable  0x8008 Notify  x    
0x2A Getter    
x     
0x2B Setter    
x     
  
 

  
    
  SOMEIP Service Discovery SOMEIP SD 
 
Several methods of the Enhanced Testability Service are used to test SOMEIP SD 
 
 
Figure 1 SOMEIP SD state machine of testing methods  
Method  ID 
resetInterface   1 0x01  
 
This method resets the interface to default values  
stm Serv ice Discov ery
Serv ice up Serv ice down
suspendinterface

  
    
    
Figure 2 resetInterface  
 
51431  Suspending an SOMEIP Interface suspendInterface  
Method  ID 
suspendInterface   2 0x02  
 
This method allows to suspend the Enhanced Testability Service thus forcing the DUT to stop offering 
the service and start to reoffer the service after a given time  
 
The input parameters include  
 
 Start  wait time in seconds before the service shall be stopped  
 Duration  wait time in seconds during between stopping the service and reoffering it again  
 
sd resetinterface
service
DUT Testabilityclient
PC TestabilityClient
Resets interface to 
default valuesPrecondition

Postcondition
resetInterface

  
    
    
Figure 3 suspendInterface  
51432  Testing Client Interaction  
In order to test the correct function as a client the Enhanced Testability Service supports the following 
methods  
Method  ID 
clientServiceActivate  47 0x2F  
clientServiceDeactivate  48 0x30  
clientServiceCallEchoUINT8Array  49 0x31  
clientServiceSubscribeEventgroup  50 0x32  
clientServiceGetLastValueOfEventTCP  59 0x3B  
clientServiceGetLastValueOfEventUDPUnicast  60 0x3C  
clientServiceGetLastValueOfEventUDPMulticast  61 0x3D  
 
The commands clientServiceActivate  and clientServiceDeactivate shall instruct the DUT if it shall start its 
SOMEIP client thus they control when the system shall start finding the Enhanced Testability Service 
with the special configurable Instance ID for example 0x00f4   
sd suspendinterface
service
DUT Testabilityclient
PC TestabilityClient
Wait start seconds to 
suspend
Stay duration 
seconds in suspend 
moderefserv icediscov eryrefserv icediscov eryresumePrecondition

Postcondition
suspendInterfaceduration start

  
    
   Using clientServiceEchoUINT8Array the sys tem shall call back the echoUINT8Array method with the 
parameter given and shall return the returned value  
The clientServiceSubscribeEventgroup shall trigger the subscription behavior in Service Discovery  
To ease testing all methods shall support a wait time  so that the reaction of the system can be delayed  
Following methods return the last received value of TestEventUINT8Reliable TestEventUINT8 and 
TestEventUINT8Multicast  respectively  
 clientServiceGetLastValueOfEventTCP  
 clientServiceGetLastValueOfEv entUDPUnicast  
 clientServiceGetLastValueOfEventUDPMulticast  
 
5144  SOMEIP Serialization  
51441  Checking the Byte Order checkByteOrder  
Method  ID 
checkByteOrder   31 0x1F  
 
This method is used to test the correct handling of the byte order  
The input parameters include a uint8 and a big endian uint16 which shall be added and returned as 
output parameter in uint32 big endian  

  
    
    
Figure 4 checkByteOrder  
 
51441  Common Data Types echoCommonDatatypes  
Method  ID 
echoCommonDatatypes   35 0x23  
 
This method can be used to test the common data types  
The input parameters shall be echoed back in reversed order   
 
sd checkbyteorder
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
checkByteOrdersummandUINT8 summandUINT16
request
addValues
checkByteOrdersum
response

  
    
    
Figure 5 echoCommonDatatypes  
 
51442  Complex Data Types echoExtendedDatatypes  
Method  ID 
echoExtendedDatatypes   36 0x24  
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39  
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38  
 
This method is used to test the complex data types  
The regular variant uses the recommended size of 32bit for length fields type fields and array length 
fields  
The other variants change this to 16 bits or 8 bits respectively  
 
sd echocommondatatypes
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
echoCommonDatatypesbOOLEAN uINT8 uINT16 uINT32 iNT8 iNT16 iNT32 fLOAT32 fLOAT64
request
echoCommonDatatypesfLOAT64 fLOAT32 iNT32 iNT16 iNT8 uINT32 uINT16 uINT8 bOOLEAN
response

  
    
    
Figure 6 echoExtendedDatatypes  
 
51443  Echoing data types  
Method  ID 
echoCommonDatatypes  35 0x23  
echoENUM  23 0x17  
echoExtendedDatatypes  36 0x24  
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39  
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38  
echoFLOAT64  18 0x12  
echoInt64  52 0x34  
echoINT8  14 0x0E  
echoStaticUINT8Array  54 0x36  
echoSTRUCT   24 0x18  
echoSTRUCTSimple  64 0x40  
echoTYPEDEF  26 0x1A  
echoUINT64  51 0x33  
echoUINT8  8 0x08  
echoUINT8Array  9 0x09  
echoUINT8Array8BitLength  62 0x3E  
echoUINT8Array16BitLength  63 0x3F  
echoUINT8Array2Dim  53 0x35  
echoUINT8ArrayMinSize  55 0x37  
echoUINT8E2E  11 0x0B  
echoUINT8RELIABLE  10 0x0A  
echoUNION  25 0x19  
echoUTF16DYNAMIC  22 0x16  
sd echoextendeddatatypes
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
echoExtendedDatatypesinputData
request
echoExtendedDatatypesreturnData
response

  
    
   echoUTF16FIXED  20 0x14  
echoUTF8DYNAMIC  21 0x15  
echoUTF8FIXED  19 0x13  
echoBitfields  65 0x41  
 
A set of methods exist to test a multitude of data types such as bool uint8 uint16 uint32  Only 
three examples are shown in the diagram Keep  in mind that some of the echo routines echo back the 
parameters in another order as the parameters coming in The configuration FIBEXARXML describes 
this in detail  
 
The method echoUINT8 returns the UINT8 value  In this case it sent via UDP  
The echoUDP8Reliable uses TCP instead  
The echoUINT8E2E  uses End toEndprotection  
 

  
        
Figure 7 echoUINT8echUINT8reliableechoUINT8E2E  
 
51444  Testing Events  
Method  ID 
triggerEventUINT8  3 0x03  
triggerEventUINT8Array  4 0x04  
sd echomsg
service
DU Testabilityclient
PC TestabilityClient
alt 
UINT8
UINT8Reliable
UINT8E2EPrecondition

Postcondition
echoUINT8uINT8Value
echoUINT8uINT8ReturnValue
echoUINT8ReliableuINT8Value
echoUINT8ReliableuINT8ReturnValue
echoUINT8E2EcRCId alive cRC uINT8Value
echoUINT8E2EcRCId alive cRC uINT8Value

  
    
   triggerEventUINT8E2E  6 0x06  
triggerEventUINT8Reliable  5 0x05  
triggerEventUINT8Multicast  58 0x3A  
 
After the method triggerEventUINT8Reliable  start duration debounceTime was invoked the service 
Testability waits start seconds and triggers a periodical event testEventUINT8ReliableuINT8Value 
with the passed duration and debounce time  The transport protocol of the event message is TCP  
 
There are more test events and the correspondi ng trigger methods available also for other passed 
datatypes The  diagram below only shows one example  
The full list can be found in the service catalog  
 
 
Figure 8 triggerEventUINT8Reliable  
After th e method triggerEventUINT8Arraystart duration debounceTime was invoked the service 
Testability waits start seconds and triggers a periodical event testEventUINT8ArrayuINT8Array with 
the passed duration and de bounce time  
The transport protocol for  both the trigger method and the event is UDP  
 
sd triggerev entreliable
service
DUT Testabilityservice
PC TestabilityClient
Precondition
Client notified to corresponding event group
Periodically in 
debouncetimeloop loopev ents
Postcondition
triggerEventUINT8Reliablestart duration debounceTime
waitstart
testEventUINT8ReliableuINT8Value

  
    
   There are more test events and the corresponding trigger methods available also for other passed 
datatypes The  diagram below only shows one example  
The full list can be found in the service catalog  
 
 
Figure 9 triggerEventUINT8Array  
 
The other triggerEvent methods run as follows E2E methods always use End toEnd protection  
 
 
 
 
51445  Testing fields getter setter notify  
Different test fields are available to test the corresponding getter methods both unreliable via UDP and 
reliable via TCP  The full list of test fields is documented in the service catalog  
sd triggerev entunreliable
service
DUT Testabilityservice
PC TestabilityClient
Precondition
Client notified to corresponding event group
loop loopev ents
Postcondition
triggerEventUINT8Arraystart duration debounceTime
waitstart
testEventUINT8ArrayuINT8Array

  
    
  750  
 
Figure 10 getFieldtestFieldUINT8getFieldtestFieldUINT8Rel iable  
 
Different test fields are available to to test the corresponding setter methods both unreliable via UDP 
and reliable via TCP  The full list of test fields is documented in the service catalog  
sd fieldsgetValue
service
PC TestabilityClientservice
DUT Testability
Precondition
client notified to corresponding event group
alt reliability
udp
tcp
Postcondition
getFieldtestFieldUINT8
getFieldtestFieldUINT8UINT8
getFieldtestFieldUINT8Reliable
getFieldtestFieldUINT8ReliableuINT8Field

  
    
  751  
Figure 11 setField testFieldUINT8s etFieldtestFieldUINT8Reliable  
 
Different  test fields are available to  test the corresponding notifier events both unreliable via UDP and 
reliable via TCP  Additionally  the value of the test fields is updated periodically to trigger a notification 
event  The full list of test fields is documented in the service catalog  
sd fieldssetValue
service
DUT Testabilityservice
PC TestabilityClient
Precondition
client notified to corresponding event group
alt reliability
udp
tcp
Postcondition
setFieldtestFieldUINT8uINT8Field
setFieldtestFieldUINT8uINT8Field
setFieldtestFieldUINT8ReliableuINT8Field
setFieldtestFieldUINT8ReliableuINT8Field

  
    
  752  
Figure 12 notifyFieldtestFieldUINT8  
 
 
 
 
 
  
sd fieldsnotify
service
PC TestabilityClientservice
DUT Testability
Client is subscribed to field
Same behaviour for TCP and UDP field
Field changes by setValue calls and periodically in 500ms intervalls
loop periodic 500ms
opt 
500ms timeout 
Change in field
Postcondition
setFieldtestFieldUINT8UINT8
setFieldtestFieldUINT8uINT8Field
notifyFieldtestFieldUINT8uINT8Field

  
    
  753 5145  SOMEIP Service Discovery  
 
Testing SOMEIP SD does not require additional testing methods but can be achieved with the above 
mentioned commands especially from Sections 51432  and 5144  
  

  
    
  754 515  Test Cases SOMEIP Server  
5151  Setup Verification  
SOMEIPSRVSETUP 01  Service Discovery Offer Message  
Synopsis  Setup Verification for SOMEIP and SOMEIP SD TESTER expects Service 
Discovery Offer Message from DUT  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Type is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Type is set to 0x01  
Reference  Setup Verification MUST  
Notes   

  
    
  755 SOMEIPSRVSETUP 02  DUT Sends SOMEIP Response Message  to SOMEIP Request 
Message  
Synopsis  Setup Verification  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the 
following informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
4 DUT Sends SOMEIP Response Message  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Response Message  
Reference  Setup Verification MUST  
Notes   

  
    
  756 5152  Message  Forma t 
SOMEIPSRVFORMAT 01  Client ID   
Synopsis  The Client ID shall be set statically to 0x0000  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Client ID is set to 0x0000  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Client ID is set to 0x0000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00033 Page 23 Message format MUST  
Notes   

  
    
  757 SOMEIPSRVFORMAT 02  Session ID  
Synopsis  After initialization of the Service Discovery Module the Session ID for 
messages sent by the local ECU shall be 0x0001  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto SERVICE ID1INITIALWAIT
TIME  
        CLIENT1 LISTENTIME second on DIface 0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verif y that received SOMEIP Notification Message 
contains  
         Session ID is set to 0x0001  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Session ID is set to 0x0001  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00034 Page 23 Message format MUST  
Notes   

  
    
  758 SOMEIPSRVFORMAT 03  Protocol Version  
Synopsis  The value for the Protocol Version field shall be statically set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notif ication Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Protocol Version is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Protocol Version is set to 0x01  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00141 Page 24 Message format MUST  
Notes   

  
    
  759 SOMEIPSRVFORMAT 04  Interface Version  
Synopsis  The value for the Interface Version field shall be statically set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Interface Version is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Interface Version is set to 0x01  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00143 Page 24 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 05  Message Type  
Synopsis  The value for the Message Type field shall be statically set to 0x02  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upt o ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00145 Page 24 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 06  Return Code  
Synopsis  The Return Code field shall be statically set to 0x00 Note This test case is for 
SD message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Return Code is set to 0x00  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Return Code is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00147 Page 25 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 07  Reboot Flag  
Synopsis  The Reboot Flag shall be set to 1 for all messages after reboot until the Session ID 
of the Request ID field wraps and thus starts with 0x0001 again After that the 
Reboot Flag shall be set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Listens upto ParamListenTime on DIface 
0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Reboot Flag bit is set to 1  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Reboot Flag bit is set to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00151 Page 25 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 08  Unicast Flag   
Synopsis  The Unicast Flag of the Flag field shall be set to Unicast Flag and shall be set to 
1 meaning This ECU supports receiving Unicast messages  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Unicast Flag bit is set to 1  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVIC EID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Unicast Flag bit is set to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00153 Page 26 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 09  Undefined bits in the Flag field  
Synopsis  Undefined bits within the Flag field shall be statically set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens  upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Six Flag bits other than Reboot and Unicast bits is set 
to 0 
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Six Flag bits other than Reboot and Unicast bits is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00154 Page 26 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT10 Reserved bits  
Synopsis  All bits of the Reserved field shall be statically set to 0 binary  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that receive d SOMEIP Notification Message 
contains  
         Reserved is set to 0x000000  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Reserved is set to 0x000000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00156 Page 26 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT11 L ength of the Type 1 Entry  
Synopsis  The length of the Type 1 Entry shall be 16 bytes Note  Offer Service is unnder 
Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEI P Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Type is set to 0x01  
         Entry Length is set to NumberOfEntries16  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informat ions 
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Type is set to 0x01  
 Entry Length is set to NumberOfEntries16  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00160 Page 27 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT12 Index First Option Run  of the Type 1 Entry  
Synopsis  The Index First Option Run field of the Type 1 Entry format  layout shall carry 
the index of the first option of the first option run of this entry in the option array 
Note  Offer Service is under Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIP ENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Index 1st Option in Entry Array is set to 0  
6 DUT CON FIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Index 1st Option in Entry Array is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00164 Page 28 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT13 Number of Option 1  of the Type 1 Entry  
Synopsis  SWSSD00168 The Number of O ption 1 of the Type 1 Entry format layout 
shall carry the number of options the first option run uses Note  Offer Service is 
under Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPE NTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Num of Opt 1 in Entry Array is greater than or equal to  
1 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Num of Opt 1 in Entry Array is greater than or equal to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00168 Page 28 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT14 Service ID field of the Type 1 Entry  
Synopsis  The Service ID field of the Type 1 Entry format layout shall carry the Service ID of 
the service statically configured using the parameter SdServerServiceID and 
SdClientServiceID depending on being a server or client entry Note  Offer Service 
is unnder  Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00173 Page 29 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT15 Instance ID field of the Type 1 Entry  
Synopsis  The Instance ID field of the Type 1 Entry format layout shall carry the Instance ID 
of the service statically configured using the parameter SdServerServiceInstanceID 
and SdClientServiceInstanceID depending on being a server or client entry Note  
Offer  Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Instance ID in Entry Array is set to  
           SERVICE ID1INSTANCE ID 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Instance ID in Entry Array is set to  
SERVICE ID1INSTANCE ID 
Reference  Specification of Service Discovery  V120 R41 Rev 3 Section 73 
SWSSD00175 Page 29 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT16 Major Version field of the Type 1 Entry  
Synopsis  The Major Version field of the Type 1 Entry format layout shall carry the 
SdServerServiceMajorVersion and SdClientServiceMajorVersion depending on 
being a server or client entry Note  Offer Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Insta nces  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification  Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00178 Page 29 Message form at MUST  
Notes   

  
    
   SOMEIPSRVFORMAT17 TTL field of the Type 1 Entry  
Synopsis  The TTL field of the Type 1 Entry format layout defines the lifetime of the entry in 
seconds configured using the parameter SdServerTimerTTL and 
SdClientTimerTTL except for St opEntries which have a TTL of 0 Note  Offer 
Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIP ENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00180 Page 29 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT18 Minor Version field of the Type 1 Entry  
Synopsis  The Minor Version field of the Type 1 Entry format layout shall carry the 
SdServerServiceM inorVersion and SdClientServiceMinorVersion Note  Offer 
Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type  set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE Stop Service on DIfa ce0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00182 Page 30 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 19 Type field of the Type 2 Entry  
Synopsis  The Type field of the Type 2 Entry form at layout shall carry one of the following 
values depending of the purpose of the sent message 0x06 to encode 
SubscribeEventgroup and StopSubscribeEventgroup 0x07 to encode 
SubscribeEventgroupAck and SubscribeEventgroupNack Note  
SubscribeEventgroupAck is unnder Entry Type 2 Test case is to verify 
SubscribeEventgroupAck  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENT RYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informatio ns 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00385 Page 30 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 20 Length of Type 2 Entries  
Synopsis  The length of Type 2 Entries shall be 16 bytes Note  SubscribeEventgroupAck 
is unnder Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEI P Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime  on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT S ends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Length is set to NumberOfEntries16  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Length is set to NumberOfEntries16  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00183 Page 30 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT 21 Index First Option Run field of the Type 2 Entry  
Synopsis  The Index First Option Run field of the Type 2 Entry format layout shall carry the 
index of the first option of the first option run of this entry in the option array 
Note  SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Insta nces  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DU T 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER  CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Index 1st Option in Entry Array is set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Index 1st Option in Entry Array is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00386 Page 31 Message format MUST  

  
    
   SOMEIPSRVFORMAT2 2 Number of Option 1 of the Type 2 Entry  
Synopsis  The Number of Option 1 of the Type 2 Entry format layout shall carry the 
number of options the first option run uses Note  SubscribeEventgroupAck is 
under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTR YSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Num of Opt 1 in Entry Array is greater than or equal to 
1 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Num of Opt 1 in Entry Array is greater than or equal to 1  
Reference  Specification of Se rvice Discovery V120 R41 Rev 3 Section 73 

  
    
   SWSSD00188 Page 31 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT2 3 Service ID field of the Type 2 Entry  
Synopsis  The Service ID field of the Type 2 Entry format layout shall carry the Service ID of 
the eventgroups service statically configured using the parameter 
SdServerServiceID and SdClientServiceID depending on being a server or client 
entry Note  SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00193 Page 32 Message format MUST  
Notes   

  
    
   SOMEIPSRVFORMAT2 4 Instance ID field of the Type 2 Entry  
Synopsis  The Instance ID field of the Type 2 Entry format layout shall carry the Instance ID 
of the eventgroups service statically configured using the parameter 
SdServerServiceInstanceID and SdClientServiceInstanceID depending on being a 
server or client entry N ote  SubscribeEventgroupAck is unnder Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOME IP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGrou p ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Instance ID in Entry Array is set to  
           SERVICE ID1INSTANCE ID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Instance ID in Entry Array is set to  
SERVICE ID1INSTANCE ID 

  
    
  781 Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00195  Page 32 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 5 Major Version field of the Type 2 Entry  
Synopsis  The Major Version field of the Type 2 Entry format layout shall carry the 
SdServerServiceMajorVersion and SdClientServiceMajorVersion depending on 
being a server or client entry Note  SubscribeEventgroupAck is under Entry Type 
2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Messa ge to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
9 DUT CONFIGURE  Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
   Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00198 Page 32 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 6 TTL field of the Type  2 Entry Entry  
Synopsis  The TTL field of the Type 2 Entry Entry format layout defines the lifetime of the 
entry in seconds configured using the parameter SdServerTimerTTL and 
SdClientTimerTTL except for Stop  or Nack Entries which use a TTL of 0 Note  
SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notific ation Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Su bscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  

  
    
  8 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00200 Page 32 Message format MUST  
Notes   
SOMEIPSRVFORM AT2 7 Reserved field which follows t he TTL field of the Type 2 
Entry  
Synopsis  The Reserved field which follows the TTL field of the Type 2 Entry format 
layout shall be statically set to 0x0000 Note  SubscribeEventgroupAck is under 
Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEI P Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  

  
    
       Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe E ventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Reserved in Entry Array is set to 0x0000  
9 DUT CONFIGURE Stop Servic e on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Reserved in Entry Array is set to 0x0000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00202 Page 33 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 8 Eventgroup ID field of the Type 2 Entry  
Synopsis  The Eventgroup ID field of the Type 2 Entry format layout shall carry the ID of an 
Eventgroup configured using the parameter SdConsumedEventGroupID Note  
SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  

  
    
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00204 Page 33 Message format MUST  
Notes   

  
    
  Options Array  
SOMEIPSRVOPTIONS 01  Length field of the IPv4 Endpoint Option  
Synopsis  The Length field of the IPv4 Endpoint Option shall be set to 0x0009  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENT RYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message  
contains  
         Length of IPv4 EndPoint Option is set to 0x0009  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Length of IPv4 EndPoint Option is set to 0x0009  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00209 Page 36 Options Array MUST  
Notes   

  
    
 SOMEIPSRVOPT IONS 02  Type field of the IPv4 Endpoint Option  
Synopsis  The Type field of the IPv4 Endpoint Option shall be statically set to 0x04  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Type of Option Array is set to 
SOMEIPOPTIONIPV4ENDPOINT  
6 DUT CON FIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Type of Option Array  is set to SOMEIPOPTIONIPV4ENDPOINT  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00210 Page 36 Options Array MUST  
Notes   

  
    
  SOMEIPSRVOPTIONS 03  Reserved field of the IPv4 Endpoint Option  
Synopsis  The Reserved field of the IPv4 Endpoint Option followed by the IPv4 Address 
field of the Configuration Option segment shall be statically set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIP ENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Not ification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         First Reserved Field in IPv4 EndPoint Option is set to 
0x00 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 First Reserved Field in IPv4 EndPoint Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00211 Page 36 Options Array MUST  
Notes   

  
    
  SOMEIPSRVOPTIONS 04  IPv4 Address field of the IPv4 Endpoint Option  
Synopsis  The IPv4 Address field 32 bits of the IPv4 Endpoint Option shall be set to the 
local IP address of the relevant Service or Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Messa ge 
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         IP Address in IPv4 EndPoint Option is set to  
           SERVER1 IPADDR 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 IP Address in IPv4 EndPoint Option is set to  
SERVER1 IPADDR  
Reference  Specification of Service Discovery  V120 R41 Rev 3 Section 739 
SWSSD00212 Page 37 Options Array SHOULD  
Notes   

  
    
   SOMEIPSRVOPTIONS 05  Reserved field of the IPv4 Endpoint Option  
Synopsis  The Reserved field of the IPv4 Endpoint Option shall statically be set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Second Reserved Field in IPv4 EndPoint Option  is set to 
0x00 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Second Reserved Field in IPv4 EndPoint Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00213 Page 37 Options Array MUST  
Notes   

  
    
  SOMEIPSRVOPTIONS 06  Layer 4 Protocol field of th e IPv4 Endpoint Option  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Endpoint Option shall be 
set to one of the following values depending on the port specified 0x06 TCP 
0x11 UDP NOTE Checking For UDP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 EndPoint Option is set to 0x11  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 EndPoint Option is set to 0x11  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00214 Page 37 Options Array MUST  
Notes   

  
    
  SOMEIPSRVOPTIONS 07  Port Number field  of the IPv4 Endpoint Option  
Synopsis  The Port Number field 16 bits of the IPv4 Endpoint Option shall carry the UDP 
or TCP port number for the service instance or Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSE RVICE 
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Mess age 
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Port Number in IPv4 EndPoint Option is set to  
           SERVICE ID1UDPPORT 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Port Number in IPv4 EndPoint Option is set to  
SERVICE ID1UDP PORT  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00215 Page 37 Options Array MUST  
Notes   

  
    
 SOMEIPSRVOPTIONS 08  Length field  of the IPv4 Multicast Option  
Synopsis  The Length field 16 bits of the IPv4 Multicast Option shall be set to 0x0009   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification  Message 
contains  
         Length of IPv4 Multicast Option is set to 0x0009  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Length of IPv4 Multicast Option is set to 0x0009  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00390 P age 39 Options Array MUST  

  
    
   SOMEIPSRVOPTIONS 09  Type field of the IPv4 Multicast Option  
Synopsis  The Type field 8 bits of the IPv4 Multicast Option shall be statically set to 
0x14  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containi ng  
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamList enTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Type of Option Array is set to 
SOMEIPOPTIONIPV4MULTICAST  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
information s 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Type of Option Array is set to SOMEIPOPTIONIPV4MULTICAST  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 

  
 SWSSD00391 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS10 Reserved field after IPv4 Address of the IPv4 Multicast 
Option  
Synopsis  The Reserved field 8 bits of the IPv4 Multicast Option followed by the IPv4 
Address field of the Configuration Option segment shall be statically set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Me ssage to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type s et to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Ty pe set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         First Reserved Field in IPv4 Multicast Option is set to 
0x00 
9 DUT CO NFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
 Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 First Reserved Field in IPv4 Multicast Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00392 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS11 IPv4 Address field  of the IPv4 Multicast Option  
Synopsis  The IPv4 Address field 32 bits of the IPv4 Multicast Option shall be set to the 
Multicast IP address of the Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  

  
    
         IP Address in IPv4 Multicast Option is set to  
           EVENTGROUPID1SI1MulticastAddr  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 IP Address in IPv4 Multicast Option is set to  
EVENT GROUP ID1SI1MulticastAddr  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00393 Page 39  Options Array MUST  
Notes   
SOMEIPSRVOPTIONS12 Reserved field  of the IPv4 Multicast Option  
Synopsis  The Reserved field 8 bits of the IPv4 Multicast Option shall statically be set to 
0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIEN T1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto  ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 

  
    
   Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Second Reserved Field in IPv4 Multic ast Option is set 
to 
           0x00 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Second Reserved Field in IPv4 Multicast Option is set to  
0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00394 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS13 Layer 4 Pr otocol field  of the IPv4 Multicast Option  for UDP  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Multicast Option shall 
be set to 0x11 UDP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  

  
    
            Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 Mul ticast Option is set to 
0x11 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 Multicast Option is set to 0x11  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00395 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS14 Port Number field of the IPv4 Multicast Option  
Synopsis  The Port Number field 16 bits of the IPv4 Multicast Option shall carry the port 
number for transporting Multicast Events of the Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  

  
    
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP N otification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe Even tGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains 
         Port Number in IPv4 Multicast Option is set to  
           SERVICE ID1UDPPORT 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Port Number in IPv4 Multicast Option is set to  
SERVICE ID1UDP PORT  
Reference  Specification of Service Discovery V1 20 R41 Rev 3 Section 739 
SWSSD00396 Page 39 Options Array MUST  
Notes   

  
    
  SOMEIPSRVOPTIONS15 Layer 4 Pr otocol field  of the IPv4 Endpoint Option  for TCP  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Endpoint Option shall be 
set to one of the following values depending on the port specified 0x06 TCP 
0x11 UDP NOTE Checking For TCP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 conta ining  
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Ver ify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 EndPoint Option is set to 0x06  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 EndPoint Option is set to 0x06  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWS SD00214 Page 37 Options Array MUST  
Notes   

  
    
     Service  Discovery  Messages  
SOMEIPSRVSDMESSAGE 01  Instance ID  if all service instances shall be returned  
Synopsis  Instance ID shall be set to 0xFFFF if all service instances shall be returned It shall 
be set to the Instance ID of a specific service instance if just a single service 
instance shall be returned NOTE Checking For Instance ID 0xFFFF  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 2  
6 TESTER Extracts the content  of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
7 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Offer Service Entry 1 is not set 
to 
           extractedInstID2  
8 DUT CO NFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 2  
7 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  

  
    
   Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3  s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   
SOMEIPSRVSDMESSAGE 02  Instance ID  if a specific instance shall be returned  
Synopsis  Instance ID shall be set to 0xFFFF if all service instances shall be returned It shall 
be set to the Instance ID of a specific service instance if just a single service 
instance shall be returned NOTE Checking For Specific Instance ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general  Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto Para mListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 2  
6 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
7 TESTER Extra cts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to  
           extractedInstID1  
         Service ID in Entry Array set to SERVICE ID1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRY OFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 

  
    
DUT Sends SOMEIP Notification Message  
11 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 1  
12 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to  
           extractedInstID2  
         Service ID in Entry Array set to SERVICE ID1 
13 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
14 DUT Sends SOMEIP Noti fication Message  
15 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 1  
16 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERV ICEID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 2  
10 DUT Sends SOMEIP Notification Message  
11 TESTER Verify t hat received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 1  
14 DUT Sends SOMEIP Notification Message  
15 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  SOMEIPSRVSDMESSAGE 03  Major Version when any version shall be returned  
Synopsis  Major Version shall be set to 0xFF that means that services with any version shall 
be returned If set to value different than 0xFF services with this specific major 
version shall be returned only NOTE Checking For Major Version 0xFF  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Major Version set t o 
0xFF 
         SOMEIP Find Service Entry TTL set to 0xFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
6 DUT CONF IGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  SOMEIPSRVSDMESSAGE 04  Major Version when a specific version shall be 
returned  
Synopsis  Major Version shall be set to 0xFF that means that services with any version shall 
be returned If set to value different than 0xFF services with this specific major 
version shall be returned only NOTE Checking For Specific Major Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Major Version se t to 
           SERVICE ID1MAJVER 
         SOMEIP Find Service Entry TTL set to 0xFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEI PENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICEID1MAJVER 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
 SOMEIPSRVSDMESSAGE 05  Minor Ver sion when any version shall be returned  
Synopsis  Minor Version shall be set to 0xFFFF FFFF that means that services with any 
version shall be returned If set to a value different to 0xFFFF FFFF services with 
this specific minor version shall be returned only NOTE Checking For Minor 
Version 0xFFFFFFF F  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Minor  Version set to  
           0xFFFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE Stop Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
SOMEIPSRVSDMESSAGE 06  Minor Version when a specific version shall be 
returned  
Synopsis  Minor Version shall be set to 0xFFFF FFFF that means that services with any 
version shall be returned If set to a value different to 0xFFFF FFFF services with 
this specific minor version shall be returned only NOTE Checking For Specific 
Minor  Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Mino r Version set to  
           SERVICE ID1MINORVER 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE St op Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
SOMEIPSRVSDMESSAGE 07  TTL and the lifetime of a service instance  
Synopsis  TTL shall be set to the lifetime of the service instance After this lifetime the 
service instance shall considered not been offered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFF ERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
6 TESTER Wait  till SERVICE ID1TTL To Timeout offer service 
from DUT  
7 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
8 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet  Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODE EOK 
9 DUT Does not send SOMEIP Response Message  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  

  
    
 9 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67412 
Offer Service Entry TR SOMEIP00356 Page 67 MUST  
Notes   
SOMEIPSRVSDMESSAGE 08  Offer Service entries for IPv4  
Synopsis  Offer Service entries shall always reference at least an IPv4 or IPv6 Endpoint 
Option to signal how the service is reachable NOTE Test is for IPv4  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is 
greater 
           than or equal to 1  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67412 
Offer Service Entry TRSOMEIP00357 Page 67 MUST  
Notes   

  
    
SOMEIPSRVSDMESSAGE 09  Endpoint Options Port Numer  
Synopsis  The IP addresses and port numbers of the Endpoint Options shall also be used for 
transporting events and notification events In the case of UDP this information is 
used for the source address and the source port of the events and notification events 
NOTE This test is for UDP port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIE NT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime o n DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto Para mListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 

  
    
DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Messa ge Expected UDP Src Port set to extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Pr otocol SOMEIP V110 R41 Rev 3 s67412 Offer 
Service Entry TRSOMEIP00360TRSOMEIP00361 Page MUST  
Notes   

  
    
  SOMEIPSRVSDMESSAGE10 Stop offer service and TTL field  
Synopsis  The stop offer service entry type shall be used to stop offering service instances 
Stop Offer Service entries shall set the entry fields exactly like the Offer Service 
entry they are stopping except TTL shall be set to 0x000000 NOTE Check For 
TTL  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 DUT CONFIGURE Stop Service on DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSTOPOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to 0  
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67413 Stop 
Offer Service Entry TRSOMEIP00363 p age 68 MUST  
Notes   

  
    
SOMEIPSRVSDMESSAGE11 Subscribe Eventgroup entry type  
Synopsis  The Subscribe Eventgroup entry type shall be used to subscribe to an eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4  Endpoint Option is 
greater 
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to e xtractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 

  
    
 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations 
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Message Expected UDP Dest Por t set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Send s SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67421 
Subscribe Eventgroup Entry TRSOMEIP00385 Page 68 MUST  
Notes   
SOMEIPSRVSDMESSAGE12 Stop Subscribe Eventgroup entry  
Synopsis  The Stop Subscribe Eventgroup entry type shall be used to stop subscribing to 
eventgroups Stop Subscribe Eventgroup entries shall set the entry fields exactly 
like the Subscribe Eventgroup entry they are stopping except TTL shall be set to 
0x000000  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  

         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SO MEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extra cts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
10 DUT Sends SOMEIP Notification Me ssage 
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto Pa ramListenTime on DIface 
0 
         SOMEIP Message Expected UDP Dest Port set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Ev ent ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 TESTER  CLIENT 1 Sends SOMEIP Notification Message to DUT  
         through DIface 0 containing   
         Entry Type set to SOMEIPENTRY STOPSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 

  
    
Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
15 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
16 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Message Expected UDP Dest P ort set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
17 DUT Do es not send SOMEIP Notification Message  
18 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
17 DUT Does not send SOMEIP Notification Message  
Refer ence Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67422 Stop 
Subscribe Eventgroup Entry MUST  
Notes   

  
SOMEIPSRVSDMESSAGE13 Subscribe Eventgroup Acknowledgment entry type  
Synopsis  The Subscribe Eventgroup Acknowledgment entry type shall be used to indicate that 
Subscribe Eventgroup entry was accepted Subscribe Eventgroup Acknowledgment 
entries shall set the entry fields in the following way Type shall be set to 0x07 
SubscribeEventgroupAck Service ID Instance ID Major Ver sion Eventgroup ID 
TTL and Reserved shall be the same value as in the Subcribe that is being 
answered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in E ntry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup I D in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Ve rify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry is set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  

  
    
EventGroup Ack Entr y is set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to EVENT GROUPID1SI1 
         TTL in Subscribe EventGroup Ack Entry is set to 0xFFFFFF  
         Reserved Field in Subscribe Ev entGroup Ack Entry is set to 
0 
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service ID in Subscribe EventGroup Ack  
Entry is set to SERVICE ID1 
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedInstID1  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to EVENT GROUP ID1SI1 
 TTL in Subscribe EventGroup Ack Entry is set to 0xFFFF FF 
 Reserved Field in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe EventGroup Ack Entry is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67423 
Subscribe Eventgroup  Acknowledgement Subscribe Eventgroup MUST  
Notes   
SOMEIPSRVSDMESSAGE14 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup  entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be t he same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 NOTE Check 
For TTL Field and Type  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
  Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification M essage to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Ser vice ID in Subscribe EventGroup Ack  
           Entry set to UNKNOWN SERVICEID 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  SOMEIPSRVSDMESSAGE15 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 NOTE 
Checking for later Condition that Service ID I nstance ID Major Version 
Eventgroup ID and Reserved shall be the same value as in the subscribe   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup  ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe Eve ntGroup Ack  
           Entry set to UNKNOWN SERVICEID 

  
    
  8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack  Entry is set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to EVENT GROUPID1SI1 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
         Reserved Field in Subscribe Even tGroup Ack Entry is set to 
0 
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Cri teria 4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedI nstID1  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to EVENT GROUP ID1SI1 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
 Reserved Field in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe Even tGroup Ack Entry is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
 SOMEIPSRVSDMESSAGE16 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative A cknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general I nput Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGr oup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
8 DUT Sends  SOMEIP Notification Message  

  
    
  9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry is set to UNKNOWN SERVICEID 
         TTL in Subscribe EventGroup Ack  Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify th at received SOMEIP Notification Message contains  
 SOMEIP Expected Service ID in Subscribe EventGroup Ack  
Entry is set to UNKNOWN SERVICE ID 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   
SOMEIPSRVSDMESSAGE17 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative A cknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Instance ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 

  
    
 4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID11  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service Instance ID in Subs cribe 
           EventGroup Ack Entry is set to extractedInstID11  
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteri a 4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedInstI D11  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  SOMEIPSRVSDMESSAGE18 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set th e entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000  Reasons for 
sending a Subscribe Eventgroup Negative Acknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Major Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER1 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  

  
    
 Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER1 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe EventGroup Ack Entry is set to  
SERVICE ID1MAJ VER1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   
SOMEIPSRVSDMESSAGE19 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answere d The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative Acknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Event Group ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 

  
    
 Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Se rvice Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           UNKNOWN EVENTGROUPID 
         Service Instance ID in Subsc ribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify th at received SOMEIP Notification Message 
contains  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to UNKNOWN EVENTGROUPID 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to UNKNOWN EVENT GROUP ID 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subsc ribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  Service  Discovery  Communication  Behavior  
SOMEIPSRVSDBEHAVIOR 01  After message s in the Repeti tion Phase the delay is 
doubled  
Synopsis  After sending the first message the Repetition Phase of this Service Instancethese 
Service Instances is entered After each message sent in the Repetition Phase the 
delay is doubled  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Message  
4 TESTER CLIENT 1 Listens upto  
        SERVICE ID1REPBASEINTV3ParamToleranceTime second 
on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
5 DUT Sends 2 SOMEIP Notification Messages  
6 TESTER Verify that the time interval b etween 
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is greater than  
        SERVICE ID1REPBASEINTV2   
         ParamToleranceTimeMillisec micro second  
7 TESTER Verify that the ti me interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is less than  
        SERVICE ID1REPBASEINTV2    
         ParamToleranceTimeMillisec micro second  
8 DUT CONFIGURE S top Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
5 DUT Sends 2 SOMEIP Notification Messages  
6 TESTER Verify that the time interval between  
recepti on of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  

  
    
  SERVICE ID1REPBASE INTV2  
ParamToleranceTimeMillisec micro second  
7 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is less than  
SERVICE ID1REPBASE INTV2   
ParamToleranceTimeMillisec micro second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6751 
Startup Behavior TRSOMEIP00404 TRSOMEIP00406 Page 71 
SHOULD  
Notes   

  
SOMEIPSRVSDBEHAVIOR 02  Main Phase Offer Messages and Publish Messages  
cyclically  
Synopsis  In the Main Phase Offer Messages and Publish Messages shall be sent cyclically 
if a CYCLICOFFERDELAY is configured  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Noti fication Message  
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Phase  
5 TESTER CLIENT 1 Listens upto  
        SERVICE ID1CYCLEINTV2ParamToleranceTime second on 
DIface0 
         Entry Type set to SOMEIPENTR YOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
6 DUT Sends 2 SOMEIP Notification Messages  
7 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notifica tion Message  
         is greater than  
        SERVICE ID1CYCLEINTV    ParamToleranceTime 
second 
8 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is less than  
        SERVICE ID1CYCLEINTV    ParamToleranceTime 
second 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Me ssage  
6 DUT Sends 2 SOMEIP Notification Messages  
7 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  

  
    
 SERVICE ID1CYCLE INTV  ParamToleranceTime secon d 
8 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is less than  
SERVICE ID1CYCLE INTV  ParamToleranceTime second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6751 
Startup Behavior TRSOMEIP00412 Page 71 SHOULD  
Notes   
SOMEIPSRVSDBEHAVIOR 03  Response  if the last offer was more than half of cyclic 
offer delay  
Synopsis  Find messages received with the Unicast Flag set to 1 shall be answered with a 
multicast RESPONSE if the last offer was sent 12 CYCLICOFFERDELAY or 
longer ago  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Pha se 
5 TESTER CLIENT 1 Listens upto SERVICE ID1CYCLEINTV 
second 
        on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
6 DUT Sends SOMEIP Notification Message  
7 TESTER Wait till SERVICE ID1CYCLEINTV2 For DUT to 
consume 
        12 CyclicOfferDelay  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 

  
    
      Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Message Expected IP Dst Address set to  
           SOMEIPMULTICASTIPADDR  
10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
6 DUT Sends SOMEIP Notification Message  
10 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6752 
Server Answer Behavior TRSOMEIP00423 Pag e 73 SHOULD  
Notes   

  
    
   SOMEIPSRVSDBEHAVIOR 04  Response for Find messages with Unicast Flag set to 0  
Synopsis  Find messages received with Unicast Flag set to 0 multicast shall be answered 
with a multicast response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Messa ge 
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Phase  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Unicast Flag in Notification Message set to 0  
         Service ID in Entry Array set to SERVICE ID1 
6 TESTER CLIENT 1 Listens upto SERVICE ID1CYCLEINTV 
second 
        on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Message Expected IP Dst Address set to  
           SOMEIPMULTICASTIPADDR  
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the followin g 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6752 
Server Answer Beh avior TRSOMEIP00423 Page 73 SHOULD  
Notes   

  
    
  SOMEIPSRVSDBEHAVIOR 05  Stop offering Service Instances  
Synopsis  The Stop Offer Service entry type shall be used to stop offering Service Instances  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICEID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Stop Service on DIface 0 with the followin g 
informations  
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 

  
    
        Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
11 DUT Sends SOME IP Notification Message  
12 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to 0  
13 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
14 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Arr ay set to SERVICE ID1 
15 DUT Does not send SOMEIP Notification Message  
16 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DU T Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
12 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to 0  
15 DUT Does not send SOMEIP Notification Message  
Reference  Specif ication of Service Discovery V120 R41 Rev 3 Section 745 
SWSSD00422 Page 48 StopOfferService entry SHOULD  
Notes   

  
    
   SOMEIPSRVSDBEHAVIOR 06  Stop subscribing to an Eventgroup  
Synopsis  To stop subscribing to an Eventgroup the StopSubscribeEventgroup entry shall 
be used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set t o SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscrib e EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 

  
    
        Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Eve nt ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSTO PSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0x000000  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           SERVICE ID1INSTANCE ID 
13 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Ex pected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
14 DUT Does not send SOMEIP Notification Message  
15 DUT CONFIGURE Stop Service on DIface 0 with the following  
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
14 DUT Does not send SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 7462 Page 50 
StopSubscribeEventgroup entry SHOULD  
Notes   

  
    
 5156  SOME IP Basic  Functionality  
SOMEIPSRVBASIC 01  Define service using the Service ID  
Synopsis  A service shall be identified using the Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOME IP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID s et to 
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected R eturn Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DU T Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00001 Page 14 MUST  
Notes   

  
    
  840 SOMEIPSRVBASIC 02  Reserved values for Service Instance IDs  
Synopsis  The Service Instance IDs of 0x0000 and 0xFFFF shall not be used for a service 
since 0x0000 is reserved and 0xFFFF is used to describe all service instances  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Mess age 
contains  
         Service Instance ID of Offer Service Entry 1 is not set 
to 0 
         Service Instance ID of Offer Service Entry 1 is not set 
to 
           0xFFFF 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to 0  
 Service Instance ID of Offer Se rvice Entry 1 is not set to  
0xFFFF  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00008 Page 14 MUST  
Notes   

  
    
  841 SOMEIPSRVBASIC 03  Method ID of a notification has highest bit set to 1  
Synopsis  Methods shall use Method IDs with the highest bit set to 0 while the Method IDs 
highest bit shall be set to 1 for events and notifications of fields NOTE Checking 
for notification  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is 
greater 
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set t o 
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto  ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  

  
    
  842          SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP M essage Expected UDP Dest Port set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 TESTER Verify that received SOMEIP Notification Message 
contains  
         0Bit field of MethodEventID in SOMEIP Packet Header 
is 
           set to 1  
15 DUT CONFIGURE Stop Service on D Iface0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option  is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
14 TESTER Verify that received SOMEIP Notification Message contains  
 0Bit field of MethodEventID in SOMEIP Packet Header is  
set to 1 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00011 Page 14 MUST  
Notes   

  
    
  843 5157  Specification  of the SOMEIP  onwire  format  
SOMEIPSRVONWIRE 01  IP addresses and port number  of the Reponse message  
Synopsis  For the response and error message the IP addresses and port number of the 
transport protocol shall match the request message NOTE Checking for Response 
message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on D Iface
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 conta ining  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Message Expected IP Src Address set to  
           SERVER1 IPADDR 
         SOMEIP Message Expected IP Dst Address set to  
           CLIENT1 IPADDR 
         SOMEIP Message Expected UDP Src Port set to  
           SERVICE ID1UDPPORT 
         SOMEIP Message Expected UDP Dest Port set to  
           CLIENT1 UDPPORT 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEI PRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  

  
    
  844 7 DUT Sends SOMEIP Respon se Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s62311 
Mapping of IP Addresses and Ports in Response and Error MUST  
Notes   

  
    
  845 SOMEIPSRVONWIRE 02  MSB of Method ID in Response Message  
Synopsis  With 16 Bit Service ID and a 16 Bit Method ID starting with a 0 Bit this allows 
for up to 65536 services with up to 32768 methods each NOTE Checking for 0 bit 
in MSB of Method ID in Response Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         0Bit field of  MethodEventID in SOMEIP Packet Header is  
           set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOME IP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 0Bit field of MethodEventID in SOMEIP Packet Header is  
set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s62321 
Structure of the Message ID TRSOMEIP00038 Page 18 MUST  
Notes   

  
    
  846 SOMEIPSRVONWIRE 03  Copy Request ID from the request to the response message  
Synopsis  When generating a response message the server has to copy the Request ID from 
the request to the response message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Proce dure 1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message 
contains  
         SOMEIP Packet Expected Header Request ID is set to  
           CLIENT1 CURRREQUESTID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Mes sage 
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 SOMEIP Packet Expected Header Request ID is set to  
CLIENT1 CURR REQUEST ID 

  
    
  847 Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6234 
Request ID 32 Bit TRSOMEIP00043 Page 19 MUST  
Notes   
SOMEIPSRVONWIRE 04  Request IDs may be reused if response arrived  
Synopsis  Request IDs might be reused as soon as the response arrived or is not expected to 
arrive anymore timeout NOTE Testing first condition where response arrived  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Chec k section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type  set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Pac ket Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIE NT1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to S OMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  848 0 
         SOMEIP Packet  Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
10 DUT Sends SOMEIP Response Message  
11 DUT CONFIGURE  Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
10 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6234 
Request ID 32 Bit TRSOMEIP00044 Page 19 MUST  
Notes   
SOMEIPSRVONWIRE 05  Protocol Version  
Synopsis  Protocol Version is an 8 Bit field containing the SOMEIP protocol version which 
currently shall be set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedu re 1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Protocol Version set to 0x01  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header  Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Protocol Version set to 0xFF  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID se t to 
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  849 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEWRONGPROTOCOLVERSION  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Mes sage to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Protocol Version set to 0x01  
         SOMEIP Send Request Message Service  ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Protocol Version set to 0x01  
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODE EOK 
10 DUT Sends SOMEIP Response Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
10 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6235 
Protocol Version 8 Bit TRSOMEIP00052 Page 20 MUST  
Notes   

  
    
  850 SOMEIPSRVONWIRE 06  Interface Version  
Synopsis  Interface Version is an 8 Bit field that contains the Major Version of the Service 
Interface  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE  Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Typ e set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set  to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Ex pected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         Interface Version is set to S ERVICEID1INTFVERMAJ 
9 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header In terface Version set to  
           UNKNOWN INTFVERMAJSI1 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
  851            METHODID1SI1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Interface Version set to UNKNOWN INTFVERMAJSI1 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVIC EID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEWRONGINTERFACEVERSION  
11 DUT Sends SOMEIPMSGTYPEERROR Message  
12 DUT CONFIGURE Stop Service on DIfac e0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 Interface Versi on is set to SERVICE ID1INTF VER MAJ  
11 DUT Sends SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6236 
Interface Version 8 Bit TRSOMEIP00053 Page 20 MUST  
Notes   
SOMEIPSRVONWIRE 07  Message Type  and Response after a Request  
Synopsis  The Message Type field is used to differentiate different types of messages and shall 
contain the following values 0x00 REQUEST A request expecting a response even 
void 0x80 RESPONSE The response message NOTE Testing Response message 
after sending a request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSE RVICE 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Se nds SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  

  
    
  852         DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send He ader Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Interface Version set to SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to  SERVICEID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informati ons 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP 00055 Page 20 MUST  
Notes   

  
    
  853 SOMEIPSRVONWIRE 08  Message Type  and Request no Return  
Synopsis  The Message Type field is used to differentiate different types of messages and 
shall contain the following values 0x01 REQUESTNORETURN A fire forget 
request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface  Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens u pto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Does not send SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Send s SOMEIP Notification Message  
7 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MUST  

  
    
  854 SOMEIPSRVONWIRE 09  Message Type and Request ACK  
Synopsis  The Message Type field is used to differentiate different types of messages and 
shall contain the following values 0x40 REQUESTACK Acknowledgment for 
REQUEST optional  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamList enTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Se rvice ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIPMSGTYPE REQUESTACK Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEREQUESTACK Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MAY  

  
 SOMEIPSRVONWIRE10 Message Type and Unkown Service ID  
Synopsis  The Message Type field is used to differentiate different types  of messages and 
shall contain the following values 0x81 ERROR The response containing an error 
NOTE Checking for error UNKNOWN Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFF ERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto Par amListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           UNKNOWN SERVICEID 
         SOMEIP Send Request Me ssage Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  856 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to UNKNOWN SERVICEID 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNSERVICE  
10 DUT Sends SOMEIPMSGTYPEERROR Message  
11 DUT CONFIGURE Stop Servi ce on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
10 DUT Sends SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MUST  
Notes   
SOMEIPSRVONWIRE11 Return code for normal request response  
Synopsis  The Return Code is used to signal whether a request was success fully been 
processed NOTE Checking for Normal Request Response Communication ie 
Error Code EOK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
  857            METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
7 DUT Sends SOMEIP Response Message  
8 TESTER  Verify that received SOMEIP Response Message contains  
         Return Code is set to SOMEIPRETCODEEOK  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 Return Code is set to SOMEIPRETCODEEOK  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6238 
Return Code 8 Bit TRSOMEIP00058 TRSOMEIP00191 Page 21 
MUST  
Notes   
SOMEIPSRVONWIRE12 Return code for an Unknown Method ID error  
Synopsis  The Return Code is used to signal whether a request was successfully been 
processed NOTE Chec king for Error in case of Unknown Method ID in Request 
Response Communication ie Error Code EUNKNOWNMETHOD  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 

  
    
  858          SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
7 DUT Sends SOMEIPMSGTYP EERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         Return Code is set to SOMEIPRETCODEEUNKNOWNMETHOD  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SE RVICEID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Return Code is set to SOMEIPRETCODEEUNKNOWNMETHOD  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6238 Return 
Code 8 Bit TRSOMEIP00058 TRSOMEIP00191 Page 21 MUST  
Notes   

  
    
  859 5158  RPC  Protocol  specification  
SOMEIPSRVRPC 01  Use a single TCP connection for all Methods  
Synopsis  The c lient and server shall use a single TCP connection for all methods events 
and notifications of a service instance NOTE This test is for methods  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPE NTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID2 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI2 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expe cted Service ID set to SERVICE ID2 
         SOMEIP Expected Method ID set to METHOD ID1SI2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  

  
    
  860 Notes   
SOMEIPSRVRPC 02  Use a single TCP connection for all Notifications  
Synopsis  The client and server shall use a single TCP connection for all methods events 
and notifications of a service instance NOTE This test is for Notifications  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6  
7 TESTER CL IENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID2 
         EventGroup ID in Subs cribe Eventgroup Entry set to  
           EVENTGROUPID1SI2 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
8 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to  SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID2 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI2 
9 DUT Sends SOMEIP Notification Message  
10  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 

  
    
  861 informations  
         Event ID  EVENT ID1EGID2 
         Event Group ID  EVENT GROUPID1SI2 
         Service ID  SERVICE ID2 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID2 
13 DUT Sends SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
9 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  
Notes   

  
    
  862 SOMEIPSRVRPC 03  Getter of a field method  
Synopsis  The getter of a field shall be a requestresponse call that has an empty payload in 
the request message and the value of the field in the payload of the response 
message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICEID1 
         SOMEIP Send Request Message Method ID set to  
           METHODIDGETSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD IDGETSI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Extracts the content of SOMEIP Packet Length to  
        extractedPktLen  
9 TESTER Verify that received SOMEIP Response Message contains  
         SOMEIP Expected Response Message Payload is set to  
           METHODIDGETSI1RESPPAYLOADSERIALIZED  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  

  
    
  863 7 DUT Sends SOMEIP Response Message  
9 TESTER Verify that received SOMEIP Response  Message contains  
 SOMEIP Expected Response Message Payload is set to  
METHOD IDGET SI1RESP PAYLOAD SERIALIZED  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s635 Fields 
TRSOMEIP00181 Page 38 MUST  
Notes   
SOMEIPSRVRPC 04  Fire  forget requests  
Synopsis  Requests without response message are called fireforget The implementation is 
basically the same as for RequestResponse with the following differences There is 
no response message The message type is s et to REQUESTNORETURN ie 
0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notific ation Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Hea der Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 

  
    
  864          SOMEIP Expected Method ID set to METHO DID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Does not send SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s633 
FireForget Communication TRSOMEIP00170 Page 36 MUST  
Notes   
SOMEIPSRVRPC 05 Fire  forget requests  shall return no error  
Synopsis  Fire  Forget messages shall not return an error The system shall not return an 
error message for fireforget methods  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input  
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set  to 
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 

  
    
  865          SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI
1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s633 
FireForget Communication TRSOMEIP00171 TRSOMEIP00189 
MUST  
Notes   
SOMEIPSRVRPC 06  Error handling the the bits of the return code  
Synopsis  The Error Handling is based on an 8 Bit StdreturnType  The two most 
significant bits are reserved and shall be set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set  to 
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 

  
    
  866 6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Ser vice ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODID
SI1 
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         Most Significant 2 bits in Retu rn Code is set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Most Significant 2 bits in Return Code is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00187 Page 38 MUST  
Notes   
SOMEIPSRV RPC 07  Ignore the two most significant bits from return code  
Synopsis  The receiver of a return code shall ignore the values of the two most significant 
bits  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   

  
    
  867          SOMEIP Packet Send  Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Code set to 0xC0  
         SOMEIP Send Request Messa ge Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID se t to 
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Re sponse Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00187 Page 38 MUST  
Notes   
SOMEIPSRVRPC 08  Do not reply to messages already carrying an error  
Synopsis  Implementations shall not answer with errors to SOMEIP message already 
carrying an error ie return code 0x01  0x1f  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  

  
    
  868 5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Code set to 0x01  
         SOMEIP Send Request Message Service ID set to  
           SERVICEID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Co de set to 0x1f  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
10 DUT Does not send SOMEIPMSGTYPEE RROR Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
10 DUT Does not  send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00539 Page 40 MUST  
Notes   

  
    
  869 SOMEIPSRVRPC 09  No payload in Error message  
Synopsis  For requestresponse metho ds the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Return Code have to be set to the 
appropriate values NOTE Checking for No Payload  in Error message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamLi stenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Packet Header Length is set to 8  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  870 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Packet Header Length is set to 8  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC10 Do not return an  error if Message Type is incorrect  
Synopsis  The system shall not return an error message for eventsnotifications and 
fireforget methods if the Message Type is set incorrectly to Request or Response 
NOTE Checking for Fire and Forget Method  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODIDFIREFORGETSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIfac e
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to  
           METHODIDFIREFORGETSI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEENOTOK  

  
    
  871 7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00537 Page 39 MUST  
Notes   
SOMEIPSRVRPC11 Setter of a field and payload  
Synopsis  The setter of a field shall be a requestresponse call that has the desired valued of 
the field in the payload of the request message and the value that was set to field in 
the payload of the response message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP R equest Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID2SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP P acket Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID2SI1 
	SOMEIP Expected Return Code set to SOMEIPRET CODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         SOMEIP Packet Header Length is greater than 8  
         SOMEIP Expected Response Message Payload is set to  
           METHODID2SI1RESPSERIALIZED  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 SOMEIP Packet Header Length is greater than 8  
 SOMEIP Expected Response Message Payload is set to  
METHOD ID2SI1RESP SERIALIZED  
Reference  Example for a Serialization Protocol SOMEIP V110 R41  Rev 3 s635 Fields 
TRSOMEIP00182 Page 38 MUST  
Notes   

  
    
  873 SOMEIPSRVRPC12 Notifier and event message on field change  
Synopsis  The notifier shall send an event message that transports the value of a field on 
change and follows the rules for events  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the  content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedIns tID1 
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expe cted Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 

  
    
  874          Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListen Time on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s635 Fields 
TRSOMEIP00183 Page 38 MUST  
Notes   

  
    
   SOMEIPSRVRPC13 Different services can share the same port  
Synopsis  While different Ser vices shall be able to share the same port number of the transport 
layer protocol used multiple Service Instances of the same service on one single 
ECU shall listen on different ports per Service Instance NOTE Checking For case  
Different Services same  port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
3 TESTER CLIENT 1 Sends SOMEIP Notification Message t o DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         Service ID in Entry Array set to  SERVICEID2 
4 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         Service ID in Entry Array set to SERVICE ID2 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
5 DUT Sends SOMEIP Notification Message  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedTransPort  
7 TESTER Set Destination Port Of client1 to extractedTransPort  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID se t to 
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 

  
    
  876          SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
10 DUT Sends SOMEIP Response Message  
11 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID2INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID2 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI2 
12 TESTER CLIENT 1 Listens upto ParamListenT ime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID2 
         SOMEIP Expected Method ID set to METHOD ID1SI2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
13 DUT Sends SOMEIP Response Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
15 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  5 DUT Sends SOMEIP Notification Message  
10 DUT Sends SOMEIP Response Message  
13 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6313 
Multiple Service Instances TRSOMEIP00163 Page 35 MAY  
Notes   

  
    
   SOMEIPSRVRPC14 Different instances of the same service must use different ports  
Synopsis  While different Services shall be able to share the same po rt number of the transport 
layer protocol used multiple Service Instances of the same service on one single 
ECU shall listen on different ports per Service Instance NOTE Checking For case  
Different instances of same Service different port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 2  
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID o f Offer 
Service 
        Entry 2 to extractedInstID2  
6 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Offer Service Entry 1 is not set to  
           extractedInstID2  
7 TESTER Extracts the content of  SOMEIP IPv4 Endpoint Option 
Number 1  
        Transport Port to extractedTransPort1  
8 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 2  
        Transport Port to extractedTransPort2  
9 TESTER Set Destination Port Of client1 to extr actedTransPort1  
10 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface V ersion set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
              METHODID1SI1 
11 TESTER CLIENT 1 Listens up to ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
12 DUT Sends SOMEIP Response Message  
13 TESTER Set Destination Port Of client1 to extractedTransPort2  
14 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID2INTFVERMAJ 
         SOMEIP Send Request Message Service  ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
15 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
16 DUT Sends SOMEIP Response M essage 
17 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
6 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  
12 DUT Sends SOMEIP Response Message  
16 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6313 
Multiple Servic eInstances TRSOMEIP00163 Page 35 MUST  
Notes   

  
    
  879 SOMEIPSRVRPC15 Update on change value  
Synopsis  Update on change  send an update as soon as a value changes eg door open  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedIns tID1 
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extr actedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 

  
    
  880 DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 DUT CONFIGURE Stop Service on DIface 0 with t he following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol  SOMEIP V110 R41 Rev 3 s6341 
Strategy for sending notifications TRSOMEIP00176 Page 37 MUST  
Notes   

  
    
  881 SOMEIPSRVRPC16 Cyclic update  of a value  
Synopsis  Cyclic update  send an updated value in a fixed interval eg every 300 ms  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of  Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in S ubscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Servic e Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIG URE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID2EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 

  
    
  DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID2EGID1 
11 DUT Sends 2 SOMEIP N otification Messages  
12 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is greater than  
        EVENTID2EGID1CYCLICTIME   
         ParamToleranceTimeMillisec micro second  
13 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends 2 SOMEIP Notification Messages  
12 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  
EVENT ID2EGID1CYCLIC TIME  
ParamToleranceTimeMilli sec micro second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6341 
Strategy for sending notifications TRSOMEIP00176 Page 37 MUST  
Notes   

  
    
  883 SOMEIPSRVRPC17 Multiple instances use multiple TCP connections  
Synopsis  When having more than one instance of a service a TCP connection per services 
instance is needed  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Serv ices Service ID set to SERVICE ID
1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 2  
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
6 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Off er Service Entry 1 is not set 
to 
           extractedInstID2  
7 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 1  
        Transport Port to extractedTransPort1  
8 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 2  
        Transport Port to extractedTransPort2  
9 TESTER Set Destination Port Of client1 to extractedTransPort1  
10 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 

  
    
  884          SOMEIP Send Re quest Message Method ID set to  
           METHODID1SI1 
11 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Se rvice ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
12 DUT Sends SOMEIP Response Message  
13 TESTER Set Destination Port Of client1 to 
extracte dTransPort2  
14 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Versi on set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
15 TESTER CLIENT 1 Listens upto  ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
16 DUT Sends SOMEIP Response Message  
17 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
6 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  
12 DUT Sends SOMEIP Response Message  
16 DUT Sends SOMEIP Response Message  
Refer ence Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  
Notes   

  
    
  885 SOMEIPSRVRPC18 In Response copy Message ID  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Return Code have to be set to the 
appropriate values NOT E Checking For Message ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamLi stenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Expected Service ID is set to SERVICE ID1 
         SOMEIP Expected Method ID is set to  
           UNKNOWN METHODIDSI1 
9 DUT CONFIGURE Stop Service on DIfa ce0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  886 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Expected Service ID is set to SERVICE ID1 
 SOMEIP Expected Method ID is set to  
UNKNOWN METHOD IDSI1 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC19 In Response copy Request ID  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Re turn Code have to be set to the 
appropriate values NOTE Checking For Request ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set t o SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  887 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Packet Expected Header Request ID is set to  
           CLIENT1 CURRREQUESTID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Packet Expected Header Request ID is set to  
CLIENT1 CURR REQUEST ID 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC20 In Response copy Interface Version  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message T ype and Return Code have to be set to the 
appropriate values NOTE Checking For Interface Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 

  
    
  888          SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Mes sage 
contains  
         Interface Version is set to SERVICE ID1INTFVERMAJ 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Interface Version is set to SERVICE ID1INTF VER MAJ  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362  Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
 
 
  

  
    
  889 516  Test Cases ETS  
51611  SOMEIPETS01 ArrayLengthlongerasmessagelengthallowsit  
Synopsys  Check that the DUT gives back an error message when the array length is longer 
then the SOMEIP length allows it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section ge neral Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
longer than allowed by message length  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
PRSSOMEIP00099  
PRSSOMEIP00100  
Notes  The test will also pass if the DU T ignor es the request   
 
51612  SOMEIPETS02  ArrayLengthtoolong  
Synopsys  Check that the DUT gives back an error message when the array length i s longer 
than the actual array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
longer than the actual array  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00902PRSSOMEIP00099  
Notes  The test will also pass if the DU T ignor es the request   
 

  
    
  890 51613  SOMEIPETS03 ArrayLengthtooshortstripsPayload  
Synopsys  Check that the DUT strips the payload of the array to the array length when the 
array length is shorter then the actual array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
shorter then the actual array  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns method response M essage with stripped 
Payload 
Pass Criteria  DUT returns method response M essage with stripped Payload  
Reference  PRSSOMEIP00099  
Notes    
 
51614  SOMEIPETS 04 BurstTest  
Synopsys  Check that the DUT can handle  a burst  of requests in a short time and process 
them to give back an answer to all of them  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create valid SOMEIP Message   
2 TESTER send burst of SOMEIP Message  requests using 
method echoUINT8   
3 DUT returns method response M essage response to each 
request 
Pass Criteria  DUT returns method response M essage response to each request  
Reference  PRSSOMEIP00065  
Notes    
 
51615  SOMEIPETS 05 checkByteOrder  
Synopsys  Check byte order handling of parameters sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  891 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with two parameters 
UINT8 and UINT16  
2 TESTER send SOMEIP Message  using method checkByteOrder  
3 DUT returns method response message with valid UINT32 
value  sum of the two passed Parameters UINT8  
UINT16 in the Request  
Pass Criteria  DUT returns method response message with valid UINT32 value  sum 
of the two passed Parameters UINT8  UINT16 in the Request  
Reference  PRSSOMEIP00191PRSSOMEIP00065  
Notes    
51616  SOMEIPETS 07 echoBitfields  
Synopsys  Check  the bitfields and the ir order  sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoBitfields  
3 DUT returns method response message with bitfields in 
reversed order per bitfield  compared to the reuquest  
Pass Criteria  DUT returns method response message with bitfields in reversed 
order per bitfield  compared to the reuquest  
Reference  PRSSOMEIP00191PRSSOMEIP 003001PRSSOMEIP00300  
Notes    
 
51617  SOMEIPETS 08 echoCommonDatatypes  
Synopsys  Check Common  Datatypes boolean UINT81632 INT81632 float32 
parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 

  
    
  892 echoCommonDatatypes  
3 DUT returns method response message with same data 
values and order as in the request  
Pass Criteria  DUT returns method response message with same content values 
and order as in the request  
Reference  PRSSOMEIP00065  
Notes    
 
51618  SOMEIPETS 09 echoENUM  
Synopsys  Check Enum parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message 
2 TESTER send SOMEIP Message  using method echoENUM  
3 DUT returns method response message with same data 
values and order as in the request  
Pass Criteria  DUT returns method response message with same content values 
and order as in the request  
Reference  PRSSOMEIP00191  
Notes    
 
51619  SOMEIPETS 12 echoExtDatatypes16BitLengthStructureOfStrings  
Synopsys  Check echoExtendedDatatypes16BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with  a 16Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes16BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  

  
    
  893 Reference  PRSSOMEIP00079  
Notes   
 
516110  SOMEIPETS 13 echoExtDatatypes16BitLengthStructureOfStringUnion  
Synopsys  Check echoExtendedDatatypes16BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 16Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes16BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00079  
Notes   
 
516111  SOMEIPETS 14 echoExtDatatypes8BitLengthStructureOfStrings  
Synopsys  Check echoExtendedDatatypes8BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 8Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testabilit y Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes8BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00079  
Notes   
 

  
    
  894 516112  SOMEIPETS 15 echoExtDatatypes8BitLengthStructureOfStringUnion  
Synopsys  Check echoExtendedDatatypes8BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 8Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes8BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00191  
Notes   
 
516113  SOMEIPETS 19 echoFLOAT64  
Synopsys  Check echoFLOAT64 parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER create SOMEIP Message  
4 TESTER send SOMEIP Message  using method echoFLOAT64  
5 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516114  SOMEIPETS21  echoINT8  
Synopsys  Check echoINT8  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  895 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message 
2 TESTER send SOMEIP Message  using method echoINT8  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516115  SOMEIPETS22  echoStaticUINT8ArrayOneDimensional  
Synopsys  Check echoStaticUINT8ArrayOne Dimensional parameters and their order 
sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoStaticUINT8Array  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00099PRSSOMEIP00100  
Notes   
 
516116  SOMEIPETS25  echoTYPEDEF  
Synopsys  Check echoTypedef parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  

  
    
  896 2 TESTER send SOMEIP Message  using method echoTypedef  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516117  SOMEIPETS27  echoUINT8  
Synopsys  Check echoUINT8  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoUINT8  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00052PRSSOMEIP00053PRSSOMEIP00058  
Notes   
 
516118  SOMEIPETS 28 echoUINT8Array  
Synopsys  Check echoUINT8Array  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array  
3 DUT returns method response message with same value 
as in the request 
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00375PRSSOMEIP00377  

  
    
  897 PRSSOMEIP00114PRSSOMEIP00052PRSSOMEIP00053  
Notes    
516119  SOMEIPETS 29 echoUINT8Array16Bitlength  
Synopsys  Check  echoUINT8Array16BitLength parameters and that the length field is 16 Bit 
long and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array16Bitlength  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00375PRSSOMEIP00377  
PRSSOMEIP00052PRSSOMEIP00107  
Notes   
 
516120  SOMEIPETS30  echoUINT8Array2Dim  
Synopsys  Check echoUINT8Array2Dim  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array2Dim  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00101PRSSOMEIP00102  
PRSSOMEIP00377PRSSOMEIP00114PRSSOMEIP00052  
Notes   

  
    
  898  
516121  SOMEIPETS31  echoUINT8Array8Bitlength  
Synopsys  Check echoUINT8Array8BitLength parameters and that the length field is 8 Bit 
long and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array8Bitlength  
3 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00099PRSSOMEIP00100PRSSOMEIP00052  
Notes    
516122  SOMEIPETS32  echoUINT8ArrayMinSize  
Synopsys  Check echoUINT8ArrayMinSize  parameters and their order sending and 
receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8ArrayMinSize  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00377PRSSOMEIP00114  
Notes   
 

  
    
  899 516123  SOMEIPETS33  echoUINT8ArrayMinSize tooshort  
Synopsys  Check that the DUT can handle an echoUINT8ArrayMinSize which is shorter 
than 3 elements of the array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  with a too short arra y 
using method echoUINT8ArrayMinSize  
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00377PRSSOMEIP00114  
Notes   
 
516124  SOMEIPETS34  echoUINT8E2E  
Synopsys  The method returns the transferred UINT8 value back to the invoker The 
method is E2E protected  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameter s 
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8E2E  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516125  SOMEIPETS35  echoUINT8RELIABLE  
Synopsys  Check echoUINT8RELIABLE parameters and their order and check for handling 
a tcp connection sending and receiving  

  
    
  900 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8RELIABLE  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065PRSSOMEIP00708  
Notes   
 
516126  SOMEIPETS36 echoUINT8RELIABLECheckMagicCookies  
Synopsys  Check that the DUT sends out magic cookie messages by sending a lot of 
SOMEIP messages over TCP  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8RELIABLE  
3 DUT returns method response message with same value 
as in the request  
4 DUT sends Magic cookies  
Pass Criteria  DUT returns method response message with same value as in the 
request 
DUT sends Magic cookies  
Reference  PRSSOMEIP00154PRSSOMEIP00161  
Notes   
516127  SOMEIPETS37 
echoUINT8RELIABLEclientclosesTCPconnectionautomatically  
Synopsys  Client builds up a connection and sends a  reset interface message  
 DUT sends a FINACK when the service is stopped  
 Client shall close tcp connection automatically according to FINACK from 
DUT  tcp connection successful  

  
    
  901 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a reset interface message  
2 DUT sends a FINACK when the service is stopped  
Pass Criteria  DUT sends a FINACK when the service is stopped 
Reference  PRSSOMEIP00708PRSSOMEIP00711  
Notes   
 
516128  SOMEIPETS38  echoUNION  
Synopsys  Check echoUNION parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoUNION  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes   
 
516129  SOMEIPETS39  echoUTF16DYNAMIC  
Synopsys  Check echoUNION parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  
3 DUT returns method response message with same value 

  
    
  902 as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00084PRSSOMEIP00085  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516130  SOMEIPETS40 echoUTF16DYNAMIClengthtoolongforString  
Synopsys  Tester sending out a length which is longer than the actual string and DUT 
should give back  an Error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with too big length  
2 DUT returns Error Message  MALFORMEDMESSAGE   
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
516131  SOMEIPETS41 
echoUTF16DYNAMIClengthtooshortformalformedString  
Synopsys  According to the SOMEIP specification for UTF 16 strings with dynamic length 
devices receiving this type of strings shall strip the total amount of bytes received to 
fit the exact length specified int the strings length field This test case wi ll request 
the DUT to reply a echoUTF16DYNAMIC as defined in the Testability Service 
carrying a dynamic UTF 16 string whose specified length forces the DUT to reduce 
the received string to only 2 bytes  resulting in an invalid payload consisting only o f 
an incomplete BOM  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  903 Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with  
i Source MAC set to the testers MAC address  
ii destination MAC set to the DUTs MAC address  
iii  Source Port set to 30492  
iv destination port  set to the UDP endpoint option 
provided by the DUTs OfferService for the 
Testability Service  
v Source I P set to the testers IP address  
vi destination IP set to the UDP endpoint option 
provided by the DUTs OfferServi ce for the 
Testability Service  
vii  ServiceID set to 0x0101  
viii  Instance Id set to 0x01  
ix MethodID set to 0x0016  
x Payload 0x00 00 00 80 FE FF 00 48 00 48  00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48  
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00  48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 00  
2 DUT returns method response message with same value as 
in the request  
3 TESTER repeat  step 1 but changing the payload of the 
echoUTF16Dynamic re quest to  
xi 0x00 00 00 02 FE FF 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 00  
  
4 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns method response message with  same value as in the 
request 
DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00084PRSSOMEIP00085  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516132  SOMEIPETS42 echoUTF16DYNAMIClengthtooshortforString  
Synopsys  Check that the DUT rejects with a malformed message an echoUTF16DYNAMIC 

  
    
  904 string which has a length that is shorter than the actual string  
Prerequisites  DUT ETS is running and offering th e Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  with a length which is 
shorter than the actual string  using method 
echoUTF16DYNAMIC  
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
 
516133  SOMEIPETS43 echoUTF16DYNAMICoddnumberbeforetermination  
Synopsys  Check that the DUT can handle an echoUTF16DYNAMIC string which has an odd 
number by sending a byte more before the termination and the DUT should give 
back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte before the termination  using method 
echoUTF16DYNAMIC  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372PRSSOMEIP00085  
PRSSOMEIP00086PRSSOMEIP00092  
Notes   
516134  SOMEIPETS44 
echoUTF16DYNAMICwithoddnumberaftertermination  
Synopsys  Check that the  DUT can handle an echoUTF16DYNAMIC string which has an odd 
number by sending a byte more after the termination and the DUT should strip this 
byte away  

  
    
  905 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte after the termination  using method 
echoUTF16DYNAMIC  
2 DUT returns method response message with  odd number 
after the termination and corrected  values 
Pass Criteria  DUT returns method response message with odd number after the 
termination and corrected  values 
Reference  PRSSOMEIP00372PRSSOMEIP00085  
PRSSOMEIP00086PRSSOMEIP00092  
Notes   
 
516135  SOMEIPETS4 5 echoUTF16DYNAMICwrongBOM  
Synopsys  Check that the DUT can handle an echoUTF16DYNAMIC string which has a 
wrong BOM and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with a wrong BOM  using 
method echoUTF16DYNAMIC  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00087  
Notes   
516136  SOMEIPETS46  echoUTF16FIXED  
Synopsys  Check echoUTF16FIXED parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using method 

  
    
  906 echoUTF16FIXED  
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00373PRSSOMEIP00084  
PRSSOMEIP00085PRSSOMEIP00087  
Notes   
 
516137  SOMEIPETS47 echoUTF16FIXEDwithoddnumber  
Synopsys  Check that the DUT can handle an echoUTF16FIXED string which has an odd 
number by sending a byte more after the termination and the DUT should strip this 
byte away  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  3 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte after the termination  using method 
echoUTF16FIXED  
1 DUT returns method response message with odd number 
after the termination and without the additional byte  
Pass Criteria  DUT returns method response message with odd number after the 
termination and without the additional byte  
Reference  PRSSOMEIP00085PRSSOMEIP00086  
Notes   
516138  SOMEIPETS48  echoUTF8DYNAMIC  
Synopsys  Check echoUTF8DYNAMIC parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message using method 
echoUTF8DYNAMIC   
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 

  
    
  907 request 
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516139  SOMEIPETS49 echoUTF8DYNAMIClengthtoolongforString  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
length that is longer than the actual string and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has a length that is longer 
than the actual string  using method echoUTF8DYNAMIC   
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
516140  SOMEIPETS50 
echoUTF8DYNAMIClengthtooshortformalformedString  
Synopsys  According to the SOMEIP specification for UTF 8 strings with dynamic length 
ECUs receiving this type of strings shall strip the total amount  of bytes received to fit 
the exact length specified in the strings length field This test case will request the 
DUT to reply an echoUTF8DYNAMIC as defined in the Testability Service 
carrying a dynamic UTF 8 string whose specified length forces the DU T to reduce 
the received string to only 2 bytes  resulting in an invalid payload consisting only of 
an incomplete BOM  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check sect ion general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with  
xii  Source MAC set to the testers MAC address  

  
    
  908 xiii  destination MAC set to the DUTs MAC address  
xiv  Source Port set to 30492  
xv destination port  set to the UDP endpoint option 
provided by the DUTs OfferService for the 
Testability Service  
xvi  Source IP set to the testers IP address  
xvii  destination IP set to the UDP endpoint option 
provided by the DUTs OfferServi ce for the 
Testability Service  
xviii  ServiceID set to 0x0101  
xix  Instance Id set to 0x01  
xx MethodID set to 0x0015  
xxi  Payload 0x00 00 00 80 EF BB BF 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 4 8 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 00  
2 DUT returns method response message with  same value as 
in the request  
3 TESTER repeat  step 1 but changing the payload of the 
echoUTF16Dynamic request to  
xxii  0x00 00 00 02 EF BB BF 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 00  
 
4 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns method response message with same value as in the 
request 
DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516141  SOMEIPETS51 echoUTF8DYNAMIClengthtooshortforString  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
length that is shorter than the actual string  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
  909 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has a length that is 
shorter  than the actual string  using method echoUTF8DYNAMIC   
2 DUT returns method response message with data string 
stripped to the length field value  
Pass Criteria  DUT returns method response message with data string stripped to 
the length field value  
Reference  PRSSOMEIP00372  
Notes   
516142  SOMEIPETS5 2 echoUTF8DYNAMICwrongBOM  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
wrong BOM and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with wrong BOM using method 
echoUTF8DYNAMIC   
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372PRSSOMEIP00087  
PRSSOMEIP00091PRSSOMEIP00092  
PRSSOMEIP00094PRSSOMEIP00095  
Notes   
516143  SOMEIPETS5 3 echoUTF8FIXED  
Synopsys  Check echoUTF8FIXED parameters and their  order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using  method echoUTF8FIXED  
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 

  
    
  910 Reference  PRSSOMEIP00373PRSSOMEIP00087  
Notes   
516144  SOMEIPETS5 4 Lengthequals0Test  
Synopsys  Check that the DUT gives back an error message when the SOMEIP length 
equals zero  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with length zero  using  
method echoUINT8  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
Notes   
516145  SOMEIPETS55 Lengthsmallerthan8Test  
Synopsys  Check that the DUT gives back an error message when the SOMEIP length is 
less than  8 bytes  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with length less than  8 bytes 
using  method echoUINT8  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
Notes   
516146  SOMEIPETS58 Lengthwaytoolong  
Synopsys  Tester sends a much longer SOMEIP length than the current payload with a few 
requests and DUT should give back an Error message or directly ignore it  

  
    
  911 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP messages with a much longer SOMEIP 
length than the current payload  
2 DUT returns Error Message  MALFORMEDMESSAGE  or 
ignores the Message  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  or ignores the 
Message 
Reference  PRSSOMEIP00902PRSSOMEIP00191  
Notes   
516147  SOMEIPETS59 
ResetInterfacewrongFireandforgetpackagegetNoErrorback  
Synopsys  Check that the DUT doesnt answer or send an error message to a wrong 
FireForget message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER use method TestFieldUINT8  with Field Getter 
method 
2 DUT returns the requested field value  
3 TESTER store the returned value and increment it  
4 TESTER use  method TestFieldUINT8  with Setter method 
and set the incremented value  
5 DUT return the field value which was set by the 
Tester 
6 TESTER trigger a reset of the interface by using 
method resetInte rface 
7 TESTER use  method TestFieldUINT8  with Field Getter 
method to request the field value again  
8 DUT returns the incremented value which was set by 
the Tester in step 4  
Pass Criteria  DUT returns the incremented value which was set by the Tester in 
step 4 
Reference  PRSSOMEIP00701PRSSOMEIP00170  
PRSSOMEIP00171PRSSOMEIP00189  
Notes   

  
    
  912 516148  SOMEIPETS60 SDDiscoverPortandIP  
Synopsys  The DUT has to answer the Testers Multicast FindService with a Unicast 
OfferService stating all IPs and Ports needed to fulfill all sort of possible 
Comunications with it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send Multicast FindService  
2 DUT returns Unicast OfferService stating all IPs and Ports 
needed to fulfill all sort of possible Comunications with it  
Pass Criteria  DUT returns Unicast OfferService stating all IPs and Ports needed to fulfill all 
sort of possible Comunications with it  
Reference  PRSSOMEIPSD00310PRSSOMEIPSD00357  
PRSSOMEIPSD00358PRSSOMEIPSD00361  
PRSSOMEIPSD00362  
Notes   
 
516149  SOMEIPETS61 SendingtwoSOMEIPMessagesinarow  
Synopsys  Sending three SOMEIP messages in one UDP package DUT has to reply on all 
three SOMEIP messages  and send the correct response  
Check the handling when more SOMEIP messages are in one transport protocol 
frame  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send two SOMEIP messages in one UDP frame  eg 
using the methods echoUINT8 and echoENUM  in combination  
4 DUT returns the method results of both requests in one 
message or separate messages  
Pass Criteria  DUT returns the method results of both requests in one message or 
separate messages  
Reference  PRSSOMEIPSD00310PRSSOMEIPSD00357  
PRSSOMEIPSD00358PRSSOMEIPSD00361  

  
    
  913 PRSSOMEIPSD00362  
Notes   
516150  SOMEIPETS63 StringUTF16FIXEDtoolongstripsto64Byte  
Synopsys  Check that the DUT strips a UTF16FIXED string which is too long to 64 Byte  
Check string length handling  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a echoUTF16FIXED message with 
unrepairable payload  
2 DUT returns Error Message  MALFORMEDMESSAGE  
3 TESTER send a echoUTF16FIXED message with 
repairable payload  
4 DUT answers with a correctly repaired message  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
DUT answers with a correctly repaired message  
Reference  PRSSOMEIP00373  
Notes   
516151  SOMEIPETS64 StringUTF16FIXEDtooshort  
Synopsys  Check that the DUT which has a UTF16FIXED string which is shorter than 64 
Byte gives back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  5 TESTER send SOMEIP Message  with string which is shorter 
than 64 Byte using method echoUTF16FIXED   
6 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00373  
Notes   

  
    
  914 516152  SOMEIPETS65 StringUTF8FIXEDtoolongstripsto64Byte  
Synopsys  Check that the DUT strips a UTF8FIXED string which is too  large  larger than  64 
Byte  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with string which is lager  
than 64 Byte using method echoUTF16FIXED   
2 DUT returns method response message with payload  
stripped to 64 Byte  
Pass Criteria  DUT returns method response message with payload stripped to 64 
Byte 
Reference  PRSSOMEIP00373  
Notes   
516153  SOMEIPETS66 StringUTF8FIXEDtooshort  
Synopsys  Check that the DUT which has a UTF8FIXED string which is shorter than 64 
Byte gives back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with string which is shorter  
than 64 Byte using method UTF8FIXED  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00373  
Notes   
516154  SOMEIPETS67 UINT8ArraywithLength0stripsPayload  
Synopsys  Check that the DUT strips the array to no payload when the array length equals 
zero  

  
    
  915 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Paramet ers Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with array length equal to zero 
using method UINT8Array  
2 DUT returns method response message with payload 
length zero no payload  
Pass Criteria  DUT returns method response message with payload length zero no 
payload  
Reference  PRSSOMEIP00375PRSSOMEIP00377PRSSOMEIP00114  
Notes   
516155  SOMEIPETS68 UnalignedSOMEIPMessagesoverTCP  
Synopsys  Sending three SOMEIP messages in one TCP package and one SOMEI P message 
is unaligned DUT has  to reply to all three SOMEIP messages and send the correct 
response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send three SOMEIP Message s in one TCP package  
with one unaligned SOMEI P message using method 
echoUINT8array  
2 DUT returns method response messages to all three 
requests  
Pass Criteria  DUT returns method response messages to all three requests  
Reference  PRSSOMEIP00142PRSSOMEIP00569  
Notes   
516156  SOMEIPETS69 UnalignedSOMEIPMessagesoverUDP  
Synopsys  Sending three SOMEIP messages in one UDP package and one SOMEIP message is 
unaligned DUT hast to reply on all three SOMEIP messages and send the correct 
response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  916 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send three SOMEIP Messages in one UDP package  
with one unaligned SOMEIP message using method echoUINT8array  
2 DUT returns method response messages to all three 
requests  
Pass Criteria  DUT returns method response messages to all three requests  
Reference  PRSSOMEIP00142PRSSOMEIP00569  
Notes  
 
516157  SOMEIPETS70 UnionLengthlongerasmesagelengthallowsit  
Synopsys  Check that the DUT gives back an error message when the union length is longer then the 
SOMEIP length allows it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where the union length is longer 
then the SOMEIP length allows it  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516158  SOMEIPETS71 UnionLengthtoolong  
Synopsys  Check that the DUT gives back an error message when the union length is longer than the 

  
    
  917 actual union  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union length is longer 
than the actual union  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516159  SOMEIPETS72 UnionLengthtooshort  
Synopsys  Tester sending out a request where the union length is shorter than the actual message 
length allows it and the DUT should give back an Error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union length is is 
shorter than the actual message length allows it  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 

  
    
  918 516160  SOMEIPETS73 
UnionwithwrongtypefieldforunionmemberPadding  
Synopsys  Check that the DUT gives back the correct Union for the type field with or without 
padding when the union has the wrong type field for the payload  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union has the wrong 
type field for the payload  using method echoUNION 
2 DUT returns method response messages with the correct 
union type and adjusted padding  
Pass Criteria  DUT returns method response messages with the correct union type 
and adjusted padding  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516161  SOMEIPETS74  WrongInterfaceVersion  
Synopsys  Check that the DUT gives back an error message or ignores it when a wrong interface 
version arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with wrong Interface Version 
using method echoU INT8 
2 DUT returns Error Message WRONGINTERFACEVERSION  or ignores 
the request  
Pass Criteria  DUT returns Error Message WRONGINTERFACEVERSION  or ignores the request  

  
    
  919 Reference  PRSSOMEIP00053PRSSOMEIP00058  
PRSSOMEIP00190PRSSOMEIP00191  
Notes  
 
516162  SOMEIPETS75  WrongMessageType  
Synopsys  Check that the DUT gives back an error message or ignore s it when a wrong Message  
Type  arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with wrong Message Type  using 
method echoU INT8 
2 DUT returns Error Message WRONGMESSAGETYPE  or ignores the 
request  
Pass Criteria  DUT returns Error Message WRONGMESSAGETYPE  or ignores the request  
Reference  PRSSOMEIP00055PRSSOMEIP00701  
Notes  
 
516163  SOMEIPETS76  WrongMethodID  
Synopsys  Check that the DUT gives back an error message or ignore s it when a wrong M ethod ID 
arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  920 Test Procedure  1 TESTER send SOMEIP Message with wrong M ethod ID using method 
echoU INT8 
2 DUT returns Error Message UNKNOWNMETHOD  or ignores the 
request  
Pass Criteria  DUT returns Error Message UNKNOWNMETHOD  or ignores the request  
Reference  PRSSOMEIP00058PRSSOMEIP00190  
PRSSOMEIP00191PRSSOMEIP00055  
Notes  
 
516164  SOMEIPETS77  WrongServiceID  
Synopsys  Check that the DUT gives back  an error message when a wrong S ervice I D arrives in a 
request or the DU T shall ignore the request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SOMEIP Message with wrong S ervice I D using method 
echoU INT8 
4 DUT returns Error Message UNKNOWNSERVICE  or ignores the request  
Pass Criteria  DUT returns Error Message UNKNOWNSERVICE  or ignores the request  
Reference  PRSSOMEIP00190PRSSOMEIP00191  
Notes  
 
 
516165  SOMEIPETS78 WrongSOMEIPProtocolVersion  
Synopsys  Check that the DUT gives back  an error message when a wrong Protocol Version arrives in 
a request or the DU T shall ignore the request  

  
    
  921 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  5 TESTER send SOMEIP Message with wrong Protocol Version using 
method echoU  echoUINT8 NION  
6 DUT returns Error Message WRONGPROTOCOLVERSION or ignores the 
request  
Pass Criteria  DUT returns Error Message WRONGPROTOCOLVERSION or ignores the request  
Reference  PRSSOMEIP00052PR SSOMEIP00190PRSSOMEIP00191  
Notes  
 
 
516166  SOMEIPETS81 ClientServiceActivateServerreboot  
Synopsys  Check if the DUT detected a reboot of a server it reacts properly by re establishing the 
communication  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  
2 TESTER  send OfferService to offer the Testers ETS with a TCP Endpoint 
option  
3 DUT establishes a TCP connection with the tester based o n the offered 
end point options  
4 DUT subscribes to the event group clientServiceSubscribeEventgroup 
0x0032 The end point option of this subscription shall match the 
parameters of the TCP connection IP address and port  
5 TESTER  send SubscribeEventgroup Ack to the DU T 
6 TESTER simulate  a reboot by sending OfferService entries in SOMEIP SD 
message with lower Session ID as before  

  
    
  922 7 DUT renew s its TCP connection by closing the old one and opening a new 
one 
Pass Criteria  DUT establishes a TCP connection with the tester based on the offered end point options  
DUT subscribes to the event group clientServiceSubscribeEventgroup 0x0032 The end 
point option of this subscription shall match the parameters of the TCP connection IP 
address and port  
DUT renews its TCP connection by closing the old one and opening a new one  
Reference  PRSSOMEIPSD00385  
Notes  No ICMP port unreachable message shall be sent from the DUT 
 
516167  SOMEIPETS82 ClientServiceActivateServerreboot2  
Synopsys  Check if the DUT detected a reboot of a server it reacts properly by using the newly 
assigned UDP Port  
Prerequisites  DUT ETS is  running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  
2 TESTER  send OfferService to offer the Testers ETS with a UDP Endpoint 
option  
3 DUT subscribes to the event group clientServ iceSubscribeEventgroup 
0x0032  
4 TESTER  send SubscribeEventgroup Ack to the DU T 
5 TESTER send a SOMEIP Event to the D UT 
6 TESTER simulate  a reboot by sending OfferService entries in SOMEIP SD 
message with lower Session ID as before  
7 TESTER send OfferService to offer the Testers ETS again with another 
UDP port in the endpoint option  
8 DUT subscribes again to  the event group 
clientServ iceSubscribeEventgroup 0x0032  
9 TESTER  send SubscribeEventgroup Ack to the DU T 
10 TESTER send  a SOMEIP Event to the D UT from the new UDP port  

  
    
  923 Pass Criteria  DUT subscribes to the event group clientServiceSubscribeEventgroup 0x0032  
DUT subscribes again t o the event group clientServiceSubscribeEventgroup 0x0032  
Reference  PRSSOMEIPSD00385  
Notes  No ICMP port unreachable message shall be sent from the DUT 
516168  SOMEIPETS84  ClientServiceDeactivate  
Synopsys  The DUT is expected to stop the Client Mode halting all reactions to clientService related 
Requests  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  with a t imeout value  of 1 Second  
2 DUT starts the  client Start up Phase  
3 TESTER trigger the DUT to subscribe to the Testers Eventgroup using 
method clientServiceSubscribeEventgroup  
4 TESTER send OfferService message with the eventgroup parameterized 
in step 3  
5 DUT sends SubscribeEventgroup  
6 TESTER  deactivate the DU Ts ETS client Service mode  by method 
clientServiceDeactivate  
7 DUT sends StopSubscribeEventgroup  to cancel the subscription of step 5  
Pass Criteria  DUT starts the client Start up Phase  
DUT sends SubscribeEventgroup  
DUT sends StopSubscribeEventgroup  to cacnel the subscription of step 5  
Reference  PRSSOMEIPSD00386PRSSOMEIP00710  
PRSSOMEIP007 08PRSSOMEIPSD00351  
Notes  
 

  
    
  924 516169  SOMEIPETS85  EventgroupEventsAndFieldsAll2  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fiel ds regarding the 
Eventgroup 0x02  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated 
in the SubscribeEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
TestfieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 
SubscribeEventgroup Messag e 
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387  
PRSSOMEIPSD00391  
Notes   
516170  SOMEIPETS86  EventgroupEventsAndFieldsAll2 TCP  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fiel ds regarding the 
Eventgroup 0x02  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  925 Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated 
in the Subscri beEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
TestfieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 
SubscribeEventgroup Messag e 
Reference  PRSSOM EIPSD00386  
PRSSOMEIPSD00387PRSSOMEIPSD00391  
PRSSOMEIPSD00391  
Notes   
 
516171  SOMEIPETS87  EventgroupEventsAndFieldsUnreliable5  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fields regarding the 
Eventgroup 0x05  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x0 5 
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated in 
the SubscribeEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
Testf ieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 

  
    
  926 SubscribeEventgroup Messag e 
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387PRSSOMEIPSD00391  
Notes  
 
516172  SOMEIPETS88 SDAnswermultiplesubscribestogether  
Synopsys  The DUT has to accept each SubscribeEventgroup Entry it receives  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  a message wi th multiple SubscribeEventgroup Entries  for 
the Eventgroups   
 0x02  
 0x05  
 0x06  
2 DUT sends SubscribeEventgroupAck for each entry  
Pass Criteria  DUT sends SubscribeEventgroupAck for each entry  
Reference  PRSSOMEIPSD00263SIPSD65SIPSD836  
Notes  
 
516173  SOMEIPETS89 
SDCallingsameportsbeforeandaftersuspendInterface  
Synopsys  A certain amount of method calls are made using specific source ports and all against the 
same SOMEIP port offered by the DUT  Once the tester has finished one request it will 
perform a new request against the DUTs SOMEIP port and therefore the DUT must be able 
to resume listening and dispatching requests on that port as soon as a previous request has 
finished  

  
    
  927 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER First TesFieldUINT8 Getter and Setter  
2 DUT responds normally  
3 TESTER request Interface Version  
4 DUT tells his Interface Version through another Port  
5 TESTER Second TestFieldUINT8 Getter and Setter  
6 DUT Similar to the first Try but using different Ports  
7 TESTER First TestFieldUINT8Array  
8 DUT The DUT has to answer the Getter and Set ter on the given Port  
9 TESTER SuspendInterface  
10 DUT suspends the Interface for the given ammount of Time and sends a 
StopOfferService Message  
11 TESTER Third TestFieldUINT8  
12 DUT has to answer again using the same Ports thus this must still be 
available  
13 TESTER Second call to InterfaceVersion  
14 DUT has to be able to answer to the same Ports it did before the 
SuspendInterface  
15 TESTER Fourth TestFieldUINT8  
16 DUT The same Ports must be open  
17 TESTER Second TestFieldUINT8Array  
18 DUT must have available the same  Ports it had for the first call  
Pass Criteria  
 
Reference  PRSSOMEIPSD00356PRSSOMEIPSD00364 PRSSOMEIPSD00357  
Notes  
 
516174  SOMEIPETS91 SDCheckOfferServiceRequestIDincrementation  
Synopsys  The DUTs regular OfferService Messages ha ve to increment  the Session ID from one 
iteration to the next one  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
   Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER observe the DUTs OfferService Messages  and analyze the 
Session IDs 
2 DUT increments the Session IDs of its OfferService Messages  
Pass Criteria  DUT increments the Session IDs of its OfferService Messages  
Reference  PRSSOMEIPSD00157  PRSSOMEIPSD00355 PRSSOMEIPSD00154  
Notes  
 
  SOMEIPETS92 SDCheckReactiontoaSubscribewithttl0  
Synopsys  The DUT shall not respond to a  unicast SubscribeEventgroup Request with TTL  0 ie 
StopSubscribeEventgroup  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send a unicast SubscribeEventgroup message with 
a TTL set to 0  
4 DUT does not react to the request  
Pass Criteria  DUT does not react to the request  
Reference  PRSSOMEIPSD00386 PRSSOMEIPSD00387PRSSOMEIPSD00391  
Notes  
 
 
516176  SOMEIPETS93 
SDCheckRebootDetectionseparatemulticastandunicast  
Synopsys  The DUT has to detect that the Client performed a reboot when sending Multicast and 

  
    
  929 Unicast  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  Test descriptionA Multicast  Test  
1 TESTER send FindService 0x0101 with Session ID 0x0004  
2 DUT can answer with a unicast or multicast offer service message  
3 TESTER subscribes to the Eventgroup 0x5 of the offered ETS by the DU T 
with Session ID 0x0004   
4 DUT shall send a SubscribeEventgroupAck to the tester  After the 
Acknowledge the D UT shall immediately send an initial event Notify of 
Field InterfaceVersion 0x8005 due to the new subscriptio n 
5 TESTER send a second FindService 0x0101 with Session ID 0x0005 1 
second  after step 1  
6 DUT can answer with a unicast or multicast offer service message  
7 TESTER subscribe to the Eventgroup 0x5 of the offered ETS by the D UT with 
Session ID 0x0005  
8 DUT shall send a SubscribeEventgroupAck to the tester  Afte r the second 
subscri ption the DU T is not allowed to send the initial event again  
9 TESTER send a third FindService 0x0101 with the Session ID 0x0001 
Client reboot simulation  
10 DUT can answer with a unicast or multicast offer service message  
11 TESTER subscribe to  the Eventgroup 0x5 of the offered ETS by the DuT with 
Session ID 0x0001  
12 DUT shall send a SubscribeEventgroupAck to the tester  It is expected that 
the DUT  sends the initial event again which means that it has detected the 
client reboot  
 
B Unicast  Test  
 
13 TESTER subscribe to the Eventgroup 0x5 of the offered ETS by the DuT with 
Session ID 0x0004  
14 DUT shall send a SubscribeEventgroupAck to the tester After the 
Acknowledge the DUT shall immediately send an initial event Notify of 
Field InterfaceVer sion 0x800 5 due to the new subscription  
15 TESTER sends  second Subscribe to the Eventgroup 0x5 with a higher 
Session ID 0x000 5 
16 DUT shall send a SubscribeEventgroupAck to the tester After the second 
subscription the DUT is not allowed t o send the ini tial event again  

  
    
  930 17 TESTER send a third Subscribe to the Eventgroup 0x5 with the Session ID 
0x0001 Client reboot s imulation  
18 DUT shall send a SubscribeEventgroupAck to the tester  It is expected that 
the DU T sends the initial event again which means tha t it has detected the 
client reboot  
 
C Unicast and Multicast  Robustness test  
 
19 Finally in order to see if the DUT is able to keep the reboot detection 
separated for multicast M and unicast U Messages both types of 
Messages are cross sent There is  no real reboot since the Session IDs for 
each kind of them are always incremented but they are lower for unicast 
than for multicast If the DUT is not able to keep them separated it would 
believe that a reboot happened and the Test would fail  
Pass Crit eria See expected DUT reactions above  
Reference  
 
Notes  
 
 
516177  SOMEIPETS94 SDCheckRebootDetectionServerSide  
Synopsys  The DUT has to detect a reboot of the Tester  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  20 TESTER send a SubscribeEventgroup message for 
Eventgroup 0x02 
21 DUT sends SubscribeEventgroup Ack 
22 TESTER trigger the DUT to send Events by using the method 
TriggerEventUint8  
  
23 DUT sends TestEventUint8  
24 TESTER send FindService message with a SessionID of 0x 05 
25 DUT continues sending TestEventUint8  
26 TESTER send FindService message with a SessionID of 0x 05 to 

  
    
  931 simulated a reboot  
27 DUT stops sending TestEventUin t8 
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends TestEventUint8  
DUT continues sending TestEventUint8  
DUT stops sending TestEventUint8  
Reference  PRSSOMEIPSD00157  
Notes  
 
516178  SOMEIPETS95 SDChecksubscribeeventgroupttlexpired  
Synopsys  The DUT has to detect that the Testers Subscription has expired ttl  3 and must  not 
respond to the Trigger that the Tester invokes after the TTL expired  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a SubscribeEventgroup message for 
Eventgroup 0x02 with a ttl value of 3 seconds  
2 DUT sends SubscribeEventgroup Ack 
3 TESTER wait for at least 3 seconds until the subscription has expired  
4 TESTER trigger the DUT to send Events by using the method 
TriggerEventUint8  
5 DUT does not send any TestEventUint8  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT does not send any TestEventUint8  
Reference  PRSSOMEIPSD00386  
Notes  
 
516179  SOMEIPETS96 
SDCheckTCPConnectionbeforeSubscribeEventgroup  
Synopsys  The DUT has to deny a SubscribeEventgroup request  for Eventgroup 0x02 with a 

  
    
  932 SubscribeEventgroupNAck in case the SubscribeEventgroup  request includes a TCP 
Endpoint Option but a TCP connection has not been established in advance  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a SubscribeEventgroup message for Eventgroup 
0x02 with a a  TCP Endpoint Option but the corresponding TCP 
connection is not established  
2 DUT sends SubscribeEventgroup NAck  
Pass Criteria  DUT sends SubscribeEventgroup NAck  
Reference  PRSSOMEIPSD00362  
Notes  
 
516180  SOMEIPETS97 SDClientrestartstcpconnection  
Synopsys  On the DUT Client Mode is started and a SubscribeEventgroup attempt is triggered therefor 
the DUT will try to establish a TCP Connection which will be refused by the Tester 
The DUT 
has to react to this refusal by trying to re engage the TCP Connection with a second TCP SYN 
Message as soon as it receives another OfferService Message 
The Tester will react to this 
accepting the se cond TCP SYN and expects that this leads the DUT to finally subscribe 
 After 
all this the client Mode is deactivated in order not to interfere with other TestCases  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  and send SubscribeEventgroup  
2 DUT trys to establish a TCP Connection  
3 TESTER refuse the TCP Connection  
4 DUT has to react to this refusal by trying to re engage the TCP Connection 

  
    
  933 with a second TCP SYN Message as soon as it receives another OfferService 
Message  
5 TESTER accept  the second TCP SYN  
Pass Criteria  DUT trys to establish a TCP Connection  
DUT has to react to this refusal by trying to re engage the TCP Connection with a second 
TCP SYN Message as soon as it receives another OfferService Message  
 
Reference  PRSSOMEIPSD00527  
Notes  
 
 
516181  SOMEIPETS98 SDClientSe rvicesubscribewithoutmethodcall  
Synopsys  The Tester activates the clientService Mode on the DUT and starts  sending OfferService 
Messages The DUT shall not try to subscribe with each OfferService it receives since the 
clientServiceSubscribeEventgroup Message that is needed for the DUT to can subscribe is 
not being sent by the tester 
 At the End of the TestCase the ClientService Mode is 
deactivated to prevent it from interfering with other TestCases  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  and start  sending OfferService Messages  
2 DUT shall not try to subscribe with each OfferService it receives  
Pass Criteria  DUT shall not try to subscribe with each OfferService it receives  
Reference  PRSSOMEIPSD00386  
Notes  
 
 

  
    
  934 516182  SOMEIPETS 99 SDClientServiceActivate  
Synopsys  The DUT is triggered to enter the Client Mode without stopping its already running Server 
Mode  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts the c lient Start Up procedure and stay s ready to behave as a 
client while it keeps running also the Server Mode  
3 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientServiceDea ctivate  
Pass Criteria  DUT starts the c lient Start Up procedure and stay s ready to behave as a client while it 
keeps running also the Server Mode  
Reference  PRSSO MEIPSD00350PRSSOMEIPSD00351  
Notes  
 
516183  SOMEIPETS100 
SDClientServiceActivatenoFindServicesinMainPhase  
Synopsys  The clientService Mode shall only send FindService Messages during the Start Up Phase 
not in the Main  Phase  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sen ding FindService messages during the Start Phase and 
stops sending FindService messages when entering the Main Phase  
3 TESTER deactivate the DUT s ETS client Service mode  by the method 

  
    
  935 clientServiceDea ctivate  
Pass Criteria  DUT starts sending FindService messages during the Start Phase and stops sending 
FindService messages when entering the Main Phase  
Reference  PRSSOMEIPSD00351  
Notes  
 
516184  SOMEIPETS101 SDClientServiceActivatesendStopOfferService  
Synopsys  Client Mode is activated on the DUT and when the DUT starts sending FindService messages  
the Tester send s StopOfferService T he DUT is expected to understand that the Service and 
Instance ID that it is look ing for is no longer available I t should stop sending FindService 
Messages for this Service an d Instance ID
 Find ALL FindService Messages are still allowed  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER send StopOfferService as soon as the first FindService message 
from the DUT arrives at the Tester  
4 DUT stops sending FindService messages  
5 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientServiceDea ctivate  
Pass Criteria  DUT starts sending FindService messages  
DUT stops sending FindService messages  
Reference  PRSSOMEIPSD00351PRSSOMEIPSD00363  
Notes  
 
516185  SOMEIPETS 103 SDClientServiceGetLastValueOfEventTCP  
Synopsys  The Tester activates the clietnService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it
 After that it sends it a UINT8 TCP Event to the IP and Port the DUT 

  
    
  936 indicated with its SubscribeEventgroup Message valued as 0x08 
 This Value has to be 
returned by the DUT once the Tester triggers the clientServiceGetLastValueOfEventTCP 
Method after this the clientService Mode is deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 TCP Event to the IP and Port the DUT indicated with 
its SubscribeEve ntgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventTCP Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup  Message  
DUT return the value of step 5  
Reference  PRSSOMEIPSD00380PRSSOMEIPSD00362  
Notes  
 
 
516186  SOMEIPETS 104 SDClientServiceGetLastValueOfEventUDPMulticast  
Synopsys  The Tester activates the clientService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it After that it sends it a UINT8 multicast Event to the IP and Port the DUT 
indicated with the Testers SubscribeEventgroupAck Message valued  as 0x08 
This Value has 
to be returned by the DUT once the Tester triggers the 
clientServiceGetLastValueOfEventUDPMulticast Method after this the clientService Mode 
is 
deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  937 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER  Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 multicast Event to the IP and Port the DUT indicated 
with its SubscribeEventgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventUDPMulticast Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeE ventgroup  Message  
DUT return the value of step 5  
Reference  PRSSOMEIPSD00360PRSSOMEIPSD00361  
Notes  
 
 
516187  SOMEIPETS 105 SDClientServiceGetLastValueOfEventUDPUnicast  
Synopsys  The Tester activates the clietnService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it After that it sends it a UINT8 UDP unicast Event to the IP and Port the 
DUT indicated with his SubscribeEventgroup Message valued as 0x08 
 This Value has to be 
returned by the DUT once the Tester triggers the 
clientServiceGetLastValueOfEventUDPUnicast Method after this the clientService Mode is 
deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  

  
    
  938 Procedure  2 DUT starts sending FindService messages  
3 TESTER Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 UDP Event to the IP and Port the DUT indicated with 
its SubscribeEventgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventUDPUnicast Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup  Message  
DUT return the value of step 5  
Reference  PRSSO MEIPSD00360PRSSOMEIPSD00361  PRSSOMEIPSD00380  
Notes  
 
 
516188  SOMEIPETS 106 SDClientServiceSubscribeEventgroup  
Synopsys  Client Mode is activated on the DUT and  it has to subscribe to the Tester  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER Send clientServiceSubscribeEventgroup Message  
4 TESTER send OfferService Messages offering the  ETS service  
5 DUT sends SubscribeEventgroup  Message to subscribe to the ETS 
service  
6 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup Message to subscribe to the ETS service  
Reference  PRSSOMEIPSD00385PRSSOMEIPSD00386  
PRSSOMEIPSD00268PRSSOMEIPSD00380  

  
    
  939 Notes  
 
516189  SOMEIPETS107 SDConsiderEntriesOrder  
Synopsys  The Tester initially subscribes to the DUT and then sends a Message containing two Entries 
A SubscribeEventgroup with TTL 0 and normal SubscribeEventgroup 
 The Testcases awaits 
the DUT first to delete the Tester from the List of subscribed Entities and then an 
SubscribeEventgroupAck in this order for the SubscribeEventgroup this one should be 
followed by the initial Fields for the subscribed Eventgroup 0x 05 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message to subscribe to Eventgroup 
0x05  
2 DUT sends SubscribeEventgroup Ack and the initial Events  
3 TESTER Send SD Message containing two Entries  
 StopSubscribeEventgroup Entry TTL  0 for Eventgroup 0x05  
 SubscribeEventgroup Entry for Eventgroup 0x05 to resubscribe  
4 DUT sends SubscribeEventgroup Ack and the initial Events again 
corresponding to the re subscription  
Pass Criteria  DUT sends SubscribeEventgroup Ack and the initial Events  
DUT sends SubscribeEventgroup Ack and the initial Events again corr esponding to the re 
subscription  
Reference  PRSSOMEIPSD00263  
Notes  
 
516190  SOMEIPETS108 SDDeregisterfromEventgroup  
Synopsys  The Tes ter subscribes and unsubscribes  Right after having received the Initial Events 
corresponding to the SubscribeEventgroup the Tester tries to trigger the TestEventUINT8 
and expects the DUT to ignore the Trigger since the initial Subscription is not active 
anymore  

  
    
  940 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message to subscribe to Eventgroup 
0x05  
2 DUT sends SubscribeEventgroup Ack and the initial Events  
3 TESTER Send StopSubscribeEventgroup message for Eventgroup 0x05  
4 TESTER by using the method TestEventUINT8  trigger the DUT to send a 
corresponding Event  
5 DUT does not send the Event as the initial s ubscription is not active 
anymore  
Pass Criteria  DUT sends SubscribeEventgroup Ack and the initial Events  
DUT does not send the Event as the initial s ubscription is not active anymore  
Reference  PRSSOMEIPSD00388PRSSOMEIPSD00389PRSSOMEIPSD00386  
Notes  
 
516191  SOMEIPETS109 SDDonotspecifyaport  
Synopsys  The Tester sends a SubscribeEventgroup Message without indicating a Port in the Endpoint  
Options  This should lead the DUT to reject the whole Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  Message without specifying a port in 
the Endpoint option port number is 0  
2 DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00380PRSSOMEIPSD00393  

  
    
  941 Notes  
 
 
516192  SOMEIPETS110 SDDonotspecifyIPv4Adress  
Synopsys  The Tester sends a SubscribeEventgroup Message which does not indicate IPv4 Addresses in 
the Endpoint  Options since this is not possible without malforming the message the 
transmitted IP is 32000 this should lead the DUT to reject the Message and answer with 
a SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message without specifying a valid IP 
address in the Endpoint option  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  
Notes  
 
 
516193  SOMEIPETS111 SDEmptyEntriesArray  
Synopsys  The Tester sends a SubscribeEventgroup Message which states a total length of Zero for 
the Entries Array though it should not be interpreted and complete ly ignored  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setu p Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  942 Test Procedure  1 TESTER send SubscribeEventgroup  Message with Entries Array  length 
zero  
2 DUT ignores the SubscribeEventgroup  message shows no reaction  
Pass Criteria  DUT ignores the SubscribeEventgroup  message shows no reaction  
Reference  PRSSOMEIPSD00540  
Notes  
 
 
516194  SOMEIPETS 112 SDEmptyOption  
Synopsys  The Tester sends Subscribe Eventgroup with IPv4Option length  0 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
options array length  0  
2 DUT sends SubscribeEventgroup NAck to reject the subscription 
attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00307  
Notes  
 
516195  SOMEIPETS113 SDEmptyOptionsArray  
Synopsys  The Tester sends Subscribe Eventgroup with IPv4Option length  0 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
  943 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
options array length  0  
4 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00393  
Notes  
 
 
516196  SOMEIPETS114 SDEntriesLengthwrongcombined  
Synopsys  The Tester sends SubscribeEventgroup  with two correct Entries but a shortened Entries 
Array l ength The DUT shall respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
two correct Entries but a shortened Entries Array l ength  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00265 PRSSOMEIPSD00264PRSSOMEIPSD00393  
Notes  
 
516197  SOMEIPETS115 SDEntryreferencesmoreoptionsthanexist  
Synopsys  The Tester sends SubscribeEventgroup  with more option references than existing option s 
The DUT shall respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  944 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
more option references than existing option s 
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
 
516198  SOMEIPETS116 SDEntryreferencesnonexistingoptiontype  
Synopsys  The Tester sends SubscribeEventgroup  with unknown Option type 0x77 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
unknown Option type 0x77  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00305PRSSOM EIPSD00307PRSSOMEIPSD00393  
Notes  
 
 

  
    
  945 516199  SOMEIPETS117 SDEntryreferencesoptionsofsamekind  
Synopsys  The Tester sends SubscribeEventgroup  with two options of the same type  The DUT shall 
respond Subscribe Eventgroup NAck or ignore the request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
two options of the same type  
2 DUT may send SubscribeEventgroup NAck to reject the subscription 
attempt or may ignore the request  
Pass Criteria  DUT may send SubscribeEventgroup NAck to reject the subscription attempt or may 
ignore the request  
Reference  PRSSOMEIPSD00393  
Notes  
 
5161100  SOMEIPETS118 SDIgnoreOptionsinFindService  
Synopsys  The Tester sends 10 Find Service messages with IPv4 Endpoint O ption The DUT shall 
ignore the options and respond with at least one  unicast Offer Service  message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Find Service messages with IPv4 Endpoint O ption  in 
100ms intervals  
2 DUT sends at least one  unicast Offer Service  message  
Pass Criteria  DUT sends at least one  unicast Offer Service  message  
Reference  PRSSOMEIPSD00268SIPSD877SIPSD878  
Notes  
 

  
    
  946  
5161101  SOMEIPETS119 SDIndicatewrongl4protoparam  
Synopsys  The SubscribeEventgroup Message sent by the Tester refers to an IPv4Endpoint Option with 
a wrong l4proto Parameter neither UDP or TCP since this way not all needed Endpoint 
Options are present in a cor rect way the Message has to be rejected with a 
SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message referencing an IPv4Endpoint 
Option with a wrong l4proto Parameter  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends at least one  unicast Offer Service  message  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
Notes  
 
5161102  SOMEIPETS120 SDInitialEventsafterSubscribewithalternateIPs  
Synopsys  The DUT has to answer the Testers SubscribeEvengroup Message with a 
SubscribeEventgroupAck and immediatelly after send out the corresponding Initial Fields 
for the Subscribed Eventgroup  to the destination stated in the SubscribeEventgroup 
Endpoint Option  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message referencing an IPv 4Endpoint 
Option which differs from the Testers IP and Port  
2 DUT sends SubscribeEventgroup Ack to the DUTs IP address and Port  
3 DUT sends the  initial fields to the IP address and Port given in the Endpoint 

  
    
  947 option of the request  
Pass Criteria  DUT sends SubscribeEventgroup Ack to the DUTs IP address and Port  
DUT sends the initial fields to the IP address and Port given in the Endpoint option o f the 
request  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387  
PRSSOMEIPSD00391PRSSOMEIPSD00391  
Notes  
 
5161103  SOMEIPETS121 SDInitialEventsafterSubscribeEventgroup  
Synopsys  The DUT has to answer the Testers SubscribeEvengroup Message with a 
SubscribeEventgroupAck and immediatelly after send out the corresponding Initial Fields for 
the Subscribed Eventgroup  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message for Eventgroup 0x05  
2 DUT sends SubscribeEventgroup Ack  
3 DUT sends the initial fields  
Pass Criteria  DUT sends SubscribeEventgroup Ack  
DUT sends the initial fields  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00391PRSSOMEIPSD00391  
PRSSOMEIPSD00310PRSSOMEIPSD00380PRSSOMEIPSD00360  
PRSSOMEIPSD00361PRSSOMEIPSD00362  
Notes  
 
 
5161104  SOMEIPETS 122 SDInterfaceVersion  
Synopsys  The DUT has to answer indicating its Interface Version in the correct format  

  
    
  948 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger  the Interface Version Getter method  
2 DUT returns the method response   
Pass Criteria  DUT returns the method response  
Reference  PRSSOMEIPSD00357  
PRSSOMEIPSD00360PRSSOMEIPSD00361  
Notes  
 
5161105  SOMEIPETS123 
SDLengthofEntryArraylongerthanmessageallows  
Synopsys  The Tester sends a SubscribeEventgroup Message whos Entry Array Length exceeds the 
Message total Length and so the Message should be unrecognizable for the DUT or at least 
too damaged to be answe red with  a SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message  with an  Entry Array length 
exceed ing the total Length  of the m essage  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265P RSSOMEIPSD00153PRSSOMEIPSD00270  
Notes  
 
 

  
    
  949 5161106  SOMEIPETS124 SDLengthofEntryArraytoolong  
Synopsys  The Messages Ent ry Array Length does not exceed  the Message total Length but goes far 
beyond its normal Limit and so the Message turns defect and must be rejected by the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup  message  with an  Entry Array length 
exceed ing the total Length  of the m essage  by at least 20 Bytes  
4 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00393  
PRSSOMEIPSD00270PRSSOMEIPSD00264  
PRSSOMEIPSD00566  
Notes  
 
5161107  SOMEIPETS125 SDLengthofEntryArraytooshort  
Synopsys  The Tester sends a SubscribeEventgroup Message  with an  Entry Array Length shorter 
than it should be based on the Le ngth indicated by each Option  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology  1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message  with an  Entry Array Length 
less than the sum of the Lengths indicated by each Option  
2 DUT sends SubscribeEventgroupNA ck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00270  
Notes  
 

  
    
  950 5161108  SOMEIPETS127 SDMulticastFindService  
Synopsys  The DUT receives 10 Multicast FindService Messages every 100ms asking for a valid 
ServiceIns tance ID depending on the DUT The DUT has to answer using a Unicast 
OfferService for this ServiceInstance ID 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
requesting  a valid ServiceIns tance ID depending on the DUT  
2 DUT responses with at least one  unicast OfferService  message  
Pass Criteria  DUT responses with at least one u nicast OfferService  message  
Reference  PRSSOMEIPSD00305PRSSOMEIPSD00306  
PRSSOMEIPSD00307PRSSOMEIPSD00261  
Notes  
 
5161109  SOMEIPETS128 
SDMulticastFindServiceMajorMinorVersionsettoall  
Synopsys  The DUT receives both 10 multicast FindService Requests with Major Version and later with 
a Minor Version set to 0xFF all of them in 100ms intervals and is expected to answer each 
one of th em with at least one unicast OfferService Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
with Major Version  set to 0xFF  Minor Version  set to Default value  
2 DUT responses with at least one u nicast OfferService  message  
3 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
with Minor Version  set to 0xFF FFFFFF  Major Version  set to Default value  
4 DUT responses with at least one u nicast OfferService  message  

  
    
  951 Pass Criteria  DUT responses with at least one u nicast OfferService  message  
DUT responses with at least one u nicast  OfferService  message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSOMEIPSD00306PRSSOMEIPSD00307 
PRSSOMEIPSD00351PRSSOMEIPSD00351  
Notes  
 
5161110  SOMEIPETS130 SDMulticast FindService withunicastFlagto0  
Synopsys  The DUT receives a multicast FindService Request with its Unicast Flag set to 0 and is 
expected to ignore this flag and to answer with a unicast OfferService Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test  Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a Multicast FindService message with Unicast Flag set to 0  
2 DUT sends a unicast OfferService Message  
Pass Criteria  DUT sends a unicast OfferService Message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSO MEIPSD00306PRSSOMEIPSD00307  
Notes  
 
5161111  SOMEIPETS134 SDOptionLengthendspastOptionsArrayVarA  
Synopsys  The Tester sends a SubscribeEventgroup Message whose Options Length surpasses the 
total Length indicated for the options Array and so the Message must be answered with an 
SubscribeEventgroupNAck or not answered at all  
 
In Variant A of this testCase the total length indicated in the SOMEIP Header is slightly 
shortened from 60 to 48 Bytes in order to cut the Options Array and make this one look 
shorter than it really is  
 
The Length of the Option Array is cut in the same order as in the SOMEIP Header lossing 
also 12 Bytes 
from 24 to 12 only the Options individual Length fields are  correct  

  
    
  952 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with an actual Option  Length  
greater  than the indicated options Array length  
2 TESTER sends SubscribeEventgroupNAck to reject the subscription request  
or ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00274PRSSOMEIPSD00393PRSSOMEIP00042  
Notes  
 
5161112  SOMEIPETS135 SDOptionLengthendspastOptionsArrayVarB  
Synopsys  The Tester sends a SubscribeEventgroup Message whose Options has a Length which 
surpasses the Length indicated  for the Options Array and so the Message must be answered 
with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with an actual Option  Length  
greater  than the indicated options Array length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  or 
ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00274PRSSOMEIPSD00393PRSSOMEIP00042  
Notes  
 

  
    
  953 5161113  SOMEIPETS136 
SDOptionLengthshorterGT0asspecifiedfortype  
Synopsys  The Tester sends a Sub scribeEventgroup Message with  a UDP Option Length less than  
specified for the Type 4 Bytes instead of 9 The  Message must be answered with an 
SubscribeEvent groupNAck or be fully ignored  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with UDP Option Length less 
than  specified for the Type  4 Bytes instead of 9  
2 DUT sends Subs cribeEventgroupNAck to reject the subscription request  or 
ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
Notes  
 
5161114  SOMEIPETS137 SDOptionshorterwithunalignednextoption  
Synopsys  The Tester sends a SubscribeEventgroup Message which first Option has a Length of 14 Bytes 
and the second one of 4 Bytes both are wrong sized but the total expected Length for the 
Optio ns Array is appearantly kept since the missing bytes are deleted from the UDP option 
and added as dummy bytes at the end of the TCP option  
 
The total SOMEIP length is kept at 60 and the missing bytes from the options array are 
replenished with dummy byte s 
 
The DUT has to answer this Message with a SubscribeEventgroupNAck since this change in 
the Option Sizes disrupts them and should turn them useless  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  954 Test 
Procedure  1 TESTER send SubscribeEventgroup Message with  
 TCP endpoint option length  14 bytes append dummy bytes  
 UDP endpoint option length  4 bytes cut to 4 bytes  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request   
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
PRSSOMEIP00042PRSSOMEIPSD00265PRSSOMEIPSD00274  
Notes  
 
5161115  SOMEIPETS138 SDOptionsArraylongerthanmessageallows  
Synopsys  The Tester sends a SubscribeEventgroup Message which stated Options Array Length is 
longer than the Message itself Option Array Length is 0x28 instead of 0x18  
 
The DUT shall return  SubscribeEventgroupAck  Due to AUTOSAR compatibility purpo ses it 
is also allowed to ignore t he message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Options Array Length  actual length  
2 DUT sends SubscribeEventgroupAck message or ignore the reuqest  
Pass Criteria  DUT sends SubscribeEventgroupAck message or ignore the reuqest  
Reference  PRSSOMEIPSD00390  
Notes  
 
 
5161116  SOMEIPETS139 SDOptionsArraytooshort  
Synopsys  The Tester sends a SubscribeEventgroup Message which  Options Array Length is shorter 
than  required 2 By tes instead of the original 24 T he Message must be answered with 

  
    
  955 SubscribeEventgroupNAck since the required Options for this Entry are not accesible 
anymore  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check s ection general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with  
 Options Array Length  actual length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00270PRSSOMEIPSD00566  
Notes  
 
5161117  SOMEIPETS140 SDRequestnonexistingEventgroupID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Eventgroup ID 
The Message must be answered with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Eventgroup ID  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 

  
    
  956 5161118  SOMEIPETS141 SDRequestnonexistingInstanceID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Instance ID 
The Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Instance ID 
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
5161119  SOMEIPETS142 SDRequestnonexistingMajorVersion  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Major 
Version  The Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Major Version  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393  
Notes  
 

  
    
  957 5161120  SOMEIPETS143 SDRequestnonexistingServiceID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing ServiceID  The 
Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing ServiceID  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00394PRSSOMEIPSD00393  
Notes  
 
5161121  SOMEIPETS144 SDReservedFieldEndpointOptionset  
Synopsys  The Tester sends a SubscribeEventgroup Message with the reserved Fields of the Endpoint 
Options set T he Message must be answered with SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the  Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 reserved Fields of the Endpoint Options set  
2 DUT ignores the reserved fields and sends SubscribeEventgroupAck  
Pass Criteria  DUT ignores the reserved fields and sends SubscribeEventgroupAck  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00391  
Notes  
 

  
    
  958 5161122  SOMEIPETS 146 SDResetInterface  
Synopsys  The Tester gets the TestFieldUINT8 Value hold by the DUT and stores it later  it sets a new 
different one For both Requests the Tester expects an answer which is checked against the 
SOMEIP Specifications 
 Once this Preparations are taken the Tester triggers the DUT to 
reset and after waitin g 3 Seconds for the Reset to complete it asks again for the 
TestFieldUINT8 Value expecting it to be at least different from the one he set before the 
Reset  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topol ogy 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER get the TestFieldUINT8 Value hold by the DUT and store  it 
2 DUT returns the value  
3 TESTER set a new different value  
4 DUT returns the value  
5 TESTER trigger  the DUT to reset  
6 TESTER ask  again for the TestFieldUINT8 Value  
7 DUT returns the value which shall be at least different from the one he set before 
the Reset  
Pass Criteria  DUT returns the value  
DUT returns the value  
DUT returns the value which shall b e at least different from the one he set before the Reset  
Reference  PRSSOMEIPSD00356PRSSOMEIP00170  
Notes  
 
5161123  SOMEIPETS147 SDSendtriggerEventUINT8Eventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  959 Test 
Procedure  8 TESTER send SubscribeEventgroup Message for  Eventgroup 0x02  
9 DUT sends SubscribeEventgroupAck  
10 TESTER trigger  the method triggerEventUINT8  
11 DUT sends the field TestEventUINT8 to the IP and port indicated in the Endpoint 
Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8 to the IP and port indicated in the Endpoint Option of 
the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00360  
PRSSOMEIPSD00361  
Notes  
 
 
5161124  SOMEIPETS148 SDSend triggerEventUINT8ArrayEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8Array  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced  Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method triggerEventUINT8Array  
4 DUT sends the field TestEventUINT8Array to the IP and port indicated in the 
Endpoint Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Array to the IP and port indicated in the  Endpoint 
Option of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310PRSSOMEIPSD00380  
Notes  
 

  
    
  960 5161125  SOMEIPETS149 SDSendtriggerEventUINT8E2EEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8E2E  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger Event UINT8E2E  
4 DUT sends the field TestEventUINT8E2E to the IP and port indicated in the Endpoint 
Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8E2E to the IP and port indicated in the Endpoint Option 
of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310PRSSOMEIPSD00380  
Notes  
 
5161126  SOMEIPETS150 SDSendtriggerEventUINT8MulticastEventgroup6  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send 
TestEvent UINT8Multicast  events afterwards The DUT shall acknowledge the subscription 
and send the field events to the IP address und port indicated by the Endpoint Option in the 
subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Servic e 
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x06  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger  trigger UINT8Multicast  
4 DUT sends the field TestEventUINT8Multicast to the IP and port indicated in the 
Endpoint Option of the request  

  
    
  961 Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Multicast to the IP and port indicated in the Endpoint 
Optio n of the request  
Reference  TBD 
Notes  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00323  
PRSSOMEIPSD00324PRSSOMEIPSD00325  
PRSSOMEIPSD00326PRSSOMEIPSD0039  
5161127  SOMEIPETS151 SDSendtriggerEventUINT8ReliableEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send 
TestEventUINT8Reliable  events afterwards The DUT shall acknowledge the subscription 
and send the field events to the IP address und port indicated by the Endpoint Option in the 
subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x0 2 
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger Event UINT8Reliable  
4 DUT sends the field Test Event UINT8Reliable  to the IP and port indicated in the 
Endpoint Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Reliable  to the IP and port indicated in the Endpoint 
Option of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00362  
Notes  
 
5161128  SOMEIPETS152 SDSessionIDisoneafterwrapping  
Synopsys  The Tester sends lots of FindService Messages  in order to observe the session id 
incrementation and wrap around of the OfferService responses After wrap around the 
session id has to start from 1  

  
    
  962 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send lots of FindService Messages  
2 DUT responses with OfferService messages and starts with session id 1 after 
wrap around  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT responses with OfferService messages and starts with session id 1 after wrap around  
Reference  PRSSOMEIPSD00159  
Notes  
 
5161129  SOMEIPETS153 SDSOMEIPLengthshorterasexpected  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
SOMEIP Length is less than the actual length  
The DUT shall reject the request with SubscribeEventgroupNAck  or may ignore the 
request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER  send SubscribeEventgroup Message with  
 SOMEIP Length is less than the actual length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request 
or ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIP00042PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 

  
    
  963 5161130  SOMEIPETS154 SDSpecifyanunexistingIPv4Address  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address in the EndpointOption   
The DUT shall reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address in the EndpointOption  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request   
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  
Notes  
 
5161131  SOMEIPETS155 SDSubscribeafterStopSubscribe  
Synopsys  The Tester subsc ribes to an Eventgroup unsubscribes und subscribes again  
The DUT shall confirm the first subscription accept the unsubscribe message and react 
correctly to the re subscription  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message  
2 DUT sends SubscribeEventgroupAck  
3 TESTER send Stop SubscribeEventgroup Message  
4 DUT sends SubscribeEventgroupAck and sends all releated initial fields  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends SubscribeEventgroupAck and sends all releated initial fields  
Reference  PRSSOMEIPSD00263PRSSOMEIPSD00386  

  
    
  964 Notes  
 
5161132  SOMEIPETS162 SDSubscribeEventgroupwithunallowedoptionip  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address  in the EndpointOption  IP address  IP address of the DUT  
The DUT shall  reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Tes tability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address  in the EndpointOption   
2 DUT sends SubscribeEventgroupNAck to reject the  subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PR SSOMEIPSD00393  
PRSSOMEIPSD00566  
Notes  
 
5161133  SOMEIPETS164 
SDSubscribeEventgroupwithunallowedoptionip2  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address  in the EndpointOption  IP address  111111111111  
The DUT shall  reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address  in the EndpointOption   
4 DUT sends SubscribeEventgroupNAck to reject the subscription request  

  
    
  965 Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
5161134  SOMEIPETS 163 SDSuspendInterface  
Synopsys  The Tester retrieves the TestFieldUINT8 Value the DUT has before the Suspension and sets a 
new one for both Requ ests it expects a valid Answer After that the SuspendInterface 
Request is sent to the DUT and two conditions are expected  
 
 First during the suspension time which must least as long as the suspendInterface 
Message stated in his Options the DUT should not send out any kind of Messa ge 
It should notify this by sending out a StopOfferService Message  
 
 Second after the Suspension finished the Getter is called again and the Value returned 
must not be the same as set by the Tester before the Suspension since after the suspension 
Time  the Interface is expected not to reset  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8  by using the method Getter  
2 DUT returns  the field TestFieldUINT8  
3 TESTER set a new value for the field TestFieldUINT8  by using the method Setter  
4 DUT returns  the field TestFieldUINT8  with the value set by the Tester in step 3  
5 TESTER send the SuspendInterface Request  
6 DUT should not send out any kind of Message  during the suspension time   
It should notify this by sending out a StopOfferService Message  
7 TESTER after the Suspension fi nished  call Getter again  
8 DUT returns the value Value returned must not be the same as set by the Tester 
before the Suspension  
Pass Criteria  DUT returns the field TestFieldUINT8  
DUT returns the field TestFieldUINT8 with the value set by the Tester in s tep 3  
DUT should not send out any kind of Message during the suspension time  
It should notify this by sending out a StopOfferService Message  
DUT returns the value Value returned must not be the same as set by the Tester before the 
Suspension  

  
    
  966 Reference  PRSSOMEIPSD00356PRSSOMEIPSD00364SIPSD811PRSSOMEIPSD00363  
Notes  
 
5161135  SOMEIPETS 166 SDTestFieldUINT8  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8  by using the methods Getter 
and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8  by using the method 
Getter  
2 DUT returns  the field TestFieldUINT8  
3 TESTER set a new value for the field TestFieldUINT8  by using the method Setter  
4 DUT returns  the field TestFieldUINT8  with the value set by the Tester in step 3  
Pass Criteria  DUT returns the field TestFieldUINT8  
DUT returns the field TestFieldUINT8 with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00357PRSSOMEIPSD00360  
PRSSOMEIPSD00361PRSSOMEIP00180  
Notes  
 
5161136  SOMEIPETS 167 SDTestFieldUINT8Array  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8Array  by using the methods 
Getter and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8Array  by using the 
method Getter  

  
    
  967 2 DUT returns  the field TestFieldUINT8Array  
3 TESTER set a new value for the field TestFieldUINT8Array  by using the method 
Setter  
4 DUT returns  the field TestFieldUINT8Array  with the value set by the Tester in 
step 3  
Pass Criteria  DUT returns the field TestField UINT8Array  
DUT returns the field TestFieldUINT8Array  with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00357  
Notes  
 
 
5161137  SOMEIPETS 168 SDTestFieldUINT8Reliable  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8Reliable  by using the 
methods Getter and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8Reliable  by using the 
method Getter  
2 DUT returns  the field TestFieldUINT8Reliable  
3 TESTER set a new value for the field TestFieldUINT8Reliable  by using the 
method Setter  
4 DUT returns  the field TestFieldUINT8Reliable  with the value set by the Tester in 
step 3  
Pass Criteria  DUT returns the field TestFieldUINT8Reliable  
DUT returns the field TestFieldUINT8Reliable  with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00362  
Notes  
 
5161138  SOMEIPETS171 SD UnicastFindService  
Synopsys  The Tester requests a service the DUT offers by sending several unicast FindService 
messages The DUT shall respond with at least one unicast OfferService message  

  
    
  968 Prerequisites  DUT ETS is running and offer ing the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send several unicast FindService messages to request a service the DUT 
offers  
2 DUT sends at least one unicast OfferService message  
Pass Criteria  DUT sends at least one unicast OfferService message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSOMEIPSD00306PRSSOMEIPSD00307  
Notes  
 
5161139  SOMEIPETS172 SOMEIPETS173 SDUnicastSubscribeEventgroup  
Synopsys  The Tester sends a unicast subscription request and expects the DUT to send a unicast 
subscription acknowledgement in response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send unicast subscribeEventgroup indicating the Option settings  
 index1stOptions  0  
 index2ndOptions  1  
 numOfOptions1  1  
 numOfOptions2   1 
2 DUT sends unicast subscribeEventgroupAck  
3 TESTER send subscribeEventgroup indicating a deviating Endpoint Option 
configuration  
 index1stOptions  0  
 index2ndOptions  0 
 numOfOptions1  2 
 numOfOptions2   0 
4 DUT sends unicast subscribeEventgroupAck  
Pass Criteria  DUT sends unicast subscribeEventgroupAck  

  
    
  969 DUT sends unicast subscribeEventgroupAck  
Reference  PRSSOMEIPSD00386 PRSSO MEIPSD00387PRSSOMEIPSD00391  
Notes  
 
5161140  SOMEIPETS174 SDUnknownOptiontype  
Synopsys  The Tester sends a SubscribeEventgroup Message referencing an unknown Option type this 
turns useless one of the two Endpoint Options needed by the DUT since the unknown one 
has to be ignored and so the Message must be answered with a SubscribeEventgroupNAck 
Message  
Prerequisites  DUT ETS is running  and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send subscribeEventgroup with an unknown Option type  
2 DUT sends subscribeEventgroupNAck  
Pass Criteria  DUT sends subscribeEventgroupNAck  
Reference  PRSSOMEIPSD00273PRSSOMEIPSD00393  
Notes  
 
5161141  SOMEIPETS 175 SD Unreferencedoption  
Synopsys  The Tester sends a SubscribeEventgroup Message containing all needed Endpoint Options 
including a not ne eded Configuration Endpoint Option  
 
This last Option is not referenced and so the Message must be answered by the DUT with 
an SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Check section general Input Parameters  

  
    
  970 Parameters  
Test Procedure  1 TESTER send subscribeEventgroup containing all needed Endpoint Options 
including a not needed Configuration Endpoint Option  
2 DUT sends subscribeEventgroupAck  
Pass Criteria  DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00337PRSSOMEIPSD00387PRSSOMEIPSD00393  
Notes  
 
 
5161142  SOMEIPETS176 SDUnuseddataafterOptionsArray  
Synopsys  The DUT receives a unicast SubscribeEventgroup Request with unused Payload Data right 
after the Options Array and which is included in the SOMEIP Length Field and is expected 
to answer with a SubscribeEventgroupAck Message  
 
The extra payload Data is 0x30303a3031  
 
After that a second SubscribeEventgroup is sent which also includes  the extra b ytes at the 
end but does not count them to the messagess total length  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test P rocedure  1 TESTER send subscribeEventgroup with unused Payload Data right after the 
Options Array and which is included in the SOMEIP Length Field  
2 DUT sends subscribeEventgroupAck  
3 TESTER send subscribeEventgroup with unused Payload Data right after the 
Options Array but not count ed to the messagess total length  
4 DUT sends subscribeEventgroupAck  
Pass Criteria  DUT sends subscribeEventgroupAck  
DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00153PRSSO MEIPSD00273  
Notes  
 
 

  
    
  971 5161143  SOMEIPETS177 SD UnuseddataafterOptionsArraywronglength  
Synopsys  The DUT receives a unicast SubscribeEventgroup Request with unused Payload Data whos 
Length is not included in the SOMEIP Length Field at the End and is expected to answer 
with an SubscribeEventgroupAck Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send subscribeEventgroup Request with unused Payload Data whos 
Length is not included in th e SOMEIP Length Field at the e nd 
2 DUT sends subscribeEventgroupAck   
Pass Criteria  DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00153PRSSOMEIPSD00273  
Notes  
 
 
5161144  SOMEIPETS178 SubscribeusingwrongSOMEIPMessageID  
Synopsys  The Tester sends a SubscribeEventgroup Message whose SOMEIP header uses a wrong 
Message ID for Service Discovery this should lead the DUT to reject the Message since it 
cannot be interpreted as a valid SOMEIP SD 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send subscribeEventgroup Message whose SOMEIP header uses a wrong 
Message ID for Service Discovery   
2 DUT sends subscribeEventgroupNAck   
Pass Criteria  DUT sends subscribeEventgroupNAck  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  

  
