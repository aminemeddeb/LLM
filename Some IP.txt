What is someIP, some IP, SOMEIP, SOME ip?  
SOME/IP is an automotive middleware solution that can be used for control messages. It was designed from beginning on to fit devices of different sizes and different operating systems perfectly. This includes small devices like cameras, AUTOSAR devices, and up to head units or telematics devices. It was also made sure that SOME/IP supports features of the Infotainment domain as well as that of other domains in the vehicle, allowing SOME/IP to be used for MOST replacement scenarios as well as more traditional CAN scenarios.
 

Scalable Service-Oriented Middleware over IP ( SOME/IP ) is a communication middleware in the automotive sector, which is used in AUTOSAR , among other things . SOME/IP is the only solution that has supported both AUTOSAR platforms since the beginning of the Adaptive Platform. This makes SOME/IP very widely used as middleware for Ethernet communication in vehicles.
Publications on SOME/IP have been published since 2011 as part of the BMBF-funded SEIS project.
The first AUTOSAR specifications from SOME/IP were published in 2013 as part of the Classic Platform (version 4.1).

Components of SOME/IP
SOME/IP itself comprises several core components:

SOME/IP – Serialization and message exchange.
SOME/IP-SD – Service Discovery (SD) and Publish/Subscribe.
SOME/IP-TP – Transport Protocol (TP) for segmenting large messages.
The SOME/IP serialization was highly optimized for resource requirements in order to manage with few memory and CPU resources. Therefore, a binary and non-descriptive form of serialization was used.
Later, an incompatible, proprietary extension to a TLV -like serialization was defined. This extension attempts to achieve more flexibility through a TLV-like serialization at the expense of the resource requirements of the serialization.

Basics
SOME/IP is based on service-oriented communication. Control units act as both clients and servers and can therefore offer so-called services themselves or request services from other control units. In contrast to signal-oriented data transmission, messages are only sent when required. The advantage here is the significantly reduced bus load. However, this type of transmission requires that a server knows about every client that has requested something.

A client can use a SOME/IP-SD message to subscribe to a service, i.e. to show a need for a service. The server can confirm this request either positively or negatively. If the confirmation is positive, the server saves the client's connection data and can inform the client if necessary. A client can find out which services are offered within its network in two ways. Using a SOME/IP-SD Find Service message, it can actively search the network for certain services. If a server offers this service, it can respond. In addition, a server can use SOME/IP-SD Offer Service messages to broadcast the services it offers to all clients. The participants (clients) thus passively receive the services offered in the network.
A client can also send requests to a server without a subscription. In contrast to subscribed content, where the client usually wants to receive an automatic response every time the data changes, the client here requires a direct one-time response. Requests that do not require a response are also possible. [2]
SOME/IP is the first protocol in the automotive sector that does not use the classic approach of signal-based communication such as CAN / LIN / FlexRay or MOST .

Service Discovery
The SOME/IP-SD (Service Discovery) protocol regulates the provision of services and the sending of events. It was designed to ensure efficient unicast communication using SOME/IP. This can minimize data traffic on the bus and reduce the overall load. To ensure these requirements, Service Discovery includes the following set of messages that can be sent: [3]

Find Service – finds a service instance.
Offer Service – publishes a service instance.
Stop Offer Service – stops the availability of a service instance.
Subscribe Eventgroup – subscribes to the events and fields of an event group.
Stop Subscribe Eventgroup – stops a Subscribe Eventgroup entry.
Subscribe Eventgroup Ack – confirms a Subscribe Eventgroup entry.
Subscribe Eventgroup Nack – rejects a Subscribe Eventgroup entry.

Embassies
SOME/IP
A SOME/IP message can be separated into a header and a payload. Within the payload, data can be in Type-Length-Value format or Length-Value format.

Headers
The header contains the following information:

32-bit message ID that assigns the message to a specific service and method.
32-bit length field containing the length in bytes of the following information.
32-bit request ID, which assigns the message to a client and a session ID.
8-bit protocol version
8-bit interface version
8-bit message type, which includes a distinction between the different message types
8-bit return code, which indicates whether a request was processed correctly

Payload
A SOME/IP payload consists of data in TLV format. Both complex data types and simple data types can be used.

The following simple data types can be used  :
boolean: 8 bit field which can only take values ​​of 0 (False) or 1 (True).
uint8: unsigned integer with 8 bit size.
uint16: unsigned integer with 16 bit size.
uint32: unsigned integer with 32 bit size.
uint64: unsigned integer with 64 bit size.
sint8: signed integer with 8 bit size.
sint16: signed integer with 16 bit size.
sint32: signed integer with 32 bit size.
sint64: signed integer with 64 bit size.
float32: floating point numbers with 32 bit size.
float64: floating point numbers with 64 bit size.

The following complex data types can be used :
struct: A data structure that contains a predefined number of additional complex and/or simple data types.
string: Character string, typically containing data in ASCII, UTF-8, or UTF-16 format. Dynamic length strings include a length field at the beginning
array: A data structure that only contains elements of the same type. It can be a static array with a fixed length or a dynamic array with a variable length. A length field is used for dynamic arrays.
enumeration: an uint with the option of naming different values.
bitfield: 8, 16, or 32bit parameter where each bit value represents a Boolean value.
union: A parameter that can be interpreted as different data types at the same time.
The tag in TLV format in AUTOSAR consists of a wire type, the data ID and a potential length field. If it is a simple data type (wire type 0-3), the length field can be omitted, since the length of the data type is already defined by the wire type itself. The following wire types are defined  :
Wire Type	Following Data
0	8 Bit Data Base Datatype
1	16 Bit Data Base Datatype
2	32 Bit Data Base Datatype
3	64 Bit Data Base Datatype
4	Complex Data Type: Array, Struct, String, Union with length field of static size (configured in data definition)
5	Complex Data Type: Array, Struct, String, Union with length field size 1 byte (ignore static definition)
6	Complex Data Type: Array, Struct, String, Union with length field size 2 byte (ignore static definition)
7	Complex Data Type: Array, Struct, String, Union with length field size 4 byte (ignore static definition)

SOME/IP-SD
Service Discovery is based on the SOME/IP protocol and uses the header elements of the SOME/IP header already mentioned (with the exception of the message ID and the length field). This is followed by a 1-byte field with various flags. The following 3 bytes are reserved and not used. Entry arrays are present in the payload. The number of these is defined by a preceding length field. This is followed by an options array, also with a preceding length field.
Two types can occur in entry arrays, one for services and one for event groups.

An entry array element for services contains the following fields:
8-bit type, which can accept either Find (0x00) or Offer (0x01)
8-bit index containing the first index in the options entry for the first pass
8-bit index containing the first index in the options entry for the second pass
4-bits number of options 1st pass
4-bit number of options 2nd pass
16-bit service ID
16-bit instance ID
16-bit major version
24-Bit Time To Live
32-bit minor version

An entry array element for event groups contains the following fields: 
8-bit type, which can accept either SubscribeEventgroup/StopSubscribeEventgroup (0x06) or SubscribeEventgroupNack/SubscribeEventgroupAck (0x07)
8-bit index containing the first index in the options entry for the first pass
8-bit index containing the first index in the options entry for the second pass
4-bits number of options 1st pass
4-bit number of options 2nd pass
16-bit service ID
16-bit instance ID
16-bit major version
24-Bit Time To Live
16-bits Reserved
16-bit event group ID

An option array can contain additional information for the individual entries. It contains the following elements: 
8-bit length field containing the length in bytes of the configuration string.
4-bit type, with static value 0x01
4 bits reserved, with static value 0x00
Null terminated configuration string

A configuration string contains elements that correspond to the format [Length][Key][=][Value]. The string is terminated with a length field of the value 0, which specifies no subsequent elements.

Scalable service-Oriented MiddlewarE over IP (SOME/IP)
Overview
SOME/IP is an automotive middleware solution that can be used for control messages. It was designed from beginning on to fit devices of different sizes and different operating systems perfectly. This includes small devices like cameras, AUTOSAR devices, and up to head units or telematics devices. It was also made sure that SOME/IP supports features of the Infotainment domain as well as that of other domains in the vehicle, allowing SOME/IP to be used for MOST replacement scenarios as well as more traditional CAN scenarios.

SOME/IP supports a wide range of middleware features:

Serialization – transforming into and from on-wire representation.
Remote Procedure Call (RPC) and Messaging – implementing remote invocation of functions as well as other messages.
Service Discovery (SD) – dynamically finding and functionality and configuring its access.
Publish/Subscribe (Pub/Sub) – dynamically configuring which data is needed and shall be sent to the client.
Segmentation of UDP messages – allowing the transport of large SOME/IP messages over UDP without the need of fragmentation.
Serialization
The SOME/IP serialization was designed to be highly efficient; i.e. it uses the minimal RAM and CPU resources. This is achieved by using a binary and non-descriptive format. Basically all parameters are written behind each other. The format of a message is very similar or many cases exactly the same as the in-memory representation of the message (packed struct).

SOME/IP can serialize the following basic datatypes (datatypes are encoded per default in network byte order/big endian but can also encoded in little endian):

boolean: an 8bit field encoding False (0) or True (1). All other values are not allowed to be used.
uint8: unsigned integer with 8 bit size.
uint16: unsigned integer with 16 bit size.
uint32: unsigned integer with 32 bit size.
uint64: unsigned integer with 64 bit size.
sint8: signed integer with 8 bit size.
sint16: signed integer with 16 bit size.
sint32: signed integer with 32 bit size.
sint64: signed integer with 64 bit size.
float32: floating point numbers with 32 bit size.
float64: floating point numbers with 64 bit size.
SOME/IP can serialize the following complex datatypes:

struct: a parameter that combines a predefined list of parameters. A struct can start with an optional length field counting all bytes of the struct following the length field.
string: fixed length or dynamic length character strings transporting ascii, UTF-8, or UTF-16 characters. For dynamic length strings, the string starts with a big-endian encoded length field counting the bytes the string characters use.
array: a parameter that contains a repetition of the same parameter type. This can be predefined number or dynamic number of parameters. For arrays with dynamic length a length field is used.
enumeration: an uint with the option of naming different values.
bitfield: 8, 16, or 32bit parameter, with each bit representing a boolean. Each boolean can have a name as well as a name for the True and False value each.
union: a parameter that can carry a parameter of a predefined parameter type, which is determined at the runtime. The serialization uses a length field, type field, and the data of the parameter.
The size of length and type fields is 32 bit (default) and be be configured to be 0, 8, 16, or 32 bit. All length and type fields are encoded in network byte order/big-endian.

Remote Procedure Call (RPC) and Messaging
SOME/IP services support the following messages:

Request/Response Methods: A request sent from a client to the server and a response sent back from server to client. Additionally, SOME/IP allows error responses to be sent back from server to client instead of the regular response. This feature might be used to implement a different payload format in error cases.
Fire and Forget Methods: A request is sent from a client to the server.
Event: An event is sent from the server to a relevant clients. Which client needs this event will be determined via SOME/IP-SD.
Field: A field can have an option notifier (event to be sent cyclically or on-change), an optional setter (a request/response method to update the field), and an optional getter (a request/response method to read out the current value of the field.)
Proprietary extension to the SOME/IP serialization
SOME/IP already supports a lot of flexibility in the serilization of messages, like adding parameters to messages or inside structs later.

A proprietary extension (wrongly called a TLV extension at first) was added to SOME/IP in later AUTOSAR releases to support even more flexibility. Basically parameters and/or struct members can be prefixed with an Data ID and Length Indication. While this makes the serialization much less efficient, it adds flexibility, like removing parameters from messages or reordering parameters later. To use this feature, APIs and applications need to support this too.

Due to the limited flexiblity and the high overhead, this extension is currently NOT widely used.

Keep in mind that not all SOME/IP implementation support this extension since its not part of the original SOME/IP.

AUTOSAR support
SOME/IP is the only known middleware that was designed to be integrated into AUTOSAR 4.x releases:

AUTOSAR 4.0 – basic support for SOME/IP messages already existing.
AUTOSAR 4.1 – support for SOME/IP-SD and Publish/Subscribe was added.
AUTOSAR 4.2 – the transformer was added for serialization as well as other optimizations.
AUTOSAR 4.3 – fixing some transformer bugs, adding support for large UDP messages with SOME/IP-TP as well as SOME/IP-SD optimizations.

Publications
Articles & Papers
SOME/IP – Die Middleware für Ethernet-basierte Kommunikation
Dr. Lars Völker
Nov. 2013 / Article in Hanser automotive networks / German / cached content.
Presentations
The Road to SDV: how architectures lead the way
Dr. Lars Völker
May 2024 / Vehicle Electronics & Connected Services (VECS), Gothenburg, Sweden / English / slides (cached).

Is SOME/IP the right solution for the next 10 years of vehicles?
Dr. Lars Völker, Josetxo Villanueva, Jan Schäferling
Mar. 2024 / Automotive Ethernet Congress, Munich / English / slides (cached).

TCP and Automotive Ethernet – How to Resolve the Everlasting Struggle
Iago Alvarez, Karl Budweiser, Stefan Lachner, Dr. Lars Völker
Nov. 2022 / Ethernet & IP @ Automotive Technology Day, Yokohama / English / slides (cached) / external video.

Your Automotive Protocol Stack – A journey from specification to SOP
Dr. Lars Völker
Dec. 2020 / Nikkei BP, virtual / English / Slides.

Lessons learned of 10+ years Ethernet Development – Ways on keeping the complexity under control
Thomas Königseder and Dr. Lars Völker
Sep. 2020 / Ethernet & IP @ Automotive Technology Week, virtual / English / external slides.

SOME/IP Service Discovery – The need for Service Discovery in the Vehicle
Dr. Lars Völker
May 2014 / Vector Ethernet Symposium, Stuttgart / German + English / pdf (cached).

Communication protocols for Ethernet in the vehicle
Dr. Lars Völker
Dec. 2013 / Automotive BUS Systems + Ethernet, Sindelfingen / English / external slides.

SOME/IP Tutorial
Dr. Lars Völker
Oct. 2013 / OPEN Alliance Meeting before the 3rd Ethernet & IP @ Automotive Techday, Leinfelden-Echterdingen / English.

One for All, Interoperability from AUTOSAR to GENIVI
Lars Völker
Nov. 2011 / 1st Ethernet & IP @ Automotive Techday, Munich / English / pdf (cached).

Überblicksvortrag SEIS Teilprojekt 3
Lars Völker
Sep. 2011 / SEIS Statusseminar / German / pdf (cached).

Specification Drafts / Releases
SOME/IP – Scalable service-Oriented MiddlewarE over IP
Benjamin Krebs, Dr. Lars Völker
Jul. 2012 / pdf
First release with SOME/IP-SD and Magic Cookie Messages

SOME/IP – Scalable service-Oriented MiddlewarE over IP
Benjamin Krebs, Dr. Lars Völker
Nov. 2011
First public release.

Automotive Network Security
Overview
Automotive Network Security uses mostly known standards to protect communication inside the vehicle. Protocols like SSL/TLS, IPsec, and MACsec are also used in other industries and some additional automotive-specific solutions like SecOC exist.

The main difference between Network Security in vehicles and most other areas are in special aspects, like the startup time of the solutions. While in most industries the startup of a security solution may take seconds without problems, in the automotive use cases a startup in a few milliseconds is required.

This ECU and Network Test Specification  is designed to determine if a product conforms to specifications 
defined in OPEN Specification s or related requirements  This specification is a collection of all test cases 
which are recommend to be considered for automotive use and should be referred by car 
manufacturers within their quality control processes  
Sucessful execution and passing all relevant tests gives a De vice Under Test DUT a mimimum approval 
that the devices basic implementiations are done correctly  
 
This Test specification document is grouped in several chapters oriented on the scopes Automotive 
Ethernet  TCPIP Protocol Family  and  Automotive P rotocols  which are described in chapter 13 Tests are organized and identified with distinct IDs that relate to their scopes and a unique enumeration 
For every scope introduction chapters explain common requirements on the Device under Test the Test 
Setup and parameters used by the following tests  
Definition of Test Scopes  
Test Scope Automotive Ethernet  
Scope Automotive Ethernet includes the following ISOOSI layers  
 Layer 1 Physical Layer  BroadR Reach OABR  
 Layer 2 Data Link Layer eg IEEE Ethernet MAC  VLAN 8021Q  ARP  
Test Scope TCPIP Protocol Family  
Scope TCPIP Protocol Family includes the following ISOOSI layers  
 Layer 3 Network Layer eg IP  ICMP  
 Layer 4 Transport Layer eg UDP TCP DHCP  
Test Scope Automotive Protocols  
Scope Automotive Protocols includes the following ISOOSI layer  
 Layers 5 6 7 Application oriented layers eg UDP NM SOMEIP SD  

  
    
Version Control of Document  
Version  Author  Description  Date  
1.0 TC8 members  First release  15012016  
1.1 TKirchmeier 
BMW  Improvments regarding IPv4 test cases see change history  31052016  
1.2 TKirchmeier 
BMW  Improvments regarding UDP test cases see change history  29062016  
1.3 TKirchmeier 
BMW  Improvments regarding ICMPv4 test cases see change history  07092016  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Chapter 56 DHCPv4 Server deleted  19052017  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Improvements regarding TCP test cases see change history  23052017  
1.4 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Added chapters  
614 Specification of the SOMEIP TestStub Enhanced 
Testability Service ETS  
616 Test Cases ETS  
 
Improvements regarding ARP test cases see change history  24.05.2017  
1.4 Georg Janker  Update of Layer 1 and Layer2 Chapters  24.05.2017  
1.5 Georg Janker  Update of AUTOSAR References for SOMEIP to 110  30.05.2017  
1.5 Georg Janker  Inserted Chapter 36 Referenced TC 11 Tests  30.05.2017  
1.6 Martin 
Heinzinger 
Ruetz System 
Solutions 
GmbH  Removed Port Disabling test and referenced to the 
corresponding TC11 Test  07062017  

  
1.7 Mathias 
Kleinwch ter 
Ruetz System 
Solutions 
GmbH  Deleted invalid or duplicate Test Cases See change history  20062017  
1.8 Frederic 
Garraud  Update 13 References  22062017  
1.9 Martin 
Heinzinger 
Ruetz System 
Solutions 
GmbH  Updated change history for L2 Switching  23062017  
 
 

  
Change history between version 1 and 2  
 
Test case ID  Change 
reason  Version 1  Version 2  
IPv4TTL05  Renamed  ICMPv4 Echo Reply TTL 
value  check  Packets with 0 or 1 TTL are 
not discarded by hosts  
IPv4TTL01  Renamed  Ensure that the DUT 
generates an IPv4 Packet 
with TTL value greater than 
0 A host MUST NOT send a 
datagram with a T imeto
Live TTL value of zero  
IPv4TTL01  Changed 
synopsis  Ensure that  
  when the DUT generates 
an IPv4 packet  
  then the DUT sends an 
IPv4 packet  
    containing an IPv4 
Header  
      containing a TTL  
        indicating a value 
greater than 0  A host MUST NOT send a 
datagram with a Time to
Live TTL value of ze ro 
IPv4TTL03  Deprecated   Test case only applicable for 
router  
IPv4TTL04  Deprecated   Test case only applicable for 
router  
IPv4CHECKSUM01  Deprecated    test case is d uplicate d to 
IPv4CHECKSUM05  
IPv4CHECKSUM02  Renamed  Ensure that the DUT 
discards  an IPv4 Packet with 
an invalid Header Checksum  IP Checksum method 
validation on receiving  
IPv4CHECKSUM02  Changed 
synopsis  Ensure that when the DUT 
receives an IPv4 packet 
containing an IPv4 Header 
containing a Header 
Checksum indicating an 
invalid inv alidChecksum 
then the DUT discards the 
IPv4 Packet silently  If the header checksum 
fails the internet datagram 
is discarded at once by the 
entity which detects the 
error  
IPv4CHECKSUM04  Changed test 
case 
description  1 TESTER Cause DUT to 
send an ICMP Echo Request 
through DIface 0 
containing  IP Destination 
Address set to address of 
host 1 
 
3 DUT Send ICMP Echo 
Request  
4 TESTER Verify that the 1 TESTER Cause DUT to 
send a IP packet  through 
DIface 0 containing  IP 
Destination Address set to 
address of host 1 
 
3 DUT Send  a IP packet  
4 TESTER Verify that the 
received IP packet contains  

  
10 received ICMP Echo 
RequestIP contains   
IPv4CHECKSUM04  Additional 
note   Request  Reply Mech nism 
has to be supported by DUT 
and a packet ma y be an 
ICMP Request or UDP 
datagram on a port DUT is 
listening  
IPv4CHECKSUM04  Renamed  ICMPv4 Echo Request IP 
Checksum method 
validation on sending  IP Checks um method 
validation on sending  
IPv4CHECKSUM05  Renamed  ICMPv4 Echo Reply IP 
Checksum method 
validation on receiving  IP Checksum method 
validation  
IPv4FRAGMENTS01  Renamed  ICMPv4 Echo Reply IP 
Reconstruct fragments  IP Reconstruct fragments 
validation  
IPv4FRAGMENTS05  Changed test 
case 
description  Test step 1 TESTER Cause 
DUT to sen d an ICMP Echo 
Request through DIface 
0 containing  IP 
Destination Address set to 
address of host 1 Test step 1 TESTER Cause 
DUT to send a Message  
with UDPDefaultData 
from DIface 0 with  
Source IP Address set to 
DIface 0IP  Destination 
IP Address set to HOST 1
IP  Source UDP Port field 
set to 
unusedUDPDstPort1 
20001  Destination UDP 
Port field set to 
unusedUDPSrcPort 
20000  
Additional note  
The message can be an 
ICMP Echo Request or a 
simple UDP message  
IPv4FRAGMENTS05  Renam ed ICMPv4 Echo Request IP 
Fragmentation check  IP send unfragmented data 
validation  
IPv4REASSEMBLY01  Deprecated  
  Test case is d uplicate d to 
IPv4FRAGMENTS01  
IPv4REASSEMBLY02  Deprecated  
  Test case is d uplicate d to 
IPv4FRAGMENTS02  
IPv4REASSEMBLY03  Deprecated  
  Test case is d uplicate d to 
IPv4FRAGMENTS04  
IPv4REASSEMBLY05  Deprecated  
  Test case is d uplicate d to 
IPv4REASSEMBLY13  
IPv4REASSEMBLY08  Deprecated  
  Test case is d uplicate d to 
IPv4REASSEMBLY10  
IPv4HEADER05  Renamed  ICMPv4 Echo Reply  IP Maximum datagram 
length check  

IPv4HEADER08  Renamed  ICMPv4 Echo Request IP 
Header length validation  IP Header length validation  
IPv4HEADER09  
 Renamed  ICMPv4 Echo Request IP 
Total Length validation  IP Total Length validation  
IPv4VERSION04  Renamed  ICMPv4 Echo Reply IP 
Version validation  IP Version validation  
IPv4FRAGMENTS02  Remamed  ICMPv4 Echo Reply IP 
Reconstruct fragments 
negative id  IP Reconstruct fragments 
negative test on id  
IPv4FRAGMENTS03  Renamed  ICMPv4 Echo Reply IP 
Reconstruct fragments 
negative source  IP Reconstruct fragments 
negative test on source  
IPv4FRAGMENTS04  Renamed  ICMPv4 Echo Reply IP 
Reconstruct fragments 
negative protocol  IP Reconstruct fragments 
negative  test on  protocol  
IPv4REASSEMBLY10  Renamed  ICMPv4 Echo Reply IP 
Reassembly default time 
check  IP Reassembly default time 
check  
IPv4REASSEMBLY11  Renamed  ICMPv4 Echo Reply check 
fragment with Large TTL 
value  Check fragment with Large 
TTL value  
IPv4REASSEMBLY12  Renamed  ICMPv4 Echo Reply check 
fragment with Low TTL 
value  Check fragment with Low 
TTL value  
IPv4REASSEMBLY1 3 Renamed  ICMPv4 Echo Reply IP 
Fragments overlap check  IP Fragments overlap check  
IPv4OPTIONS01  Renamed  ICMPv4 Echo Reply 
Multiple End of Options 
check  Multiple End of Options 
check  
IPv4OPTIONS02  Renamed  ICMPv4 Echo Reply 
Multiple No Operation 
option check  Multiple No Operation 
option check  
IPv4OPTIONS03  Renamed  ICMPv4 Echo Reply 
Multiple No Operation and 
End of Option check  Multiple No Operation and 
End of Option check  
IPv4OPTIONS04  Renamed  ICMPv4 Echo Reply 
Security Option check  Security Option check  
IPv4OPTIONS05  Renamed  ICMPv4 Echo Reply 
Overflow Bit in timestamp 
option check  Overflo w Bit in timestamp 
option check  
IPv4OPTIONS06  Renamed  ICMPv4 Echo Reply 
timestamp value check  Timestamp value check  
IPv4OPTIONS07  Renamed  ICMPv4 Echo Reply 
timestamp value internet 
address and sequence 
check  Timestamp value internet 
address and sequence  
check  
IPv4OPTIONS08  Renamed  ICMPv4 Echo Reply r elation 
between timestamp  its Relation between 
timestamp  its own 

own address  address  
IPv4OPTIONS09  Renamed  ICMPv4 Echo Reply relation 
between timestamp  its 
own address negative  Relation between 
timest amp  its own 
address negative  
IPv4OPTIONS10  Renamed  ICMPv4 Echo Reply r oom 
for timestamp check  Room for timestamp check  
IPv4OPTIONS11  Renamed  ICMPv4 Echo Reply 
overflow bits validation  Overflow bits validation  
IPv4OPTIONS12  Renamed  ICMPv4 Echo Reply check 
room for timestamp  Check room for timestamp  
IPv4OPTIONS13  Renamed  ICMPv4 Echo Reply 
validate overflow bits  Validate overflow bits  
IPv4OPTIONS14  Renamed  ICMPv4 Echo Reply 
timestamp option 
occurrence check  Timestamp option 
occurrence check  
UDPFIELDS02  Additional 
note  Note In this test we verify 
that DUT will respond 
backif required to source 
port of received message  Note In this test we verify 
that DUT can respond 
respond back if required 
to source port of received 
message This has two 
parts being able to read 
the source port of a 
received message and 
being able to set the 
destination port of a sent 
message  these operations 
are available on the 
AUTOSAR testability 
protocol In this case the 
tester is basically 
implementing the 
application logic of issuing 
the reply by properly 
reading the source port and 
replying to that port  
UDPFIELDS03  Renamed  Field s  Source Port 
received and sent to zero  Fields  Accept Source Port 
set to zero  
UDPFIELDS11  Deprecated  
  Remove as it conflicts with 
UDPDatagramLength01  
UDPFIELDS12  Additional 
note  Note Check that the DUT 
accepts the received 
datagram in case  the length 
value in the header is set to 
the maximum value  Note Check that the DUT 
accepts the received 
datagram in case the length 
value in the header is set to 
the maximum allowed 
value  
 IPv4 65507 bytes  65535 
 8 byte UDP header  20 
byte IP he ader  

IPv6 65535 bytes  
UDPFIELDS17  Deprecated   There is no use case for this  
test case  in Automotive  
UDPFIELDS18  Deprecated   There is no use case for this  
test case  in Automotive  
UDPMessageFormat01  Deprecated   Test case is d uplicate d to 
UDPFIELDS1 
UDPFIELDS2  
UDPFIELDS06 
UDPFIELDS13 
UDPFIELDS14  
UDPPortHandling01  Deprecated   Test case is d uplicate d to 
UDPMessageFormat02  
UDPPortHandling02  Deprecated   Test case is d uplicate d to 
UDPFIELDS03  
UDPPortHandling03  Deprecated   Test case is d uplicate d to 
UDPMessageFormat02  
UDPPortHandling04  Deprecated   There is no use case for this  
test case  in Automotive  
UDPDatagramLength01  Changed 
synopsis  
 
and 
additional 
note  Ensure that  
  when the DUT receives a 
truncated UDP packet  
  then the DUT discards the 
UDP packet  
 
Derived from RFC768 
section Format  Ensure that  
  when the DUT receives a 
truncated UDP packet a 
packet with the length field 
smaller than the actual size 
of the dat a coming from the 
Ethernet frame  
  then the DUT discards the 
UDP packet  
 
Derived from RFC768 
section Format and 
automotive specific 
requirements on frame 
integrity  
UDPDatagramLength02  Deprecated   Test case is d uplicate d to 
UDPFIELDS08  
UDPDatagramLength03  Deprecated   Test case is d uplicate d to 
UDPMessageFormat02  
UDPDatagramLength04  Deprecated   Test case is d uplicate d to 
UDPFIELDS09  
UDPDatagramLength05  Deprecated   Test case is d uplicate d to 
UDPFIELDS10  
UDPDatagramLength06  Deprecated   Test case is d uplicate d to  
UDPDatagramLength01  
UDPDatagramLength07  Deprecated   Test case is invalid  
UDPPadding01  Deprecated   Test case is invalid  
UDPPadding02  Changed test 
case 2 DUT Generates a UDP 
packet with padding  2 DUT Generates a UDP 
packet without padding  
description  
ICMPv4ERROR01  Renamed  ICMPv4 Parameter Problem 
Message avoid the infinite 
regress  Avoid the infinite loop for 
ICMP message error  
ICMPv4ERROR02  Renamed  ICMPv4 Parameter Problem 
Message errorn ous 
fragmentation  ICMP messages are only 
sent for fragment 0  
ICMPv4ERROR03  Renamed  ICMPv4 Parameter Problem 
Message non zero 
fragment  ICMP messages are not sent 
when fragment not 0  
ICMPv4ERROR04  Renamed  ICMPv4 Parameter Problem 
Message broadcasting 
mechanism  ICMP messages are not sent 
for broadcast address  
ICMPv4ERROR05  Renamed  ICMPv4 Messages unkown 
message type  Uknown ICMP message 
types are ignored  
ICMPv4TYPE16  Renamed 
changed 
synopsis and 
changed test 
case 
description  Titel  Ensure that the DUT 
does not accept an ICMPv4 
Information Request and 
does not generate a ICMPv4 
Information Reply  
Synopsis  Ensure that  
  when a DUT receives an 
ICMPv4 Packet  
    containing a Type  
      indicating a value of 15 
Information Request  
    and containing a Code  
      indicating a value of 0  
    and containing a valid 
Checksum  
    and containing an 
Identifier  
      indicating a value of ID1  
    and containing a 
Sequence Number  
      indicating a value of 
SEQ1  
  then the DUT discards the  
message and does not send 
an ICMPv4 Packet  
    containing a Type  
      indicating a value of 16 
Information Reply  
Description  1 TESTER 
Send an ICMPv4 
Information Request 
message  
2 DUT Does not send an Title  Do not implement 
ICMP Information messages  
Synopsis  A host SHOULD 
NOT implement these 
messages Note referring 
to Information Request or 
Information Reply Message  
Description  1 TESTER 
Send an ICMP Information 
Request to DIface 0 
        containing  
         IP Source Address 
field set to network portion 
of IP  
          address of host 1 
         IP Destination Address 
field set to zero  
         Identifier field set to 
idfr  
         Sequence Number 
field set to seqno  
2 TESTER Listen for upt o 
ListenTime seconds on 
DIface 0 
3 DUT Do not send ICMP 
Information Reply  
Pass criteria  
3 DUT Do not send ICMP 
Information Reply  
15 ICMPv4 Information Reply 
message  
ICMPv4TYPE17  Deprecated   Test case is d uplicate d to 
ICMPv4TYPE11 
ICMPv4TYPE12  and 
ICMPv4TYPE17  
ICMPv4TYPE18  Renamed  Ensure that the DUT 
generates an ICMPv4 
Destination Unreachable 
message with Code 
Protocol Unreachable  Send ICMP Destination 
Unreachable for unknown 
protocol  
ICMPv4TYPE21  Deprecated   Test case is d uplicate d to 
ICMPv4TYPE04  
ICMPv4TYPE01  Renamed  ICMPv4 Destination 
Unreachable Message 
unknown Destination port  Send ICMP Destination 
Unreachable for unknown 
port  
ICMPv4TYPE02  Renamed  ICMPv4 Echo Reply missing 
fragments  Discard packet with missing 
fragments  
ICMPv4TYPE03  Renamed  ICMPv4 Time Exceeded 
message fragment 
reassembly time expire  Send ICMP Time Exceeded 
message on fragmentation 
error  
ICMPv4TYPE04  Renamed  ICMPv4 Time Exceeded 
message with out fragment 
zero  Do no send ICMP Time 
Exceeded message if 
missing fragment 0  
ICMPv4TYPE05  Renamed  Datagram receive Discard 
those with header 
parameter problems  Discard messages with 
header parameter problem  
ICMPv4TYPE06  Renamed  ICMP send Parameter 
Problem Message  Sending of ICMP Prameter 
Problem message  
ICMPv4 TYPE07  Renamed  ICMP send Parameter 
Problem Message contents  ICMP Parameter Problem 
Message contents  
ICMPv4TYPE08  Renamed  ICMPv4 Echo Reply 
message data field  ICMP Echo Reply message 
data field  
ICMPv4TYPE09  Renamed  ICMPv4 Echo Reply 
message id and sequence  ICMP Echo Reply message 
id and sequence field  
ICMPv4TYPE10  Renamed  ICMPv4 Echo Reply 
message incorrect ICMP 
checksum  ICMP checksum is checked  
ICMPv4TYPE11  Renamed  ICMPv4 Timestamp Reply 
message additional 
timestamp  ICMP Timestamp Reply 
message content  
ICMPv4TYPE12  Renamed  ICMPv4 Timestamp Reply 
message id and sequence  ICMP Timestamp Reply 
message id and sequence 
field  
ICMPv4TYPE22  Renamed  ICMPv4 Echo Reply  Send ICMP Echo Reply on 
receiving ICMP Echo 
Request  
TCPBASICS03  Changed 2 TESTER Send a FIN  2 TESTER Send a FIN ACK  
Test 
Procedure  
TCPBASICS14  Changed 
Pass Criteria  3 DUT Send ACK DUT 
moves to TIME WAIT state  
4 DUT Send ACK  4 DUT Send ACK  
TCPBASICS17  Changed 
Test 
Procedure  6 TESTER Verify that the 
DUT moves on to 
ESTABLISHED state  6 DUT Send ACK  
7 TESTER Verify that the 
DUT moves on to 
ESTABLISHED state  
TCPUNACCEPTABLE14  Changed 
Test 
Procedure 
and Pass 
Criteria   6TESTER  Verify that the 
DUT stays in CLOSE WAIT 
state  
TCPCALLOPEN02  Changed 
Pass Criteria  2 DUT Issue a passive open 
call 
3 TESTER Verify that the 
DUT refuses to create new 
connection  
indicating error 
connection illegal for this 
process  
to the application  3 TESTER Verify that the 
DUT refuses to create new 
connec tion 
indicating error 
connection illegal for this 
process  
to the application  
TCPCALLOPEN03  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN04  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN05  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN06  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN07  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN08  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to th e application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN09  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN10  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLOPEN11  Changed 
Pass Criteria  3 DUT Issues an OPEN call  
4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  4 TESTER Verify that the 
DUT returns error 
connection already  
exists  to the application  
TCPCALLSEND01  Changed 
Pass Criteria  2 DUT Issue a SEND call  
3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  
TCPCALLSEND02  Changed 
Pass Criteria  3 DUT Issue a SEND call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLSEND03  Changed 
Pass Criteria  3 DUT Issue a SEND call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the applic ation  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLSEND04  Changed 
Pass Criteria  3 DUT Issues a SEND call  
4 TESTER Verify that the 
DUT returns error foreign 
socket  
unspecified  to the 
application  4 TESTER Verify that the 
DUT returns error foreign 
socket  
unspecified  to the 
application  
TCPCALLSEND05  Changed 
Pass Criteria  3 DUT Issue a SEND call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TE STER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLSEND06  Changed 
Pass Criteria  3 DUT Issue a SEND call  
4 TESTER Verify that the 4 TESTER Verify that the 
DUT returns error 
DUT returns error 
connection closing  to 
the application  connection closing  to 
the application  
TCPCALLSEND09  Changed 
Pass Criteria  3 DUT Issue a SEND call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLRECEIVE01  Changed 
Pass Criteria  3 DUT Issues a RECEIVE 
call 
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLRECEIVE02  Changed 
Pass Criteria  2 DUT Issues a RECEIVE 
call 
3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  
TCPCALLRECEIVE03  Changed 
Pass Criteria  3 DUT Queue the request  
5 DUT Send ACK  
7 TESTER Verify that the 
DUT returns the data in 
response to the  
queued RECEIVE call  5 DUT  Send ACK  
7 TESTER Verify that the 
DUT returns the data in 
response to the  
queued RECEIVE call  
TCPCALLRECEIVE04  Changed 
Pass Criteria  4 DUT Issues a RECEIVE 
call 
5 TESTER Verify that the 
DUT returns the 
reassembled data to the  
receiving application  5 TESTER Verify that the 
DUT returns the 
reassembled data to the  
receiving application  
TCPCALLRECEIVE05  Changed 
Pass Criteria  4 DUT Issues a RECEIVE 
call 
5 TESTER Verify that the 
DUT returns the data to the 
receiving  
application  5 TE STER Verify that the 
DUT returns the data to the 
receiving  
application  
TCPCALLRECEIVE06  Changed 
Pass Criteria  3 DUT Issues a RECEIVE 
call 
4 TESTER Verify that the 
DUT responds error 
connection closing  
to the receiving application  4 TESTER Verify that the 
DUT responds error 
connection closing  
to the receiving application  
TCPCALLRECEIVE07  Changed 
Pass Criteria  3 DUT Issues a RECEIVE 
call 
4 TESTER Verify that the 
DUT returns error 4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
connection closing  to 
the application  
TCPCALLRECEIVE08  Changed 
Pass Criteria  3 DUT Issues a RECEIVE 
call 
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER  Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLCLOSE01  Changed 
Pass Criteria  2 DUT Issues a CLOSE call  
3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  3 TESTER Verify that the 
DUT returns error 
connection does not  
exist  to the application  
TCPCALLCLOSE02  Changed 
Pass Criteria  3 DUT Issues a CLOSE call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Veri fy that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLCLOSE03  Changed 
Pass Criteria  3 DUT Issues a CLOSE call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the  
DUT returns error 
connection closing  to 
the application  
TCPCALLCLOSE04  Changed 
Pass Criteria  3 DUT Issues a CLOSE call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLCLOSE05  Changed 
Pass Criteria  3 DUT Issues a CLOSE call  
4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  4 TESTER Verify that the 
DUT returns error 
connection closing  to 
the application  
TCPCALLABORT01  Changed 
Pass Criteria  2 DUT Issues an ABORT 
call 
3 TESTER Verify that DUT 
MUST return error 
connection does not  
exist  to the application  3 TESTER Verify that DUT 
MUST return erro r 
connection does not  
exist  to the application  
TCPCALLABORT02  Changed 
Test 
Procedure   
 3 DU T Send a RESET 
control message  3 DUT Send a RST control 
message  
TCPCALLABORT03  Changed 
Pass Criteria  3 DUT Issues an ABORT 
call 
4 TESTER Verify that the 
DUT responds with ok 
to the application  4 TESTER Verify that the 
DUT responds with ok 
to the application  
5 TESTER Verify that the 
DUT moves on to CLOSED 
5 TESTER Verify that the 
DUT moves on to CLOSED 
state  state  
TCPFLAGSINVALID0 6 Changed 
Test 
Iterations  1 CASE stp  ACK 
segment  
2 CASE stp  Data 
segment  1 CASE stp  no data  
2 CASE stp  data  
TCPFLAGSINVALID07  Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ   number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID08  Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0  and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID 09 Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGS INVALID 10 Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID 11 Changed 
Test 
Procedure  2 TESTER Sen d a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID 12 Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID 13 Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segmen t 
with a flag set RST0 and 
with an unacceptable SEQ 
number  
TCPFLAGSINVALID 14 Changed 
Test 
Procedure  2 TESTER Send a segment 
with a flag set and with an 
unacceptable SEQ number  2 TESTER Send a segment 
with a flag set RST0 and 
with an unacceptabl e SEQ 
number  
TCPFLAGSPROCESSING
03 Changed 
Pass Criteria  3 DUT Goes to CLOSED 
state  
4 TESTER Verify that the 
DUT moves on to CLOSED 
state  4 TESTER Verify that the 
DUT moves on to CLOSED 
state  
TCPFLAGSPROCESSING
04 Changed 
Pass Criteria  3 DUT Goes to CLOSED 
state  
4 TESTER Verify that the 
DUT moves on to CLOSED 4 TESTER Verify that the 
DUT moves on to CLOSED 
state  
state  
TCPFLAGSPROCESSING
05 Changed 
Pass Criteria  3 DUT Send a RST segment  
3 TESTER Verify that the 
DUT moves on to CLOSED  
state  3 DUT Send a RST segment  
4TESTER Verify that the 
receiving application 
receives the signal  
that connection reset  
has occurred from the 
remote site and the DUT 
moves on to CLOSED state  
TCPFLAGSPROCESSING
07 Changed 
Test 
Procedure  2 TESTER Send a data 
segment with URG flag set  2 TESTER Send a data 
segment with only URG flag 
set 
TCPFLAGSPROCESSING
08 Changed 
Test 
Procedure  3 DUT Do not send any 
response or retransmit SYN 
in SYN SENT or LISTEN 
state and send a RST 
segment in CL OSED state  
 3 DUT in SYN SENT or 
LISTEN state  Do not send 
any response or retransmit 
SYN         
In CLOSED state  send a 
RST segment  
 
TCPFLAGSPROCESSING
09 Changed 
Pass Criteria  3 DUT Do not change state  
4 TESTER Verify that the 
DUT remains in wst state  4 TESTER Verify that the 
DUT remains in wst state  
TCPFLAGSPROCESSING
11 Changed 
Test 
Procedure  1 TESTER Cause DUT to 
move on to LISTEN state at 
a wnp  
2 TESTER Cause DUT to 
move to ESTABLISHED state  
3 TESTER Send the last 
ACK once  more  
4 DUT Do not send any 
response  
5 TESTER Verify that the 
DUT remains in 
ESTABLISHED state  
 1 TESTER Cause DUT to 
move to ESTABLISHED state  
2 TESTER Send the last 
ACK once more  
3 DUT Do not send any 
response  
4 TESTER Verify that the 
DUT rem ains in 
ESTABLISHED state  
TCPCLOSING01  Changed 
Pass Criteria  1 DUT Move on to SYN 
RCVD state starting with an 
active OPEN call  
3 DUT Go to CLOSED state  
4 TESTER Verify that DUT 
goes to CLOSED state  4 TESTER Verify that DUT 
goes to CLOSED state  
TCPCLOSING02  Changed 
Pass Criteria  1 DUT Move on to 
ESTABLISHED state  
4 TESTER Verify that the 
receiving application 
receives the signal  4 TESTER Verify that the 
receiving application 
rece ives the signal  
that connection reset  
has occurred from the 
that connection reset  
has occurred from the 
remote site  remote site  
TCPCLOSING03  Changed 
Test 
Procedure   
2 TESTER Send a RST 
segment containing some 
ASCII data  2 TESTER Send a R ST 
segment containing some 
data  
TCPCLOSING05  Changed 
Test 
Procedure  2 TEST ER Send a SYN on 
the same port  2 TESTER Send a SYN  
TCPCLOSING05  Changed 
Pass Criteria  3 DUT Send SYNACK  3 DUT Send SYNACK  
4 TESTER  Verify that the 
DUT moves on to 
ESTABLISHED state  
TCPCLOSING07  Changed 
Pass Criteria  3 DUT DUT sends a FIN 
and Reaches FIN WAIT 1 
State  
5 DUT Issue a RECEIVE call  
7 DUT Send ACK of the 
received data  
8 TESTER Check that DUT 
receives proper data  
9 TESTER Check that DUT 
remains in FIN WAIT 1 state  3 DUT DUT sends a FIN  
7 DUT Send ACK of the 
received data  
9 TESTER Check that DUT 
remains in FIN WAIT 1 state  
TCPCLOSING09  Changed 
Pass Criteria  3 DUT Send ACK for the 
received FIN  
5 DUT Send data  
6 TESTER Check that DUT 
sent proper data  
7 TESTER Check that DUT 
remains in CLO SEWAIT 
state  3 DUT Send ACK for the 
received FIN  
6 TESTER Check that DUT 
sent proper data  
7 TESTER Check that DUT 
remains in CLOSEWAIT 
state  
TCPCLOSING10  Changed 
Pass Criteria  1 DUT Move on to 
FINWAIT 1 state  
4 TESTER Verify that the 
receiving application 
receives the signal  that 
connection reset  has 
occurred from the remote 
site 4 TESTER Verify that the 
receiving application 
receives the signal  that 
connection reset  has 
occurred from the remote 
site 
TCPCLOSING11  Changed 
Pass Criteria  1 DUT Move on to 
FINWAIT 2 state  
4 TESTER Verify that the 4 TESTER Verify that the 
receiving application 
receives the signal  that 
receiving application 
receives the signal  that 
connection reset  has 
occurred from the remote 
site con nection reset  has 
occurred from the remote 
site 
TCPCLOSING12  Changed 
Pass Criteria  1 DUT Move on to CLOSE 
WAIT state  
4 TESTER Verify that the 
receiving application 
receives the signal  
that connection reset  
has occurred from the 
remote site  4 TESTER Verify that the 
receiving application 
receives the signal  
that connection reset  
has occurred from the 
remote site  
TCPMSSOPTIONS06  Changed 
Test 
Procedure  5 TESTER Cause the 
application to issue a SEND 
request for data with  size at 
least 
maxtransportlayermaxs
endmsgsize 20 MSS  
7 TESTER Verify that the 
first received segment has 
size that is  
mintransportlayerma xs
endmsgsize 20 MSS  5 TESTER Cause the 
application to issue a SEND 
request for data with  
size at least max MSS  
7 TESTER Verify that the 
first received segment has 
size that is min MSS  
TCPMSSOPTIONS06  Changed 
Test 
Iterations  1 CASE Mv is smaller than 
transportlayermaxsend
msgsize 20 of DUT  
2 CASE Mv is larger than 
transportlayermaxsend
msgsize 20 of DUT  1 CASE Mv is smaller than 
MSS of DUT  
2 CASE Mv is larger than 
MSS of DUT  
TCPMSSOPTIONS08  Changed 
Pass Criteria  1 DUT Move on to 
ESTABLISHED state  
4 DUT Send a data 
segment  
5 TESTER Verify that the 
received segment has size 
equal to  
mintransportlayermaxs
endmsgsize 20 536  4 DUT Send a data 
segment  
5 TESTER Verify that the 
received segment has size 
equal to  
mintransportlayermaxs
endmsgsize 20 536  
TCPAVOIDANCE02  Changes 
Synopsis  TCP MUST include an SWS 
avoidance algorithm in the 
receiver Noteread some 
data of size greater or equal 
to MSS TESTER follow the 
third step in a sequence 
TESTER cause DUT to TCP MUST include an SWS 
avoidance algorithm in the 
receiver Noteread some 
data of size greater or equal 
to MSS TESTER follow the 
third step in a sequence 
TESTER cause DUT to 
receive multiple of 360 byte 
data until DUT read data of 
size greater or equal  to 
MSS  receive data until DUT read 
data of size greater or equal 
to MSS  
TCPRETRANSMISSIONT
O04  Changed 
Pass Criteria  3 DUT Send the data 
segment  
5 DUT Retransmit the data 
segment after a timeout  2 DUT Send a SYN  
4 DUT Retransmit the SYN 
segment after a timeout  
5 TESTER Verify that RTO 
retransmission  interval is 
increasing at a fast at least 
more than linear rate  
TCPRETRANSMISSIONT
O05  Changed 
Pass Criteria  2 DUT Send a SYN  
4 DUT Retransmit the SYN 
segment after a timeout  2 DUT Send a SYN  
4 DUT Retransmit the SYN 
segment after a timeout  
5 TESTER Verify that RTO 
retransmission interval is 
increasing at a fast at least 
more than linear rate  
TCPRETRANSMISSIONT
O08  Changed 
Test 
Procedure  3 TESTER Do not send ACK  
4 DUT Retransmit the data 
segment  
5 TESTER Do not send any 
ACK and verify that the DUT 
repeatedly  retransmits with 
increasing delays till the 
retransmit   timeout reaches 
2MSL after which the RTO 
gets fixed at   that value  3 DUT  Send the data 
segment  
4 TESTER Do not send ACK  
5 DUT Retransmit the data 
segment  
6 TESTER Do not send any 
ACK and verify that the DUT 
repeatedly  retransmits with 
increasing delays till the 
retransmit  timeout reaches 
2MSL after which the RTO 
gets fixed at  that value  
TCPRETRANSMISSIONT
O08  Changed 
Pass Criteria  4 DUT Retransmit the data 
segment  3 DUT  Send the data 
segment  
5 DUT Retransmit the data 
segment  
6 TESTER Verify that the 
DUT repeatedly retransmits 
with increasing delays till 
the retransmit  timeout 
reaches 2MSL after which 
the RTO gets fixed at that 
value  
TCPRETRANSMISSIONT
O09  Changed 
Pass Criteria  2 DUT Send a SYN  
4 DUT Retransmit the SYN 
segment  4 DUT Send only cwnd 
ini segments  
TCPSLOWSTARTCONGE
STION01  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segments and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 4 DUT Send only cwnd 
ini segments  
ini segments  
TCPSLOWSTARTCONGESTI
ON02  Changed Pass 
Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh to 
65535 bytes  
4 DUT Send only cwnd ini 
segments  
6 DUT Set cwnd to 2cwnd 
ini send 2 cwnd ini 
segments and wait  
for their ACK  
8 DUT Retransmit data 
packet  4 DUT Send only cwnd ini 
segments  
6 DUT send 2cwnd ini 
segments and wait  
for their ACK  
8 DUT Retransmit data 
packet  
TCPSLOWSTARTCONGE
STION03  Changed 
Pass Criteria  2 DU T Set cwnd to cwnd 
ini segments and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini send 
4cwnd ini segments and  
wait f or their ACK  
10 DUT Set cwnd to 
8cwnd ini send 
8cwnd ini segments and  
wait for their ACK  
12 DUT Retransmit data 
packet  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
8 DUT send 4cwnd ini 
segments and  
wait for their ACK  
10 DUT send 8cwnd ini 
segments and  
wait for their ACK  
12 DUT Retransmit data 
packet  
TCPSLOWSTARTCONGE
STION04  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini send 
4cwnd ini segments and  
wait for their ACK  
10 DUT Set cwnd to 
8cwnd ini send 4 
segment s and wait for  
their ACK  
12 DUT Retransmit data 4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
8 DUT send 4cwnd ini 
segments and  
wait for their ACK  
10 DUT send 4 segments 
and wait for  
their ACK 
12 DUT Retransmit data 
packet  
packet  
TCPSLOWSTARTCONGE
STION05  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini segment 
Send 4cwnd ini 
segments  
and wait for their ACK  
10 DUT Set ssthresh to 
cwnd2 2cwnd ini 
and cwnd to LW  
11 DUT Retransmit 
cwnd segment  
13 DUT Send only cwnd 
ini segments  
15 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
17 DUT Start congestion 
avoidance Send 2cwnd 
ini  1 segments  
because the DUT is 
performing Congestion 
Avoidance and not  
4cwnd ini segments as 
would be the case  with 
Slow Start  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
8 DUT Send 4cwnd ini 
segments  
and wait for their ACK  
11 DUT Retransmit 
cwnd segment  
13 DUT Send only cwnd 
ini segments  
15 DUT send 2cwnd ini 
segments and  
wait for their ACK  
17 DUT Start congestion 
avoidance Send 2cwnd 
ini  1 segments  
because the DUT is 
performing Congestion 
Avoidance and not  
4cwnd ini segments as 
would be the case with 
Slow Start  
TCPSLOWSTART CONGE
STION06  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segment  
8 DUT Set ssthresh to 2 
and cwnd to LW  
9 DUT Send only cwnd 
segment  
13 DUT Start congestion 
avoidance Send 3 segments 
because the DUT  
is performing Congestion 4 DUT Send only cwnd 
ini segment  
9 DUT Send only cwnd 
segment  
13 DUT Start congestion 
avoidance Send 3 segments 
because the DUT  
is performing Congestion 
Avoidance and not 4 
segments as  
would be the case with 
Slow Start  
Avoidance and not 4 
segments as  
would be the case with 
Slow Start  
TCPSLOWSTARTCONGE
STION07  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini segment 
Send 4cwnd ini 
segments  
and wait for their ACK  
10 DUT Set ssthresh to 2 
and cwnd to LW  
11 DUT Send only cwnd 
segment  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
8 DUT Send 4cwnd ini 
segments  
and wait for their ACK  
11 DUT Send only cwnd 
segment  
TCPSLOWSTARTCONGE
STION08  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini segment 
Send 4cwnd ini 
segments  
and wait for th eir ACK  
10 DUT Set ssthresh to 
cwnd22cwnd ini and 
cwnd to LW  
11 DUT Send only cwnd 
segments  
13 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
15 DUT Start congestion 
avoidance by sending 
2cwnd ini1  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
8 DUT Send 4cwnd ini 
segments  
and wait for their ACK  
11 DUT Send only cwnd 
segments  
13 DUT send 2cwnd ini 
segments and  
wait for their ACK  
15 DUT Start congestion 
avoidance by sending 
2cwnd ini1  
segments but not 4cwnd 
ini 
segments but not 4cwnd 
ini 
TCPSLOWSTARTCONGE
STION09  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only  cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
9 DUT Set cwnd to 4 
segment Send 4 segments 
and wait for  
their ACK  
11 DUT Set ssthresh  
cwnd22 and cwnd to 
LW  
12 DUT Send only cwnd 
segme nt 
15 DUT Set cwnd to 2 
2SMALLMAXSEGSIZE 
in bytes send 2  
segments and wait for their 
ACK 
17 DUT Start congestion 
avoidance Calculate cwnd 
in bytes as  
cwnd   segsize  segsize 
 cwnd   
noofACKreceived  
ie 
2SMALLMAXSEGSIZE 
 S MALLMAXSEGSIZE  
SMALLMAXSEGSIZE2
SMALLMAXSEGSIZE2 
 
2SMALLMAXSEGSIZE
SMALLMAXSEGSIZE 
bytes 3 segments  
18 DUT Send 3 segments  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
9 DUT  Send 4 segments 
and wait for  
their ACK  
12 DUT Send only cwnd 
segment  
15 DUT send 2  
segments and wait for their 
ACK 
18 DUT Send 3 segments  
TCPSLOWSTARTCONGE
STION10  Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments and  
wait for their ACK  
9 DUT Send 4 segmen ts 
and wait for  
2cwnd ini segments and  
wait for their ACK  
9 DUT Set cwnd to 4 
segment Send 4 segments 
and wait for  
their ACK  
11 DUT Set ssthresh  
cwnd22 and cwnd to 
LW  
12 DUT Send only cwnd 
segment  
16 DUT Start congestion 
avoidance send 3 segments  
18 DUT Send 4 segments  
20 DUT Send 5 segments  their ACK  
12 DUT Send only cwnd 
segment  
16 DUT Start congestion 
avoidance send 3 segments  
18 DUT Send 4 segments  
20 DUT Send 5 segments  
TCPFASTRETRANSMIT0
1 Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini send 
2cwnd ini segments and  
wait for their ACK  
8 DUT Set cwnd to 
4cwnd ini send 
4cwnd ini segments and  
wait for their ACK  
10 DUT On receiving the 
3rd duplicate ACK 
retransmit the ACKd  
segment  
11 TESTER Check that DUT 
retransmits the correct 
packet  
without waiting for 
retransmission timer to 
expire  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments  
10 DUT Retransmit the 
segment indicated by the 
last received ACK  
12 DUT Send 4 segments  
TCPFASTRETRANSMIT0
2 Changed 
Pass Criteria  2 DUT Set cwnd to cwnd 
ini segment and ssthresh 
to 65535 bytes  
4 DUT Send only cwnd 
ini segments  
6 DUT Set cwnd to 
2cwnd ini and send 
2cwnd ini segments  
10 DUT On receivng the 3 
duplicate ACKs  4 DUT Send only cwnd 
ini segments  
6 DUT send 2cwnd ini 
segments  
10 DUT Retransmit the 
segment indicated by the 
last received ACK  
12 DUT Send 4 segments  
14 DUT Send 5 segments  
set ssthresh to one half the 
current cwnd  
Retransmit the segment 
indicated by the last 
received ACK  
and set cwnd to ssthresh 
plus 3 in segments  
12 DUT Send 4 segments  
14 DUT Send 5 segments  
TCPHOSTSPEC02  Changed 
Test 
Procedure  10 TESTER Ch eck whether  
DF bit is not set IPv4  
        OR  
Fragmentati on Header is 
not present IPv6  
OR  
length does not exceed 
SMALLPATHMTU  40 if  
           DF bit is set IPv4  
           OR 
           Fragmentation 
Header is present IPv6  10 TESTER Check whether  
A DF bit is not set IPv4  
        OR  
Fragmentation Header is 
not present IPv6  
OR  
B length does not exceed 
SMALLPATHMTU  40 if  
           DF bit is set IPv4  
           OR 
           Fragmentation 
Header is present  IPv6  
TCPHOSTSPEC03  Changed 
Test 
Procedure  1 TESTER Cause DUT to 
move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the 
application on the DUT side 
to send large data  
6 DUT Send data of size 
DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation 
Header present IPv6  
7 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  
8 DUT Send data packet of 
size less than 
SMALLPATHMTU  40 
9 TESTER Send ACK for the 
received data  
10 DUT Continue sending 
data of size 1 Cause DUT to move on to 
ESTABLISHED state  
2 TESTER Cause the 
application on the DUT side 
to send large data  
3 DUT Send data of size 
DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation 
Header present IPv6  
4 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4  
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
SMALLPATHMTU  40 
11 TESTER Send ACK for 
the recei ved data and 
observe for 5 minutes  
        that DUT never sends 
data more than 
SMALLPATHMTU  40 
        bytes  DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
5 DUT Send data packet of 
size less than 
SMALLPATHMTU  40 
6 TESTER Send ACK for the 
received data  
7 DUT Continue sending 
data of size 
SMALLPATHMTU  40 
8 TESTER Send ACK for the 
received data and observe 
for 5 minutes  
        that DUT never sends 
data more than 
SMALLPATHMTU  40 
        bytes  
TCPHOSTSPEC04  Changed 
Test 
Procedure  7 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  7 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set t o SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPHOSTSPEC09  Changed 
Test 
Procedure  7 TESTER Send ICMP 
packet with code field set to 
DATAGRAMTOOBIG with  
         next hop MTU field 
set to 0  7 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Frag mentation needed and 
DF bit set  
         Next Hop MTU field 
set to 0  
           OR 
TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field  
set to 0  
TCPHOSTSPEC10  Changed 
Test 
Procedure  7 TESTER Send ICMP 
packet with code field set to 
DATAGRAMTOOBIG with  
         next hop MTU field 
set to 0  7 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to 0  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to 0  
TCPLAYERACTIONS01  Changed 
Test 
Procedure  7 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  7 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPLAYERACTIONS02  Changed 
Test 4 TESTER Send a n ICMP 
packet with code field set to 4 TESTER Send an ICMP 
packet with IPv4  
Procedure  DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU           type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation nee ded and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPLAYERACTIONS03  Changed 
Test 
Procedure  7 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  7 TESTER Send an ICMP 
packet with  IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPLAYERACTIONS05  Changed 
Test 
Procedure  10 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  10 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPLAYERACTIONS07  Changed 
Test 
Procedure  7 TESTER Send an ICMP 
packet with code field set to 
DATAGRAMTOOBIG  
        and Next Hop MTU 
field set to 
SMALLPATHMTU  7 TESTER Send an ICMP 
packet with IPv4  
         type set to 3 
Destination Unreachable 
message  
         code field set to 4 
Fragmentation needed and 
DF bit set  
         Next Hop MTU field 
set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 
packet with IPv6  
         type set to 2 Packet 
too big message  
         code field set to 0 
DATAGRAMTOOBIG  
         Next Hop MTU field 
set to SMALLPATHMTU  
TCPIMPROVEDWINDO
WING02  Changed 
Test 
Procedure 
and Pass 
Criteria  5 DUT Calculate usable 
window and itll be less 
than 25 of offered 
window  
        Itll not send any new 
data segm ents  5 DUT  Usable window is 
smaller than 25 DUT does 
not send a new data 
segment  
TCPIMPROVEDWINDO
WING04  Changed 
Test 
Procedure 
and Pass 
Criteria  5 DUT Calculate usable 
window and itll be of 
Maximum Segment Size  
        Itll send a new data 
segment  5 DUT Send a new data 
segment as the usable 
window is bigger than the 
Maximum Segment Size  
TCPIMPROVEDWINDO
WING05  Changed 
Test 
Procedure 
and Pass 
Criteria  5 DUT Calculate usable 
window and itll be less 
than Maximum Segment 
Size 
        Itll not send a new 
data segment  5 DUT Does not send a 
new data segment as the 
usable window is smaller 
than the Maximum 
Segment Size  
        Itll not send a new 
data segment  
TCPCONNECTIONESTAB
12 Changed 
Test  
Procedure  2 TESTER Send a ACK 
packet on a nother wnp  
 2 TESTER Send a Keep 
Alive ACK packet with  
SEGSEQ  SNDNXT  1 
Note on a quiet 
connection SNDNXT  
RCVNXT so that the 
Sequence Number is out of 
the receive window  
TCPSEQUENCE04  Changed 
Test  
Procedure  1 TESTER Bring DUT to 
ESTABLISHED state  
2 TESTER Send a TCP 
packet with Sequence 
Number equal to 
SeqMaxVal  
3 DUT Send an ACK with 
Ack Number equal to 0  1 TESTER Send a SYN to 
DUT at wnp with Initial 
Sequence Number equal to 
SeqMaxV al 
2 DUT Send SYNACK with 
Ack Number equal to 0  
TCPCONTROLFLAGS06  Test Case 
deleted    
ARP01  Changed 
Test 
Procedure  3 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  3 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP02  Changed 
Test 
Procedure  3 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  3 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP03  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo  Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP04  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP05  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP06  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP07  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP08  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP09  Changed 
Test 2 DUT CONFIGURE 
Configure DUT to send an 2 DUT CONFIGURE 
Conf igure DUT to send a 
Procedure  ICMP Echo Request 
Message  UDP Request Message  
ARP10  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP11  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP12  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP13  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP14  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP15  Changed 
Test 
Procedure  2 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Mes sage  
ARP22  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP25  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP28  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP31  Chan ged 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP32  Changed 
Test 
Procedure  5 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  5 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP33  Changed 
Test 5 DUT CONFIGURE 
Configure DUT to send an 5 DUT CONFIGURE 
Configure DUT to send a 
Procedure  ICMP Echo Request 
Message  UDP Request Message  
ARP34  Changed 
Test 
Procedure  5 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  5 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP35  Changed 
Test 
Procedure  5 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  5 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP38  Changed 
Test 
Procedure  4 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  4 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP39  Changed 
Test 
Procedure  2 and 7 DUT CO NFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 and 7 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
ARP40  Changed 
Test 
Procedure  2 and 7 DUT CONFIGURE 
Configure DUT to send an 
ICMP Echo Request 
Message  2 and 7 DUT CONFIGURE 
Configure DUT to send a 
UDP Request Message  
TCPOUTOFORDER06  
TCPOUTOFORDER07  
TCPOUTOFORDER09  
TCPMD501   
TCPMD511  
TCPCUBIC01   
TCPCUBIC06  
TCPIMPROVEDWINDO
WING06  
TCPIMPROVEDWINDO
WING07  
TCPCONNECTIONESTAB
04 
TCPCONNECTIONESTAB
05 
TCPCONNECTIONESTAB
06 
TCPCONNECTIONESTAB
08  
TCPCONNECTIONESTAB
11 
TCPHEADER03  
TCPSEQUENCE06  
TCPACKNOWLEDGEMEN
T01  
TCPCONTROLFLAGS02  Invalid Test 
Case   Deleted Test Case  
TCPCONTROLFLAGS03  
TCPCONTROLFLAGS04  
TCPCONTROLFLAGS06  
TCPCONTROLFLAGS09  
TCPCONTROLFLAGS10  
TCPCONTROLFLAGS11  
TCPCONTROLFLAGS12  
TCPWINDOWSIZE01  
TCPWINDOWSIZE02  
TCPWINDOWSIZE03  
SWITCHVLAN01  Changed 
Test 
Procedure  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 1 Create the test 
topology as shown in 
the Setup  
2 On each test port  
iterate through each 
VLAN  source MAC and 
destination MAC  and 
transmit Echo Request 
packets for each 
combination  
3 Verify that for each 
valid combination of 
destination MAC and 
VLAN  an Echo Reply  is 
received  on the test 
device port that sent 
the Echo Request 
packet  
4 Verify that for each 
invalid VLAN  or each 
invalid MACVLAN 
combination  the Echo 
Request packet  is 
dropped  on the 
recei ving ECU Switch 
Port   
5 Verify that for each 
combination of invalid 
destination MAC and 
valid VLAN the Echo 
Request is forwarded to 
each test device port  
belonging to that VLAN 
except the source port 
of Echo Request  
 
 
 1 Create the test topology 
as shown in the Setup  
2 On each test port iterate 
through each source MAC 
and destination MAC 
address and transmit 
untagged Echo Request 
packets for each 
combination  
3 Verify that for each valid 
destination MAC the Echo 
Request is received from 
each external DUT port 
except from the port the 
Echo Request packet has 
been sent to  
4 Verify that for each valid 
combination of destination 
MAC and VID an Echo 
Reply from each internal 
port is received from the 
DUT port the Echo Request 
packet has been sent to  
5 Verify that for each 
invalid VLAN or each invalid 
MACVLAN combination n o 
Echo Request or Echo Reply 
has been received on any 
port  
6 On each test port iterate 
through each VLAN ID 
source MAC and destination 
MAC address and transmit 
single tagged Echo Request 
packets for each 
combination  
7 Verify that for each valid 
desti nation MAC the Echo 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Changed  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
The DUT  traffic counters Request is received from 
each external DUT port 
except from the port the 
Echo Request packet has 
been sent to  
8 Verify that for each valid 
combination of destination 
MAC and VID an Echo 
Reply from each internal 
port is received from  the 
DUT port the Echo Request 
packet has been sent to  
9 Verify that for each 
invalid VLAN or each invalid 
MACVLAN combination no 
Echo Request or Echo Reply 
has been received on any 
port  
10 On each test port 
iterate through each VLAN 
ID as outer VL AN tag 
source MAC and destination 
MAC address and transmit 
double tagged Echo 
Request packets for each 
combination  
11 Verify that for each valid 
destination MAC the Echo 
Request is received from 
each external DUT port 
except from the port the 
Echo Req uest packet has 
been sent to  
12 Verify that for each valid 
combination of destination 
MAC and VID an Echo 
Reply from each internal 
port is received from the 
DUT port the Echo Request 
packet has been sent to  
13 Verify that for each 
invalid VLAN or each  invalid 
MACVLAN combination no 
Echo Request or Echo Reply  
has been received on any 
port  
 
The DUT traffic counters 
Pass Criteria  match the expected test 
device traffic counters for 
each combination of VLAN 
Source MAC and 
Destination MAC  match the expected test 
device traffic counters for 
each combination of VLAN 
Source MAC and 
Destination MAC  
The traffic received by the 
test device is tagged or 
untagged in accordance to 
the VLAN configuration 
provided by the 
manufacturer  
SWITCHVLAN02  Changed 
Test 
Procedure  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 1 Create the test 
topology as shown in 
the Setup  
2 On each test port 
iterate through each 
VLAN source MAC 
source IP and 
destination IP and 
transmit ARP Request 
packets for each 
combination  
3 Verify that for each 
valid combination of 
destination IP and 
VLAN  an ARP Reply is 
received on the test 
device port that sent 
the ARP Request 
packet  
4 Verify that for each 
invalid VLAN the ARP 
Request packet is 
dropped on the 
receiving ECU Switch 
Port   
5 Verify that for each 
combination of invalid 
destination IP and vali d 
VLAN the ARP Request 
is forwarded to each 
test device port 
belonging to that VLAN 
except the source port 
of ARP Request  
 
 
 1 Create the test topology 
as shown in the Setup  
2 On each test port iterate 
through each source MAC 
source IP and destination IP 
and transmit untagged 
broadcast ARP Request 
packets for ea ch 
combination  
3 Verify that for each valid 
destination IP the ARP 
Request is received from 
each external DUT port 
except from the port the 
ARP Request packet has 
been sent to  
4 Verify that for each valid 
combination of destination 
IP and VID an ARP Reply 
from each internal port is 
received from the DUT port 
the ARP Request packet has 
been sent to  
5 Verify that for each 
invalid VLAN no ARP 
Request or ARP Reply has 
been received on any port  
6 On each test port iterate 
through each VLAN source 
MAC source IP and 
destination IP address and 
transmit single tagged 
broadcast ARP Request 
packets for each 
combination  
7 Verify that for each valid 
destination MAC the ARP 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Changed 
Pass Criteria   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
The DUT  traffic counters 
match the expected test 
device traffic counters for Request is received from 
each external DUT port 
except from the port the 
ARP Reque st packet has 
been sent to  
8 Verify that for each valid 
combination of destination 
MAC and VID an ARP Reply 
from each internal port is 
received from the DUT port 
the ARP Request packet has 
been sent to  
9 Verify that for each 
invalid VLAN no ARP 
Reque st or ARP Reply has 
been received on any port  
10 On each test port 
iterate through each VLAN 
as outer VLAN tag source 
MAC source IP and 
destination IP address and 
transmit double tagged 
broadcast ARP Request 
packets for each 
combination  
11 Verify that for each valid 
destination MAC the ARP 
Request is received from 
each external DUT port 
except from the port the 
ARP Request packet has 
been sent to  
12 Verify that for each valid 
combination of destination 
MAC and VID an ARP Reply 
from each interna l port is 
received from the DUT port 
the ARP Request packet has 
been sent to  
13 Verify that for each 
invalid VLAN no ARP 
Request or ARP Reply  has 
been received on any port  
 
 
The DUT traffic counters 
match the expected test 
device traffic counters for 
each combination of VLAN 
Source MAC Source IP and 
Destination IP  each combination of VLAN 
Source MAC Source IP and 
Destination IP  
The traffic received by the 
test device is tagged or 
untagged in accordance to 
the VLAN configuration 
provided by the 
manufacturer  
SWITCHVLAN03  Changed 
Test 
Procedure  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 1 Create the test 
topology as shown in 
the Setup  
2 Configure the test ports 
acting as Hosts to send 
join for the destination 
multicast groups  
3 Verify that the test 
ports acting as  Hosts 
are receiving queries 
and the test port acting 
as Querier is receiving 
joinleave messages  
4 On test port acting as 
IGMP Querier  iterate 
through each VLAN 
source MAC source IP 
and destination 
multicast IP destination 
MAC is derived from 
destinati on IP and 
transmit multicast IP 
traffic for each 
combination  
5 Verify that for each 
valid combination of 
source IP destination IP 
and VLAN the IP 
multicast traffic is 
correctly replicated only 
on those test ports  that 
have receivers for the 
IGMP Group  identified 
by destination multicast 
IP 
Note The ECU switch 
can be a purehybrid L2 
switch and in that case 
multicast forwarding 1 Create the test topology 
as shown in the Setup  
2 Configure the test ports 
acting as Hosts to send join 
for the de stination 
multicast groups  
3 Verify that the test ports 
acting as Hosts are receiving 
queries and the test port 
acting as Querier is 
receiving joinleave 
messages  
4 On each test port acting 
as IGMP Querier iterate 
through each source MAC 
source IP an d destination 
multicast IP destination 
MAC is derived from 
destination IP and 
transmit untagged multicast 
IP traffic for each 
combination  
5 Verify that for each valid 
combination of source IP 
and destination IP the IP 
multicast traffic is correctly 
replicated only on those 
test ports that have 
receivers for the IGMP 
Group identified by 
destination multicast IP  
Note The ECU switch can 
be a purehybrid L2 switch 
and in that case multicast 
forwarding will be enabled 
either by IGMP snooping or 
static multicast forwarding 
entries  
6 On each test port acting 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Changed 
Pass Criteria  will be enabled either 
by IGMP snooping or 
static multicast 
forwarding entries  
6 Verify that for each 
invalid VLAN  the IP 
multicast packet is 
dropped on the 
receiving ECU Switch 
Port  
7 Verify that for each 
combination of invalid 
destination multicast IP 
and valid VLAN the IP 
traffic is not forwarded  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
DUT  traffic counters match 
the expected test device 
traffic counters for each 
combination of VLAN 
Source MAC Source IP and 
Destination IP  as IGMP Querier iterate 
through each VID source 
MAC source IP and 
destination multicast IP 
destination MAC is derived 
from destination IP and 
transmit single tagged 
multicast IP traffic for ea ch 
combination  
7 Verify that for each valid 
combination of source IP 
and destination IP the IP 
multicast traffic is correctly 
replicated only on those 
test ports that have 
receivers for the IGMP 
Group identified by 
destination multicast IP  
8 On each  test port acting 
as IGMP Querier iterate 
through each VID as outer 
VLAN tag source MAC 
source IP and destination 
multicast IP destination 
MAC is derived from 
destination IP and 
transmit double tagged 
multicast IP traffic for each 
combination  
9 Verify that for each valid 
combination of source IP 
and destination IP the IP 
multicast traffic is correctly 
replicated only on those 
test ports that have 
receivers for the IGMP 
Group identifie d by 
destination multicast IP  
 
DUT traffic counters match 
the expected test device 
traffic counters for each 
combination of VLAN 
Source MAC Source IP and 
Destination IP  
The traffic received by the 
test device is tagged or 
untagged in accordance to 
the VLAN configuration 
provided by the 
manufacturer  
SWITCHQOS 01 Deprecated   Removed as the test case is 
actually not testing QoS 
behavior but only verifying 
the VLAN tag which is also 
done in test cases 
SWITCHVLAN01 
SWITCHVLAN02 and 
SWITCHVLAN03  
SWITCHQOS02  Deprecated   Removed due to referenced 
TC11 test case  
SWITCHQOS03  Deprecated   Removed due to referenced 
TC11 test case  
SWITCHQOS04  Deprecated   Removed due to referenced 
TC11 test case  
SWITCHQOS05  Deprecated   Removed due to referenced 
TC11 test case  
8021XEAPoLAuthentic
ationpositive  New test   New test is necessary as the 
according test cases in the 
TC11 test specification only 
cover switch dependent 
features  
8021XEAPoLAuthentic
ationnegative  New test   New test is necessary as the 
according te st cases in the 
TC11 test specification only 
cover switch dependent 
features  
8021AEMACsecframes
forwarded  New test   New test is necessary as the 
according test cases in the 
TC11 test specification only 
cover switch dependent 
features  
SWITCH GENERAL 01 Deprecated   Removed due to referenced 
TC11 test case  
SWITCH GENERAL 02 Deprecated   Removed due to referenced 
TC11 test case  
SWITCH GENERAL 03 Deprecated   Removed due to referenced 
TC11 test case  
SWITCH GENERAL 04 Deprecated   Removed due to referenced 
TC11 test case  
PortDisabling  Renamed  
 
 
Changed 
Test 
Procedure  SWITCHGENERAL05  
 
 
The test system 
continuously transmits 
unicast and broadcast PortDisabling  
 
 
1 Receive and monitor all 
traffic from all ports  
2 From the test station 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Changed 
Pass Criteria  frames with minimum 42 
bytes and maximum 
regular 1500 bytes 
payload length on all 
connected ports of the DUT  
The test shall run until at 
least 100 frames were 
dropped at each disabled 
port  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Verify that all frames 
received on disabled ports 
Pdisabled  are not forwarded send traffic to a p ort A 
addressed to a port B  
3 Observe if test station 
receives any traffic from 
port B  
4 Through any vendor 
specified means disable 
port B  
5 Observe if link at port B is 
still up when the port is 
disabled  
6 From the test station 
send traffic to port A  
addressed to port B  
7 Observe if test station 
receives any traffic from 
port B  
8 From the test station 
send traffic to port B 
addressed to port A and 
with a source MAC address 
X that has not been learnt 
on any DUT port yet  
9 Observe if test station 
receives any traffic from 
port A that has been sent to 
port B in step 8  
10 If flooding of frames 
with unknown destination 
MAC addresses is enabled 
then from the test station 
send traffic to port A 
addressed to the MAC 
address X  
11 If flooding of frames 
with unknown destination 
MAC addresses is enabled 
observe if test station 
receives on any port any 
traffic that has been sent to 
port A in step 10  
12 Repeat the test steps 1 
11 for all ports that can be 
disabled as port B  
 
3 Test Station receives 
traffic from port B  
5 Link at port B is still up  
to any other port  
Verify that no frames are 
transmitted on a disabled 
port by the DUT  7 Test Station receives no 
traffic from port B  
9 Test Station receives no 
traffic from port A  
11 Test Station receives 
traffic from all ports  
AddressLearningreadA
RLtable  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
AddressLearningwrite
ARLtable  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not appl icable for TC8 ECU 
testing  
AddressLearningwithu
ntaggedframesatexter
nalports  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
AddressLearningwitht
aggedframesatexterna
lports  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
AddressLearningatinte
rnalports  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
SWITCHINGRESS01  Deprecated   Removed due to referenced 
TC11 test case  
SWITCHINGRESS02  Deprecated   Removed due to referenced 
TC11 t est case  
PolicingInformationexte
rnalports  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
PolicingInformationinte
rnalports  New test   New test is necessary as the 
according test cases in the 
TC11 test specification is 
not applicable for TC8 ECU 
testing  
SWITCHDIAGNOSTICS01  Deprecated   Removed due to referenced 
TC11 test case  
SWITCHDIAGNOSTICS0 2 Deprecated   Duplicate to 
OABRSIGNAL 01 and 
OABRSIGNAL 02  
SWITCHDIAGNOSTICS0 3 Deprecated   Duplicate to 
OABRCABLE01  and 
OABRCABLE02  
 
15 Feedback  
Any feedback for correcting improving or adding new content is welcome We encourage to bring 
forward this feedback in the regular meetings of the  TC8 In case you are not an OPEN 
Alliance member you can relay questions or feedback through t he following contacts  
Company  Name  Email address  
CS Group   ethtestingcs groupde  
IXIA   
NXP  Rajeev Roy  rajeevroynxpcom   
Ruetz System Solutions  
GmbH   supportruetz system solutionscom   
Spirent Communications  Dirk Tepelma nn 
Fares Mokrani  
Stephan Pietsch  dirktepelmannspirentcom  
faresmokranispirentcom  
stephanpietschspirentcom  
 
T V NORD  Heiko Ehrich  hehrichtuev nordde  
 
 
16 References  
 
1  OA100BASE T1 Interoperability Test Suite  1v0  
2  IEEE Std 8023bwTM  2015 Amendment 1 Physical Layer Specifications and Management 
Parameters for 100 Mbs Operation over a Single Balanced Twisted Pair Cable 100BASE T1  
3  IEEE 100BASE T1 Physical Media Attachment Test Suite Version 10   
4  IEEE 100BASE T1 Definitions for Communication Channel Version 10   
5  IEEE 100BASE T1 EMC Test Specification for Transceivers Version   1v0 
 
 
2 Test Scope Layer 1 of Automotive Ethernet  
21 Interoperability  Tests  
211  General  
The following test specifications are adapted from 1 to fit the general requirements of an DUT  
212  Link up time  
 based on 100BASET1  IOP21 and  100BASET1  IOP22 of 1  
3 test cycles  
 Power on Link Partner  
 Power on DUT  
 Wake up DUT  
OABRLINKUP01 Link up time  Trigger Power on Link Partner  
Synopsis  Shall ensure that the link is established within a given time without a high time  
variation  
Prerequisites  1 The DUT is connected to a stable power supply  
2 The DUT must be operated in normal mode  
3 The Test System provides special awake conditions for the DUT such as a wakeup 
line or network management CAN messages if necessary  
4 If the DUT contains a switch all links have to be tested separately  
5 The mean start up time of the Link Partner is available   
Test setup  The DUT must be connected to the Link Partner with opposite masterslave 
configuration  The polarity of the communication channel must be correct The power 
supplies are controlled by the test system  

Test system
DUT
ECU Link Partner
CMC ConLow 
Pass 
FilterPHY
Tx
RxPHY
Tx
RxmC
ConPower 
supply
Power 
supplytstoptstarttstart 
Test 
procedure  1 DUT  shall be active and ready to build up link  
Repeat Step 2 to Step 5 n100times  
2 Power on Lin k Partner  t starttPower OnLinkPartner  
3 Polling of Link Partner status register If linkcontrol active link  tstoptActive Link  
4 Calculate the time t up between power on and link up t up tstop  tstart   
5 Power off Link Partner  
End of Repeat  
6 Calculate as follows  
 1
 
1 
  1
1  2
1 
tmin min   
tmax max   
Pass criteria   50 ms  
tmin 10 ms   
 tmax 100  ms   
Notes  This test has to be performed for each port of the DUT  if it has a switch inside  
In dependency of the design of the link partner the Test system may switch also the 
power supply of the C together with the power supply of the PHY  
OABRLINKUP02 Link up time  Trigger Power on DUT  
Synopsis  Shall ensure that the link is established within a given time without a high time 
variation  
Prerequisites  1 The Link Partner  is connected to a stable power supply  
2 The Test System provides spe cial awake conditions for the DUT such as a wakeup 
line or network management CAN messages if necessary  
3 The manufacturer has to provide the mean start up time of the DUT  1 
Test setup  The DUT must be connected to the Link Partner with opposite masterslave 
configuration  The polarity of the communication channel must be correct The power 
supplies are controlled by the test system  
Test system
DUT
ECU Golden Device
CMC ConLow 
Pass 
FilterPHY
Tx
RxmC
ConPower 
supply
Power 
supplytstoptstart
 
Test 
procedure  1 Link Partner shall be active and ready to build up link  
Repeat Step 2 to Step 5 n100times  
2 Power on DUT   tstarttPowerOn DUT 
3 Polling of Link Partner status register If linkcontrol active link  tstoptActiveLink   
4 Calculate the time t up between power on and link up t up tstop  tstart   
5 Power off DUT   
End of Repeat  
6 Calculate as follows  
 1
 
1 
1
1  2
1 
     tmin min   
tmax max   
Pass criteria   50 ms 
 tmin 10 ms 1 
 tmax 100   1 
Notes  This test has to be performed for each port of the DUT  if it has a switch inside  
OABRLINKUP03 Link up time  Trigger Wake up DUT  
Synopsis  Shall ensure that the link is established within a given time without a high time 
variation  
Prerequisites  1 The DUT  and the Link Partner are connected to a stable power supply  
2 The DUT  must be operated in normal mode  
3 Wake up message is necessary The Test System provides special awake conditions 
for the DUT such as a wakeup line or network management CAN messages  
4 The manufacturer has to provide the value I sleep  
5 The manufacturer has to provide the mean wake  up time of the DUT  2 
Test setup  The DUT must be connected to the Link Partner with opposite masterslave 
configuration  The polarity of the communication channel must be correct The power 
supplies are controlled by the test system  
Test system
DUT
ECU Golden Device
CMC ConLow 
Pass 
FilterPHY
Tx
RxPHY
Tx
RxmC
ConPower 
supplytstoptstarttstart
Power 
supplyWakeup 
Trigger
 
Test 
procedure  1 DUT shall be in sleep mode and Link Partner shall be active and ready to build up 
link 
Repeat Step 2 to Step 6 n100times  
2 Turn on Wake up signal for DUT    
3 tWakeUp DUT if IDUT Isleep  tstarttWakeUp DUT    
4 Polling of Link Partner status register If linkcontrol active link  tstoptActive Link  
5 Calculate the time t up between wake up and link up t up tstop  tstart   
6 Switch DUT to sleep mode  
End of Repeat  
7 Calculate as follows  
 1
 
1 
1
1  2
1 
     tmin min   
tmax max   
Pass criteria   50 ms 
 tmin 10 ms 2 
 tmax 100   2 
Notes  This test has to be performed for each port of the DUT  if it has a switch inside  
 
213  Signal Quality  
OABRSIGNAL01 Indicated signal quality for channel with decreasing quality  
based on 100BASET1  IOP24a of 1 
Synopsis  Shall ensure that the DUT s indicated signal quality decreases for a channel with 
decreasing channel quality and that there is coherence between the SQI indicated 
values on the DUT  and the respective artificial noise injection  
Prerequisites  1 The DUT and the Link Partner are connected to a stable power supply  
2 The DUT must be operated in normal mode  
3 The Test system allows varying and determining the quality of the communication 
channel that connects the DUT and Link Partner  
4 DUT must be able to monitor the signal quality indicated by the PHY The 
information of the signal quality can be provided by an  applicative message To be 
able to obtain the DUT  information of the signal quality with the respective 
applied channel degradation step an additional communication channel like CAN 
should be available  
Test setup  See chapter 73  Artificial degradation  of channel quality  of 1 
Test 
procedure   
See Test procedure of 100BASET1IOP24a of 1 
 
Pass criteria   
See Pass criteria of 100BASET1  IOP24a of 1 
Notes  This test has to be performed for each port of the DUT  if it has a switch inside  
 

OABRSIGNAL02 Indicated signal quality for channel with increasing quality  
based on 100BASET1  IOP24b of 1 
Synopsis  Shall ensure that the DUTs indicated signal quality increases for a channel with 
increasing channel quality and that there is coherence between the SQI indicated 
values on the DUT and the respective artificial noise injection  
Prerequisites  1 The DUT and t he Link Partner are connected to a stable power supply  
2 The DUT must be operated in normal mode  
3 The Test system allows varying and determining the quality of the communication 
channel that connects the DUT and Link Partner  
4 DUT must be able to monitor the signal quality indicated by the PHY The 
information of the signal quality can be provided by an applicative message To be 
able to obtain the DUT  information of the signal quality with the respective 
applied channel degrad ation step an additional communication channel like CAN 
should be available  
Test setup   See chapter 73  Artificial degradation of channel quality  of 1 
Test 
procedure  See Test procedure of 100BASET1  IOP24b of 1 
 
Pass criteria  See Pass criteria of 100BASET1  IOP24 b of 1  
 
Notes  This test has to be performed for each port of the DUT  if it has a switch inside  
 

214  Cable  diagnostics  
OABRCABLE01 Cable diagnostics for near and far end open  
based on 100BASET1  IOP32 of 1  
Synopsis  Shall ensure that the DUT s cable diagnostic reliably detects an open of one or both of 
the bus lines The test shall be performed for both a near end open at the connector of 
the DUT and for a far end open at the connector of the Link Partner  
Prerequisites  1 The channel should be terminated properly  
2 The DUT must be capable to start cable diagnostic of its PHY  
3 The DUT must be able to detect any cable errors This means the DUT ha s to 
provide the possibility to trigger the cable diagnostic feature  The result of the 
DUTs  cable d iagnostic can be provided by an applicative Ethernet message an UDS 
communication or another communication channel like CAN  
Test setup  
Test systemTest system
DUT
ECULink PartnerPower 
supply
MDI
MDI1
2
QCCon CMC ConLow 
Pass 
FiltermC PHY
RxTxPHY
RxTxNear Open
QC
1QC
2QC
21QC QC
1QC
2QC
21QC
tt tt tt tt
Test system
DUT
ECULink PartnerPower 
supply
MDI
MDI1
2
QCCon CMC ConLow 
Pass 
FiltermC PHY
RxTxPHY
RxTxFar Open
QC
1QC
2QC
21QC QC
1QC
2QC
21QC
tt tt tt tt
 
Test 
procedure  The following steps shall be applied to test near and far end open cable diagnostics  
1 The DUT cable diagnostic feature is triggered The DUT cable diagnostics has to be 
executed within t error 
2 The test system creates acable error for a defined time t error  
3 After the wait time t the test system reads out all identified cable errors Q C from the 
DUT  
4 Repeat step 1 to 3 for all error combinations alternately MDI andor MDI  are 
open For additional information regarding the test instances please refer to  test 
instances Table of 100BASET1IOP32 of 1  
 
Pass criteria  Each test iteration shall be classified as passed if the DUT reports all expected cable 
errors   
Test 
iterations  5 times  
Notes  For additional information regarding the near and far end open please refer to  Notes 
of 100BASET1  IOP32 of 1  
The results shall be reported for each 100BASE T1 port available in the DUT  
 
OABRCABLE02 Cable diagnostics for near and far end short  
based on 100BASET1  IOP33 of 1  
Synopsis  Shall ensure that the DUTs cable diagnostic reliably detects a short of the bus lines The 
test shall be performed for both a near end short at the connector of the DUT and for a 
far end short a t the connector of the Link Partner  
Prerequisites  1 The channel should be terminated properly  
2 The DUT must be capable to start cable diagnostic of its PHY  
3 The DUT must be able to detect any cable errors This means the DUT ha s to 
provide the possibility to trigger the cable diagnostic feature  The result of the 
DUTs  cable diagnostic can be provided by an applicative Ethernet message an UDS 
communication or another communication channel like CAN  
Test setup  
Test systemTest system
DUT
ECULink Partner
CMC ConLow 
Pass 
FilterPHY
Tx
RxPHY
Tx
RxmC
ConPower 
supply
MDI
MDI
1
QC QC
1QCNear Short
 
 
Test system
DUT
ECULink Partner
CMC ConLow 
Pass 
FilterPHY
Tx
RxPHY
Tx
RxmC
ConPower 
supply
MDI
MDI
1
QC QC
1QCFar Short 
DUT is connected to a properly terminated link partner The bus wires are connected via 
a  1 Ohm resistor during following error situations  
 SHORT between both bus wires far and near end  
 SHORT of  both conductors to ground GND  far and near end  
 SHORT of both conductors to supply line VBAT  far and near end  
 
Please note that in the figures above there is presented only the 1st error situation 
SHORT between both bus wires far and near end The 2nd and 3rd error situation 
where the two wires MDI and MDI  are additionally connected to GND resp VBAT are 
not presented here  
Test 
procedure  The following steps shall be applied  to test near and far end short cable diagnostics  
1 The DUT cable diagnostic feature is triggered The DUT cable diagnostics has to be 
executed within t error 
2 The test system creates a cable error for a defined time t error  
3 After the wait time t the test system requests all identified cable errors Q C from the 
DUT  
4 Repeat step 1 to 3 for all error combinations For additional information regarding 
the test instances please refer to  test instances Table of 100BASET1IOP3 3 of 1   
 
Pass criteria  Each test iteration shall be classified as passed if the DUT reports all expected cable 
errors  
Test 
iterations  5 times  
Notes  For additional information regarding the near and far end short please refer to Notes of 
100BASET1  IOP33 of 1   
The results shall be reported for each 100BASE T1 port available in the DUT  
 
22 PMA  
221  General  
This chapter shall  be used for evaluation of the Physical Layer of a  100BASE T1  interface on DUT  level 
Except otherwise stated the measurements shall be conducted by room temperature RT23 C 5 C  
The tests shall be carried out based on the definitions of the related test specifications  2 3  5 
In the Synopsis the test  Classification indica tes  if the test  must be done or not in term of 
qualification  
Mandatory the test is required and must be evaluated  according to the specified passfail 
criterium  
Optional  the test could be executed but not required for an official qualification pass fail criterium 
Underground of the optional test is that PHY that already passed the whole test of the TC1 or 
parameters doubled checked  do not need to be retested  
222  Transmitter Electrical Specifications  
The following test cases specify the Requirements of the Transmitter Side measurement point MDI  
OABRPMATX01 Check the Transmitter outpout droop  
 Synopsis  Verification of the transmitter output droop  
The test case shall be executed according to the definitions in 3 Test 511  
Test  Classification  Optional  
Prerequisites  1 The DUT is  connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY into Test Mode operation via 
100BASE T1 Standard Ethernet CAN FlexRay eg  
3 DUT  must be able to set its PHY  into Test Mode 1  
Test setup   according to 3 Test 511  
Test 
procedure   according to 3 Test 511  
Pass criteria   according to 3 Test 511  
Test 
iterations  Accumulate min 10 Samples to increase the Accuracy  
Notes  The test shall be executed for each port of the DUT if it has a switch inside  
OABRPMATX02 Check the Transmitter Timing Jitter in MASTER Mode  
Synopsis  Verification of the transmitter timing jitter in MASTER mode  
The test case shall be executed according to the definitions in  3 Test 513 Case 1  
Test  Classification  Mandatory  
Prerequisites  1 The DUT is  connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY into Test Mode operation via 
100BASE T1 Standard Ethernet CAN FlexRay eg  
3 DUT  must be able to set its PHY into  Test Mode 2 
Test setup  according to 3 Test 513 Case 1  
Test 
procedure  according to 3 Test 513 Case 1  
Pass criteria  according to 3 Test 513 Case 1  
Test 
iterations   Accumulate min 10 Samples to increase the Accuracy  
Notes  The test shall be executed for each port of the DUT if it has a switch inside  
OABRPMATX03 Check the Transmit Clock Frequency  
Synopsis  Verification of the transmit clock frequency  
The test case shall be executed according to the definitions in 3 Test 515  
Test  Classification  Mandatory  
Prerequisites  1 The DUT  is connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY  into Test Mode operation via 
100BASE T1 Standard Ethernet  CAN  FlexRay eg   
3 DUT  must be able to set its PHY into  Test Mode 2  
Test setup  according to 3 Test 515  
Test 
procedure  according to 3 Test 515  
Pass criteria  according to 3 Test 515  
Test 
iterations  This tes t shall be conducted at all corner temperatures of the DUT   
eg 40 CRT105 C  Accumulate min 10 Samples to increase the Accuracy  
Notes  As the test is realized on three corner temperatures use a test cable that does not 
influence the test result    
The test shall be executed for each port of the DUT if it has a switch inside  
The corner temperatures of the DUT for the test have to be provided by the DUT 
manufacturer  
 
OABRPMATX04 Check the Transmitter Power Spectral Density PSD  
Synopsis  Verification of the transmitter power spectral density  
The test case shall be executed according to the definitions in 3 Test 514  
Test  Classification   Optional  
Prerequisites  1 The DUT  is connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY  into Test Mode operation via 
100BASE T1 Standard Ethernet  CAN  FlexRay eg   
3 DUT  must be able to set its PHY into  Test Mode 5  
Test setup  according to 3 Test 51 4 
Test 
procedure  according to 3 Test 51 4 
Pass criteria  according to 3 Test 51 4 
Test 
iterations  If performing the test with a DSO the averaging function of the scope shall be set at 
least to 50 times  
Notes  The test shall be executed for each port of the DUT if it has a switch inside  
 
OABRPMATX05 Check  MDI return Loss  
The test case definition is based on chapter 96821  MDI Return Loss  of 2 Test 516 of 3 and the 
definitions in 4  
Synopsis  Shall ensure that the  DUT  respect s the limits for the Return Loss   
Test  Classification  Mandatory  
Prerequisites  1 The DUT is  connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY into SLAVE Mode operation 
via 100BASE T1 Standard Ethernet CAN FlexRay eg  
3 DUT  must be able to set its PHY into Slave Mode operation  
Test setup  The measurement of the Return Loss  shall be  carried out  with  a Network Analyzer  
 
ECU  connector  
cable side  ECU  
OA BR RF 
connector  
SMA  Line 
impedance 
50 Test fixture  
GND  
Connection ECU 
GND pin to ground 
plane of test 
fixture  VBAT  Terminal 
power 
supply  Measurement  
reference plane  
 
To achieve a high degree of reliability of measurement results the use of a specific test 
fixture for the connection to the DUT  connector MDI pins is required A test fixture 
according to the diagram above  and in line with definitions of 4 shall be used The 
ground pins of the DUT  shall be direct ly connected to the ground plane of the test 
fixture If possible the original harness connector shall be used It sha ll be a fixed part of 
the test fixture The calibration reference plane is defined at the beginning of the 
harness c onnector on the test fixture  The following VNA settings shall be used for the 
measurement  
Parameter  Value  
Sweep f Start  300 kHz  
Sweep  fStop  1 GHz  
Sweep type  Logarithmic  
Sweep points  1600  
Output power  minimum 10 dBm  
Measurement bandwidth  100 Hz  
Logic Port Impedance Differential Mode  100   
Logic Port Impedance Common Mode  25   
Data calibration kit VNA  used kit for calibration  
Averaging function  16 times  
Smoothing function  deactivated  
 
 
Test 
procedure  1 The DUT PHY  is in SLAVE  mode operation  
2 Use a test fixture  as described in the test setup  
3 Connect the MDI  via the test fixture to the Network Analyzer  
4 Measure the Value Return Loss S dd11 
5 Analyze the waveform  
6 Report the result with a resolution that shows no limit Violation was detected  
Pass criteria  The test shall be classified as passed if the value of the MDI Return Loss Sdd11 fulfills 
the limit defined in chapter 96821  MDI Return Loss  of 2 
Test 
iterations  Single VNA measurement with enabled averaging function set to at least 16 times  
Notes  The test shall be executed for each port of the DUT  if it has a switch inside  
 
 
 
 
 
 
 
 
 
 
 
 
 
 

OABRPMATX06 Check MDI Mode conversion  
The test case definition is based on chapter 96822  MDI mode conversion loss of 2 Test 517 of 3 
and the definitions in 4  
 
Synopsis  Shall ensure that the  DUT  respect s the limits for the Mode conversion  Shall ensure that  
the DUT  front end respects the appropriate symmetry requirements  
Test  Classification  Mandatory  
Prerequisites  1 The DUT is  connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY into SLAVE Mode operation 
via 100BASE T1 Standard Ethernet CAN FlexRay eg  
3 DUT  must be able to set its PHY into Slave Mode operation  
 
Test setup  The measurement of the Mode Conversion  shall be  carried out  with  a Network 
Analyzer  
 
ECU  connector  
cable side  ECU  
OA BR RF 
connector  
SMA  Line 
impedance 
50 Test fixture  
GND  
Connection ECU 
GND pin to ground 
plane of test 
fixture  VBAT  Terminal 
power 
supply  Measurement  
reference plane  
 
To achieve a high degree of reliability of measurement results the use of a specific test 
fixture for the connection to the DUT  connector MDI pins i s required A test fixture 
according to the diagram above  and in line with definitions of 4 shall be used The 
ground pins of the DUT  shall be direct ly connected to the ground plane of the test 
fixture If possible the original harness connector shall be used It shall be a fixed part of 
the test fixture The calibration reference plane is defined at the beginning of the 
harness connector on the test fix ture Additionally the used test fixture shall fulfill the 
limit for fixture self conversion given below  while the test fixture is not connected to 
the DUT  terminal left open  
The following VNA settings shall should  be used for the measurement  
Parameter   Value  
Sweep f Start  300 kHz  
Sweep f Stop  1 GHz  
Sweep type  Logarithmic  
Sweep points  1600  
Output power  minimum 10 dBm  
Measurement bandwidth  100 Hz  
Logic Port Impedance Differential Mode  100   
Logic Port Impedance Common Mode  25   
Data calibration kit VNA  used kit for calibration  
Averaging function  16 times  
Smoothing function  deactivated  
 
Limit for test fixture self conversion  
 
 
Test 
procedure  1 The DUT PHY is in SLAVE mode operation  
2 Use a test fixture as described in the test setup  
3 Connect the MDI via t he test fixture to the Network Analyzer  
4 Measure the Value Mode Conversion Sdc11  
5 Analyze the waveform  
6 Report the result  with a resolution that shows no limit Violation was detected  
Pass criteria  For evaluation of  MDI mode conversion measurements in the frequency range of 1  MHz 
to 1 GHz are required The following limit shall be fulfilled  
80706050403020100
1 10 100 1000Limit TCL ECU Test fixture
dB
MHzf MHz TCL dB
1 70
20 70
200 50MDI Mode conversion  OA BroadRReach
Item           Requirment for ECU test fixture
Sdc11 Transverse Conversion Loss TCL
Comment 
ECU terminal of test jig is left open for evaluation
 
Test 
iterations  Single VNA measurement with enabled averaging function set to at least 16 times  
Notes  The test shall be executed for each port of the DUT if it has a switch inside  
 
 
 
 
 
 
 
 
 
 
OABRPMATX07 Check MDI Common Mode emission  
The test case shall be executed according to the definitions in  5 Appendix D  informative Test 
method for measuring of MDI RF commo n mode emission of ECUs 
 
80706050403020100
1 10 100 1000 Limit
dB
MHzf MHz TCL dB
1 60
22 60
100 47
200 37MDI Mode conversion  OA BroadRReach
Item           Sdc11 Transverse Conversion Loss TCL

Synopsis   Measurement of the  RF common mode emission at the DUT MDI  
Test  Classification  Optional  
Prerequisites  1 The DUT  is connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY  into Test Mode  operation   
via 100BASE T1 Standard Ethernet  CAN  FlexRay eg   
3 DUT  must be able to set its PHY into Test Mode 5 
Test setup  according to 5 Appendix D  
Test 
procedure  according to 5 Appendix D  
Pass criteria  The test shall be classified as passed if the value of the MDI common mode emission  
fulfills the limit defined in 5 Figure D 2 
Test 
iterations   according to 5 Appendix D see Table D1 Numbers of pass  
Notes  The test shall be executedexecuted for each port of the DUT if it has a switch inside  
The common mode emission  is measured in a frequency range according to the 
definitions in  5 Appendix D  informative  Table D 1 Settings for measurement device 
for RF common mode emission measurement at MDI   The absolute pass criteria  is 
specified in  the Figure D 2 Recommended limit for MDI RF common mode emission  In case 
of violations of the limit for frequenc ies greater  than 70Mhz a warning issue or a 
comment shall be added in the test report   
 
 
 
 
 
OABRPMATX08  Check the  Transmitter Distortion  
Synopsis  Verification of the transmitter distortion  
The test case shall be executed according to the definitions in 3 Test 512  

Test Classification  Optional  
Prerequisites  1 The DUT  is connected to a stable power supply  
2 Use Link Partner or an interface to set the DUTs PHY  into Test Mode operation via 
100BASE T1 Standard Ethernet  CAN  FlexRay eg   
3 DUT  must be able to set its PHY into  Test Mode 4  
 
Test setup  according to 3 Test 51 2 
 
Test 
procedure  according to 3 Test 512  
Pass criteria  according to 3 Test 512  
Test 
iterations  10 times  
Notes  The execution of this test is optional and not mandatory for the Compliance test  
In Case of DUT test the TXTCLK 667Mhz is not accessible Therefore it is necessary to  
recover the TXTCLK form the signal Itself See Appendix 1AInstead of a 100  
differential voltage generator the test case may be executed also with a single ended 
voltage generator and a balun  
 
 

223  Appendix 1A Transmitter  Distortion  Test  
 
Transmitter Distortion test can be executed without TXTCLK  
This part will give an overview of the test setup without TXTCLK access with disturber  
 The DUT  is set in test mode 4  and the disturber signal of 54Vpp 11111Mhz sine wave is injected 
on the  DUT Transmitter  
 The main idea is to recover the TXTCLK clock from the test mode 4 signal and apply the 
recovered timing to determine the right samples needed for 3Test 512  
DUT
ECUOscilloscopeConBIDA
Transmitter 
Disturber 
Fixture
Disturber 
Generator
 
Figure  1 Transmitter Distortion Test  
 
 
 
 
 

3 Test Scope Layer 2 of Automotive Ethernet  
 
31 Overview  Requirements for ECU Automotive Ethernet Switch Testing 
Test Scope  
The tests in this scope validate the behavior of the Automotive Ethernet Switch within the ECU  The 
Automotive Ethernet Switch is an entity that includes the switch silicon hardware and any additional 
hardware firmware and software needed to meets t he requirements for a MAC bridge set forth in 
the IEEE 8021 standards   
Any reference to DUT in this test scope refers to the logical Automotive Ethernet Switch including 
any software or configuration done in an MCU or CPU  The test device shall  include both externally 
connected hardwaresoftware as well as software running on any MCU  CPU on the ECU that is 
connected to the Automotive Ethernet Switch via an Automotive Ethernet Port  
The tests in this test scope are designed to test that the  Automotive Ethernet Switch entity is 
configured  operating correctly as per the ECU configuration but assume that the functionality of the 
switch silicon PHYs or other components has been verified elsewhere  
The test cases are grouped by functional ar eas  Only those functional areas and test cases that are 
applicable to a given ECU need to  be tested  The configuration of each ECU including the switch 
configuration should be used to determine which test cases are applicable  

32 VLAN Testing   
SWITCHV LAN01 VLAN Unicast Traffic Forwarding   
Synopsis  The test shall ensure that the switch is able to forward the traffic for unidentified MACs  
in presence of line rate traffic and drop the traffic received from un configured VLANs  
Prerequisites   The DUT shall be operated in normal mode ie the switch is configured and ready 
to receiveforward Ethernet frames  
 The DUT  shall be capable of responding  to Echo Request message with Echo Reply 
message on some or all of its ports  
Test setup  All available external ports of the DUT are connected to the test system  
 
 
 
Test Input 
Parameters  1 Switch port Valid SourceDestination MAC Addresses are configured in either  of 
these ways  
a read from the ECU Configuration file if configuredavailable  
b MAC Addresses identified for testing purpose  
2  Valid VLANs are read from the ECU Configuration File if available  
Test 
Procedure  
 1 Create the test topology as shown in the Setup  
2 On each test port iterate through each source MAC and destination MAC address 
and transmit untagged Echo Request packets for each combination  
3 Verify that for each valid destination MAC the Echo Request is received from each 
external DUT port except from the port the Echo Request packet has been sent to  
4 Verify that for each vali d combination of destination MAC and VID an Echo Reply 
from each internal port is received from the DUT port the Echo Request packet has been 
sent to  
5 Verify that for each invalid VLAN or each invalid MACVLAN combination no Echo 
Request or Echo Reply  has been received on any port  
6 On each test port iterate through each VLAN ID source MAC and destination MAC 

address and transmit single tagged Echo Request packets for each combination  
7 Verify that for each valid destination MAC the Echo Request  is received from each 
external DUT port except from the port the Echo Request packet has been sent to  
8 Verify that for each valid combination of destination MAC and VID an Echo Reply 
from each internal port is received from the DUT port the Echo Reque st packet has been 
sent to  
9 Verify that for each invalid VLAN or each invalid MACVLAN combination no Echo 
Request or Echo Reply has been received on any port  
10 On each test port iterate through each VLAN ID as outer VLAN tag source MAC 
and dest ination MAC address and transmit double tagged Echo Request packets for 
each combination  
11 Verify that for each valid destination MAC the Echo Request is received from each 
external DUT port except from the port the Echo Request packet has been sent to  
12 Verify that for each valid combination of destination MAC and VID an Echo Reply 
from each internal port is received from the DUT port the Echo Request packet has been 
sent to  
13 Verify that for each invalid VLAN or each invalid MACVLAN combinatio n no Echo 
Request or Echo Reply  has been received on any port  
Pass criteria  The DUT traffic counters match the expected test device traffic counters for each 
combination of VLAN Source MAC and Destination MAC  
The traffic received by the test device is  tagged or untagged in accordance to the VLAN 
configuration provided by the manufacturer  
Test 
iterations  The test shall be repeated for each combination of ingress and egress ports for all the 
combinations of  
 Source MAC Addresses  
 Destination MAC Addresses  
 4094 VLANs exclude reserved VIDs 0 and 4095 per port and  VLAN untagged  
Notes  Test derived from switch requirement VLAN01 and VLAN02 The switch shall support 
VLAN handling according to IEEE 8021Q  The switch shall support at least x different  
VLAN IDs which can be chosen freely from the entire range  of all available 4095 VLAN 
IDs 

SWITCHVLAN02 VLAN Broadcast Traffic Forwarding  
 
Synopsis  The test shall ensure that the switch is able to successfully forward the broadcast traffic 
from all configured VLANs in presence of line rate traffic and drop the traffic received 
from un configured VLANs  
Prerequisites   The DUT shall be operated in normal mode ie the switch is configured and ready 
to receiveforward Ethernet frames  
 The DUT  shall be capable of handling ARP request on some or all of its ports  
Test setup  All available external ports of the DUT are connected to the test system  
 
 
 
Test Input 
Parameters   Source MAC Addresses are configured in either  of these ways  
read from the ECU Configuration file if configuredavailable  
MAC Addresses identified for testing purpose  
 Source IP Addresses are configured in either of these ways  
read from the ECU Configuration file if configuredavailable  
IP Addresses identified for  testing purpose  
 Destination IP  Addresses  are configured in either of these ways  
read from the ECU Configuration file if configuredavailable  
IP Addresses  identified for testing purpose  
 VLANs are read from the ECU Configuration  File if available  
Test 1 Create the test topology as shown in the Setup  


Procedure  
 2 On each test port iterate through each source MAC source IP and destination IP and 
transmit untagged broadcast ARP Request packets for each combination  
3 Verify that for each valid destin ation IP the ARP Request is received from each 
external DUT port except from the port the ARP Request packet has been sent to  
4 Verify that for each valid combination of destination IP and VID an ARP Reply from 
each internal port is received from the D UT port the ARP Request packet has been sent 
to 
5 Verify that for each invalid VLAN no ARP Request or ARP Reply has been received on 
any port  
6 On each test port iterate through each VLAN source MAC source IP and destination 
IP address and transmit  single tagged broadcast ARP Request packets for each 
combination  
7 Verify that for each valid destination MAC the ARP Request is received from each 
external DUT port except from the port the ARP Request packet has been sent to  
8 Verify that for each valid combination of destination MAC and VID an ARP Reply from 
each internal port is received from the DUT port the ARP Request packet has been sent 
to 
9 Verify that for each invalid VLAN no ARP Request or ARP Reply has been received on 
any port  
10 O n each test port iterate through each VLAN as outer VLAN tag source MAC 
source IP and destination IP address and transmit double tagged broadcast ARP Request 
packets for each combination  
11 Verify that for each valid destination MAC the ARP Request  is received from each 
external DUT port except from the port the ARP Request packet has been sent to  
12 Verify that for each valid combination of destination MAC and VID an ARP Reply 
from each internal port is received from the DUT port the ARP Request  packet has been 
sent to  
13 Verify that for each invalid VLAN no ARP Request or ARP Reply  has been received 
on any port  
Pass criteria  The DUT traffic counters match the expected test device traffic counters for each 
combination of VLAN Source MAC Source IP and Destination IP  
The traffic received by the test device is tagged or untagged in accordance to the VLAN 
configuration provided by the manufacturer  
Test 
iterations  The test shall be repeated for each combination of ingress and egress ports f or all the 
combinations of  
 Source MAC Addresses  
 Source IP Addresses  
 Destination IP  Addresses   
 4094 VLANs  exclude reserved VIDs 0 and 4095  per port and  VLAN untagged  

Notes  Test derived from switch requirement VLAN01 and VLAN02 The switch shall support  
VLAN handling according to IEEE 8021Q  The switch shall support at least x different 
VLAN IDs which can be chosen freely from the entire range  of all available 4095 VLAN 
IDs 

SWITCHVLAN03 VLAN Multicast Traffic Forwarding  
Synopsis  The test shall ensure that the switch is able to forward multicast packets based on the 
DUT  configuration  
Prerequisites   The DUT shall be operated in normal mode ie the switch is configured and ready 
to receiveforward Ethernet frames  
 The DUT sh all be capable of forwarding multicast message on all the ports 
belonging to a specific VLAN  
Test setup  All available external ports of the DUT are connected to the test system  
 
 
 
 
  
Test Input 
Parameters   Source MAC Addresses are configured in either of these ways  
o read from the ECU Configuration file if configuredavailable  
o MAC Addresses identified for testing purpose  
 Source IP Addresses are configured in either of these ways  
o read from the ECU Configuration file if configuredavailable  
o IP Addresses  identified for testing purpose  
 Destination Multicast IP Addresses  
o read from the ECU Configuration file if configuredavailable  
o Multicast IP Addresses identified for testing purpose  
 Destination MAC Address is the multicast MAC derived from the multicast 
Destination IP  
 4094 VLANs excluding reserved VLAN IDs 0 and 4095 per port and VLAN 
untagged  
 Frame size  varies with each test cycle  


Bandwidth  varies with each test cycle  
Test 
Procedure  
 1 Create the test topology as shown in the Setup  
2 Configure the test ports acting as Hosts to send join for the destination multicast 
groups  
3 Verify that the test ports acting as Hosts are receiving queries and the test port acting 
as Querier is receiving joinleave messages  
4 On each test port acting as IGMP Querier iterate through each source MAC source IP 
and destination multicast IP destination MAC is derived from destination IP and 
transmit untagged multicast IP traffic for each combination  
5 Verify that for each valid combination of source IP and d estination IP the IP multicast 
traffic is correctly replicated only on those test ports that have receivers for the IGMP 
Group identified by destination multicast IP  
Note The ECU switch can be a purehybrid L2 switch and in that case multicast 
forward ing will be enabled either by IGMP snooping or static multicast forwarding 
entries  
6 On each test port acting as IGMP Querier iterate through each VID source MAC 
source IP and destination multicast IP destination MAC is derived from destination IP 
and transmit single tagged multicast IP traffic for each combination  
7 Verify that for each valid combination of source IP and destination IP the IP multicast 
traffic is correctly replicated only on those test ports that have receivers for the IGMP 
Grou p identified by destination multicast IP  
8 On each test port acting as IGMP Querier iterate through each VID as outer VLAN 
tag source MAC source IP and destination multicast IP destination MAC is derived 
from destination IP and transmit double tagged multicast IP traffic for each 
combination  
9 Verify that for each valid combination of source IP and destination IP the IP multicast 
traffic is correctly replicated only on those test ports that have receivers for the IGMP 
Group identifie d by des tination multicast IP  
Pass criteria  DUT traffic counters match the expected test device traffic counters for each 
combination of VLAN Source MAC Source IP and Destination IP  
The traffic received by the test device is tagged or untagged in accordance to the VLAN 
configuration provided by the manufacturer  
Test 
iterations   Repeat steps 4 through 7 for each frame size and bandwidth that needs to be 
tested  
Notes  Test derived from switch requirement VLAN01 and VLAN02 The switch shall support 
VLAN handling according to IEEE 8021Q  The switch shall support at least x different 
VLAN IDs which can be chosen freely from the entire range  of all available 4095 VLAN 
IDs 
 

 
3.3 General  
8021XEAP oLAuthenticationpositive  
Synopsys  Check if the switch authenticates a port  
Prerequisites  DUT port A is not yet authenticated at the DUT  
Test setup   
Test Input 
Parameters  EAPoL authentication information  
Test 
Procedure  1 From the test station  send traffic to DUT port  A This test traffic shall 
contain frames such that every external and internal DUT port is addressed 
The frames addressed to internal ports shall be frames that will be 
processed and answered by the application behind the according internal 
port  
2 At the  test station check if frames are being forwarded or replied to any 
DUT port  
3 From the test station  send traffic to every external DUT port  except port A 
addressed to port A  
4 At the test station check if frames are being forwarded to DUT port A  
5 Send EAPoL frames with valid authentication information to DUT port A in 
order to authenticate port A at the DUT  
6 From the test station  send traffic to DUT port  A This test traffic shall 
contain frames such that every external and internal DUT port is addresse d 
The frames addressed to internal ports shall be frames that will be 
processed and answered by the application behind the according internal 
port  
7 Check if frames are being forwarded to DUT egress ports  
8 From the test station  send traffic to every exter nal DUT port  except port A 
addressed to port A  
9 At the test station check if frames are being forwarded to DUT port A  
Pass Criteria  2 The test station does not receive from any port any frame sent in step 1 or 
any reply to them  
4 The test station does not receive any frame sent in step 3 from port A  
7 The test station receives every frame that has been addressed to an 
external DUT port in step 4  
7 For every frame addressed to an internal DUT port in step 4 the test station 
receives a reply from port A  
9 The test  station receive s all frame s sent in step 8 from port A  
Reference  
 

Notes  
 
8021XEAP oLAuthenticationnegative  
Synopsys  Check if the switch refuses authentication of a port for invalid EAPoL frames  
Prerequisites  DUT port A is not yet authenticated at the DUT  
Test setup   
Test Input 
Parameters  EAPoL authentication information  
Test 
Procedure  1 From the test station  send traffic to DUT port  A This test traffic shall 
contain frames such that every external and internal DUT port is addressed 
The frames addressed to internal ports shall be frames that will be 
processed and answered by the application behind the according internal 
port  
2 At the  test station check if frames are being forwarded or replied to any 
DUT port  
3 From the test station  send traffic to every external DUT port  except port A 
addressed to port A  
4 At the test station check if frames are being forwarded to DUT port A  
5 Send EAPoL frames with invalid authentication information to DUT port A in 
order to authenticate port A at the DUT  
6 From the test station  send traffic to DUT port  A This test traffic shall 
contain frames such that every external and internal DUT port is addres sed 
The frames addressed to internal ports shall be frames that will be 
processed and answered by the application behind the according internal 
port  
7 Check if frames are being forwarded to DUT egress ports  
8 From the test station  send traffic to every ext ernal DUT port  except port A 
addressed to port A  
9 At the test station check if frames are being forwarded to DUT port A  
Pass Criteria  2 The test station does not receive from any port any frame sent in step 1 or 
any reply to them  
4 The test station does not receive any frame sent in step 3 from port A  
7 The test station does not receive from any port any frame sent in step 1 or 
any reply to them  
9 The test station does not receive any frame sent in step 3 from port A  
Reference  
 
Notes  
 
8021AEMACsecframesforwarded  
Synopsys  Check if the switch performs MACsec encryption correctly  
Prerequisites  
 
Test setup   
Test Input 
Parameters  MACsec configuration settings of the DUT  
Test Procedure  1 Capture traffic on all DUT ports including the host controller port  
2 From the test station send frames to port A addressed to port B  
3 Check if frames are being forwarded to DUT port  B 
4 Check if frames are being forwarded to any other DUT port  
5 Repeat test steps 1 4 for every combination of ports A and B  for which 
MACsec is supported  
Pass Criteria  3 For every frame sent in step 2 t he test station received  a corresponding 
correctly MACsec encrypted frame from DUT port B  
4 No frame sent in step 2 is received by the test station on any other port 
than B ne ither encrypted nor unencrypted  
Reference  
 
 
PortDisabling  
Synopsys  Check if switch has Port Disabling implemented Sending frames on every ingress mirror 
port like specifiedconfigured and check if frames are getting dropped and ignored for 
address learning  
Prerequisites  1 Link up and stable between test station and DUT  ports  
Test setup   
Test Input 
Parameters   
Test Procedure  
1 Receive and monitor all traffic from all port s 
2 From the test station send traffic to a port A addressed to a port B  
3 Observe if test station receives any traffic from port B  
4 Through any vendor specified means disable port B  
5 Observe if link at port B  is still up when the port is disabled  
6 From the test station send traffic to port A addressed to port B  
7 Observe if test station receives any traffic from port B  
8 From the tes t station send traffic to port B addressed to port A and with a 
source MAC address X that has not been learnt on any DUT port yet  
9 Observe if test station receives any traffic from port A  that has been sent 
to port B in step 8  
10 If flooding of frames with unknown destination MAC addresses is enabled 
then f rom the test station send traffic to port A addressed to the MAC 
address X 
11 If flooding of frames with unknown destination MAC addresses  is enabled 
observe if test station  receives on any port any traffic that has been sent 
to port A in step 10  
12 Repeat the test steps 1 11 for all ports that can be disabled as port B  
Pass Criteria  3 Test Station receives traffic from port B  
5 Link at port B is still up  
7 Test Station receives no traffic from port B  
9 Test Station receives no traffic from port A  
11 Test Station receives traffic from all ports  
Reference  
 
Notes  
 
34 Address Learning  
AddressLearningreadARLtable  
Synopsys  Check if switch supports reading the learned ARL table  
Prerequisites  
 
Test setup   
Test Input 
Parameters   
Test 
Procedure  1 Receive and monitor all traffic from all ports  
2 Through any vendor specified means have the DUT delete its Address Table 
entries  
3 Wait 10 seconds  
4 From the test station send at least 2 untagged and at least 2 tagged frames 

to each of the DUT ports each frame with a different valid source MAC 
address and each of the tagged frames with a different valid VLAN tag 
according to the VLAN configuration o f the corresponding port  
5 Through any vendor specified means read the learned MAC address table  
Pass Criteria  5 The read table correctly lists the MAC addresses and the correspon ding 
ports as learned in step 2  
Reference  
 
Notes  The ARL table MAY contain additional addresses that have been learnt from frames that 
have been generated from applications behind the internal ports  
AddressLearningwriteARLtable  
Synopsys  Check if switch supports writing to the learned ARL table  
Prerequisites  
 
Test setup   
Test Input 
Parameters   
Test 
Procedure  1 Receive and monitor all traffic from all ports  
2 Through any vendor specified means have the DUT delete its Address Table 
entries  
3 Through any vendor specified means write to the learned MAC address 
table The writ ten address table should not contain more than the 
maximum number of supported dynamically learnt  entries Furthermore 
the written MAC address table should contain both unicast and multicast 
entries For every DUT port there should be at least one unicast a nd one 
multicast entry addressing to it  
4 Through any vendor specified means read the learned MAC address table  
5 From the test station send untagged frames to every DUT port each frame 
using one of the MAC addresses written to the MAC address table in ste p 2 
as the destination MAC address For every written entry the corresponding 
MAC address should be used at least once  
6 At every DUT port check if the frames have been forwarded correctly  
7 From the test station send tagged frames to each of the remaining DUT 
ports each frame using one of the MAC addresses written to the MAC 
address table in step 2 as the destination MAC address and a valid VLAN tag 
according to the VLAN configuration for the port corresponding to the 
destination address For every written  entry the corresponding MAC 
address should be used at least once  
8 At every DUT port check if the frames have been forwarded correctly  

Pass Criteria  4 The table correctly lists the MAC addresses and the correspon ding ports as 
configured in step 2  
6 The test  station receives all frames exclusively at the correct destination 
ports according to the configuration in step 2  
8 The test station receives all frames exclusively at the correct destination 
ports according to the configuration in step 2  
Reference  
 
Notes  
 
AddressLearningwithuntaggedframesatexternalports  
Synopsys  Check if switch is capable of MAC address learning using untagged frames with unique 
source MAC addresses  
Prerequisites  
 
Test setup   
Test Input 
Parameters   
Test 
Procedure  1 Through  any vendor specified means have the DUT delete its Address 
Table entries  
2 Capture and monitor traffic on every port  
3 From the test station send n  untagged frames to one external DUT port A 
each frame with a diff erent valid source MAC address n shall be  the 
number of ARL entries that are expected to be learnt ie 256 minus the 
number of statically configured ARL entries  
4 From the test station send n untagged frames to each  of the remaining 
external DUT ports each frame using one of the source MAC add resses 
from step 1 as the destination MAC address  
5 At every DUT port check if the frames have been forwarded  
6 From the test station send n tagged frames to each of the remaining 
external DUT ports each frame using one of the source MAC addresses 
from step 1 as the destination MAC address and a valid VLAN tag according 
to the VLAN configuration for port A  
7 At every DUT port check if the frames have been forwarded  
8 Repeat test steps 1 to 7 for every external DUT port as port A  
Pass Criteria  5 At port A all n frames per each  other external port are seen  
5 At the remaining external ports no frame is seen  
7 At port A all n frames per each other external port are seen  
7 At the remaining  external  ports no frame is seen  
 
Reference  
 
Notes  
 
AddressLearningwithtaggedframesatexternalports  
Synopsys  Check if switch is capable of MAC address learning us ing tagged frames with unique source 
MAC addresses  
Prerequisites  
 
Test setup   
Test Input 
Parameters   
Test 
Procedure  1 Through any vendor specified means have the DUT delete its Address Table 
entries  
2 Capture and monitor traffic on every port  
3 From the test station send n tagged frames to one external DUT port A 
each frame with a different valid source MAC address and a valid VLAN tag 
acco rding to the VLAN configuration for port A  n shall be the number of 
ARL entries that are expected to be learnt ie 256 minus the number of 
statically configured ARL entries  
4 From the test station send n untagged frames to each  of the remaining 
external  DUT ports each frame using one of the source MAC addresses 
from step 1 as the destination MAC address  
5 At every DUT port check if the frames have been forwarded  
6 From the test station send n tagged frames to each of the remaining 
external DUT ports each frame using one of the source MAC addresses 
from step 1 as the destination MAC address and the same VLAN tag used as 
in step 3  
7 At every DUT port check if the frames have been forwarded  
8 From the test station send n tagged frames to each of the remai ning 
external DUT ports each frame using one of the source MAC addresses 
from step 1 as the destination MAC address and a valid VLAN tag according 
to the VLAN configuration of port A but different to that VLAN tag used in 
step 3  
9 At every DUT port check  if the frames have been forwarded  
10 Repeat test steps 1 to 7 for every external DUT port as port A  
Pass Criteria  5 At port A all n frames per each  other external port are seen  
5 At the remaining external ports no frame is seen  
7 At port A all n frames per each other external port are seen  
7 At the remaining external ports no frame is seen  
9 At port A all n frames per each other external port are seen  
9 At the remaining external ports no frame is seen  
Reference  
 
Notes  
 
AddressLearning atinternalports  
Synopsys  Check if switch is capable of MAC address learning using untagged frames with unique 
source MAC addresses  
Prerequisites  
 
Test setup   
Test Input 
Parameters   
Test Procedure  1 Through any vendor specified means have the DUT delete its Address 
Table entries  
2 Capture and monitor traffic on every port  
3 From the test station send frames  that will be processed and answered by 
the DUT  to an external DUT port A  addressed to an internal DUT port B 
and with a valid VLAN tag  
4 Wait for t he test station to receive an answer and note the source MAC 
address of the answer  
5 From the test station send frames to an external DUT port A addressed to 
the internal ports MAC address obtained in step 4  
6 At the test station  check if the frames are forwarded  to any external DUT 
port  
7 At the test station check if an answer to the frame sent in step 5 is 
received from port A  
8 Repeat test steps 1 to 7 for every internal DUT port as port B  
Pass Criteria  6 The test station did not receive the frames from any external DUT port  
7 The test station received an answer from port A  
Reference  
 
Notes  
 
35 Filtering of incoming frames  
SWITCH PolicingInformationexternalports  
Synopsys  Check if the switch is able to provide status information regarding the configured ingress 
filters  
Prerequisites  
 
Test setup   
Test Input 
Parameters  Filtering rules of the DUT  
Test Procedure  1 Enable traffic monitoring on all switch ports  
2 Send 100  frames with MAC Destination Address 
L2DestinationAddressDrop from Test Station to a DUT port A  
3 Wait to check if the frames are being forwarded  
4 Read DUT counter indicating number of frames affected by the filtering 
rules  of port A  
Pass Criteria  3 All frames are being blocked no ne of the  frames sent in step 2 were 
captured on any egress port  
4 The counter of ingress filtered  frames at port A are equal to 100  
Reference  
 
Notes   
SWITCH PolicingInformationinternalports  
Synopsys  Check if the switch is able to provide status information regarding the configured ingress 
filters  
Prerequisites  
 
Test setup   
Test Input 
Parameters  Filtering rules of the DUT  
Test 
Procedure  1 Enable traffic monitoring on all switch ports  
2 Wait 60 seconds  
3 Read DUT counter s indicating a number of frames affected by the filtering 
rules  of all internal ports  
Pass Criteria  3 The counter s of ingress filtered frames at internal ports are equal to 0  
If a counter of ingress filtered frames at any internal port is not 0 the test 
result shall be reported as Warning instead of Fail  
Reference  
 
Notes  In general traffic generated by an application behind internal ports might influence several 
counters including the counter of frames affected by the filtering rules  at an internal ports 
ingress An application is however not expecte d to send frames that are filtered already at 
the ingress but it is not impossible either  
It is out of the scope of this test to do further investigations in case that a counter of filtered 
frames for any internal port has a non zero value as  most lik ely  this would be an issue 
caused by the application itself which unnecessarily or unintentionally sends frames that 
will be filtered at ingress  
This test is settled in the section  Filtering of incoming frames  but not passing the Pass 
Criteria does n ot clearly indicate a failure of the filtering mechanism Thus in such a case 
the test result shall be reported as Warning instead of Fail  
36 Referenced TC 11 Tests  
Since the TC11 Test specification does define a set of test cases for switch silicon i t is useful to reference 
these testcases when useful to do a retest for switches which are implemented in ECUs  
One of the main differences of testing switch chips and already implemented switch chips  as done in 
ECUs is that the ECU has a defined confi guration In the most use cases the configuration is fixed and a 
modification of the configuration shoud be not possible at all due to secutirty issues  
Therefore there is a subset of TC11 testcases which are should be considered again when ECUs are 
tested It is obvious that the verification of a correct implementaion of a configuration adds value to the 
project  
General Requirements GEN  
Test ID  Test Name  
 OperateasStoreandForwardSwitch  
 Non blockingarchitecture  
 BoottimewithPHYs  
 8021XDropFramesWithUnknownSourceAddress  
 8021XForwardFramesWithUnknownSourceAddressToHost  
 PortMirroring  
 PortDisabling  
 SupportJumboFrames  
 GeneralDisableJumboFrames  
 ReadOutDeviceID  
 
  
Address Resolution ADDR  
Test 
ID Test Name  
 AddressLearningageing  
 AddressLearningageingtime  
 AddressLearningdisablelearningonspecificport  
 AddressLearningbehaviouruponunknowndestinationaddress  
 AddressLearningbehaviouruponMAAPdestinationaddress  
 AddressLearningbehaviourupon0180C2destinationaddress  
 AddressLearningARLtableoverflowstatusinfo  
 AddressLearningforwardtospecificport  
 AddressLearningoneshotmode  
 AddressLearninglimitednumberoflearntaddressesperport  
 AddressLearning1024addresseswithouthashconflictwithuntaggedframes  
 AddressLearning1024addresseswithouthashconflictwithtaggedframes  
 
Time Synchronization TIME  
Test ID  Test Name  
 PTP1StepClock  
 PTP2StepClock  
 PTP1StepClockSpecificMACHeader  
 PTP1and2StepClocksimultaneously  
 
  
Quality of Service and AudioVideo Bridging 
QOS  
Test ID  Test Name  
 CheckSupportPriorityBasedQualityOfService  
 SupportofWRR  
 MappingPriorityInformationBasedOn8021Q  
 OverwritePriorityOfFrameATIngressPort  
 FreelyMappablePrioritiesToInternalQueues1  
 FreelyMappablePrioritiesToInternalQueues2  
 FreelyMappableToEgressperPort  
 SupportOf8ShapersPerEgressPort  
 SupportOfLeakyBucketAlgorithm  
 CreditBasedShaper1  
 CreditBasedShaper2  
 IndividualDeactivationOfShaper  
 
Filtering of Incoming Frames FILT  
Test ID  Test Name  
 RatelimitationingressVIDbased  
 Ratelimitationingressprioritybased  
 BroadcastStormProtection  
 MulticastStormProtection  
 8PoliciesPerPort  
 FilteringforL2FieldsDA  
 FilteringforL2FieldsSA  
 FilteringforL2FieldsEtherType  
 FilteringforL3AddressUntaggedIPv4  
 FilteringforL3AddressEtherTypeIPv4  
 FilteringforL3AddressTaggedIPv4  
 FilteringforL4AddressIpv4HeaderVariableLength  
 FilteringforL4AddressUDPPorts  
 FilteringforL4AddressTCPPorts  
 
Diagnostics DIAG  
Test ID  Test Name  
 PortBasedCounters  
 PhyCountersandStatus  
 MIBsupportPerfomanceCounters  
 
4 Test Scope TCPIP Protocol Family  
41 Prerequisites  
To enable test depth for testing TCPIP stack features inECU implementations it is necessary to 
introduce an Upper Tester interface between Tester and TCPIP stack This interface has to be 
implemented in the ECU and defines routines for configuration tri ggering or result evaluation  
An example for a Upper Tester Implementation is following specification by AUTOSAR  
 Specification of Testability Protocol and Service  Primitives AUTOSAR TC Release 120  
42 Address Resolution Protocol ARP  
421  General  
Reference d specification  
The scope of this chapter is to specify test cases for Address Resolution Protocol from the following 
standards  
 RFC826  
Simulated topologies  
 
Required topology related configuration  
Tester configuration required for the tests in the following sections pertaining to ARP tests  
 
 Correct DUT MAC Address for DUT interface connected to TESTER interface  
 All test cases that use IP interface need to do ARP Packet exchange This ARP packet exchange is 
performed after the DUT interface is configured with IP Address Using this packet exchange  DIface 0 TIface 0 
 
ECU 
 

TESTER automatically learns the MAC address of DUT The learned MAC  address is then used in 
the test cases to send packets to DUT  
 All the test cases in this suite require DUT to be configured with only one IP interface  

Coverage  
  Specification Document  Section   
Number  Test Category           Test Numbers       
1 RF C 826An Ethernet Address 
Resolution Protocol Packet 
Generation  4241  Packet Generation  ARP01 to 
ARP15  
1 RFC 826An Ethernet Address 
Resolution Protocol Packet 
Reception  4242  Packet Reception      ARP16 to 
ARP49  
 
 
422  Parameters used in the tests  
User defined configuration param eters for IUT  
Parameter used in test  Description  
DYNAMIC ARPCACHE 
TIMEOUT  This is the time for which a dynamic entry will be present in the ARP 
Cache This timeout is only effective if it has been configured using the 
script named ARP DUT Configure ARP Dynamic Cache Entry Timeout 
Command  
DYNAMIC ARPCACHE 
TIMEOUTARP 
TOLERANCE TIME  This is the time calculated by adding DYNAMIC ARPCACHE TIMEOUT  
and ARP TOLERANCE TIME  
 
User defined configuration parameters for TESTER  
Parameter used in test  Description  
HOST 1 This denotes ARP Host simulated in the tester  
HOST 1IP This denotes IP address of Host 1 
DIface 0 This denotes the DUT interface to which TESTER host1 is 
connected  
DIface 0IP This denotes IP address of DIface 0 
ParamListenTime  This is the maximum time interval for which TESTER waits 
for a packet for cases when a certain event has been 
triggered on the DUT either by some protocol timer or 
using some external mechanism  
MAC ADDR1  The first unused MAC address that the TESTER can use for 
emulating specific topologies needed in test  

MAC ADDR2  The second unused MAC address that the TESTER can use 
for emulating specific topologies needed in test This is 
auto generated  as consecutive to MAC ADDR1  
MAC ADDR3  The third unused MAC address that the TESTER can use for 
emulating specific topologies needed in test This is auto 
generated  as consecutive to MAC ADDR 2 
DIFACEOMACADDR  This is the MAC address of DIface 0 of DUT  
ARBITMACADDR  This indicates an arbitrary MAC address This value is equal 
to 123456789000  
ARPHARDWARETYPEUNKNOWN  This indicates an unknownwrong value of hardware type 
Resolution Packet  
UNKNOWNHWADDRLEN  This indicates an unknownwrong length of hardware 
address  
ARPPROTOCOLUNKNOWN  This indicates an unknownwrong value of protocol type  
UNKNOWNPROTCOLADDRLEN  This indicates an unknownwrong length of protocol 
address  
ARP TOLERANCE TIME  This value depicts the time  variance associated to any 
wait event  
ETHERNETADDRLEN  The length in bytes of the Ethernet MAC Address has the 
value 6  
423  Terminology used in Test Procedure  
 
Name  Description  
DUTCONFIGURE  This entry causes DUT to configureexecute various 
commands for clearing cache adding static address send 
Echo Request etc  
TESTER  Entity which is responsible for validating the Device 
under Test DUT  
DUT  Device under Test  
CLEANUP  This is a command which causes DUT to remove the 
static entry from its ARP cach e 

424  Test Cases ARP  
4241  Packet Generation  
ARP01 Static ARP  entry no ARP request  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address  
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet Note Here DUT is configured 
to add a static entry HOST 1IP MAC ADDR1 in its ARP cache TE STER then causes DUT to 
send an ICMP Echo Request and expects that DUT will NOT send any ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to add a static entry in its ARP Cache with  
         IP Address of H OST1IP 
         Ethernet Source  Address of MAC ADDR1  
3 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
4 TE STER HOST 1 Listens  up to  ParamListenTime on DIface 0 
5 DUT Does not send ARP Request  
6 CLEANUP Configure DUT to delete static entry in its ARP Cache with  
         IP Address of HOST 1IP 
         Ethernet Source  Address of MAC ADDR1  
Pass Criteria  5 DUT Does not send ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
 
100 ARP02 Static ARP entry  ARP entry used  
Synopsis  The Address Resolution module tries to find the  protocol type target protocol address 
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet Note Here DUT is configured 
to add a static entry HOS T1IP MAC ADDR1 in its ARP cache TESTER then causes DUT to 
send an ICMP Echo Request and expects that DUT will send an ICMP Echo Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check secti on general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to add a static entry in its ARP Cache with  
         IP Address of HOST 1IP 
         Ethernet Source  Address of MAC ADDR1  
3 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
4 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
5 DUT Sends ICMP Echo Request  
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
6 CLEANUP Configure DUT to delete static entry in its ARP Cache with  
         IP Address of HOST 1IP 
         Ethernet Source  Address of MAC ADDR1  
Pass Criteria  5 DUT Sends ICMP Echo Request  
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
 
ARP03 ARP entry learned on ARP request no ARP request  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address 
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet  
Note  The objective of the test case is to validate the ARP Learning mechanism on ARP 
requests Here TESTER sends an ARP Request to DUT so that an entry HOST 1IP MAC 
ADDR1 gets added in DUTs ARP cache TESTER then causes DUT to send an ICMP Echo 
Request a nd expects that DUT will NOT send any ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configur e DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to DIface 0IP 
         Ethernet Source Address set to MAC ADDR1  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send  a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
6 DUT Does not send ARP Request  
Pass Criteria  6 DUT Does not send ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP04 ARP entry learned on ARP request ARP entry used  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address 
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet Note Here TESTER sends an 
ARP Request to DUT so that an entry HOST 1IP MAC ADDR1 gets added in DUTs ARP 
cache TESTER then causes DUT to send an ICMP Echo Request and expects that DUT will 
send an ICMP Echo Request  
Prerequisites  Check section prerequis ites 
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         contain ing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to DIface 0IP 
         Ethernet Source Address set to  MAC ADDR1  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIf ace0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
6 DUT Sends ICMP Echo Request  
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set  to MAC ADDR1  
Pass Criteria  6 DUT Sends ICMP Echo Request  
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP05 ARP entry learned on gratuitous ARP response no ARP request  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address  
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet Note Here TESTER sends an 
ARP Response to DUT so that an entry HOST 1IP MAC ADDR1 gets ad ded in DUTs ARP 
cache TESTER then causes DUT to send an ICMP Echo Request and expects that DUT will 
NOT send any ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through D Iface 0 
         containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to DIface 0IP 
         Ethernet Source Address set to MAC ADDR1  
         Ethernet Destination Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        ARP cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
6 DUT Does not send ARP Request  
Pass Criteria  6 DUT Does not send ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Proto col section Packet Generation MUST  
Notes    
ARP06 ARP entry learned on gratuitous ARP response ARP entry used  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address  
pair in a table If it finds the pair it gives the corresponding 48bit Ethernet address back to 
the caller hardware driver which then transmits the packet Note Here TESTER sends an 
ARP Response to DUT so that an entry HOST 1IP MAC ADDR1 gets ad ded in DUTs arp 
cache TESTER then causes DUT to send an ICMP Echo Request and expects that DUT will 
send an ICMP Echo Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through  DIface 0 
         containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to DIface 0IP 
         Ethernet Source Address set to MAC ADDR1  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for th e 
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
6 DUT Sends ICMP Echo Request  
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
Pass Criteria  6 DUT Sends ICMP Echo Request  
         Destinati on IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP07 ARP request sending ARP request send on missing entry  
Synopsis  The Address Resolution module tries to find the protocol type target protocol address 
pair in a table If it does not it probably informs the caller that it is throwing the packet 
away on the assumption the packet will be retransmitted  by a higher network layer and 
generates an Ethernet packet with a type field of ethertypeADDRESSRESOLUTION  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         for Packet with Ethernet Type set to Address Resolution  
4 DUT Sends ARP Request  
Pass Criteria  4 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes  
 

  
    
  106 ARP08 ARP request sending Hardware Type check  
Synopsis  The Address Resolution module sets the arhrd field to areshrdEthernet   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER  HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Hardware Type is set to ARPHARDWAREETHERNET  
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify th at received ARP Request contains  
 Hardware Type is set to ARPHARDWAREETHERNET  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    

  
    
  107 ARP09 ARP request sending Protocol Type check  
Synopsis  The Address Resolution module sets the arpro to the protocol type that is being 
resolved  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Co nfigure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIfac e0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Protocol Type is set to ARPPROTOCOLI P 
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Protocol Type is set to ARPPROTOCOLIP  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    

  
    
  108 ARP10 ARP request sending Hardware Address Length check  
Synopsis  The Address Resolution module sets the arhln to 6 the number of bytes in a 48bit 
Ethernet address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Mes sage  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that rece ived ARP Request contains  
         Hardware Address Length is set to ETHERNETADDRLEN  
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Hardware Address Length is set to ETHERNETADDRLEN  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    

  
    
  109 ARP11 ARP request sending Protocol Address Length check  
Synopsis  The Address Resolution module sets the arpln to the length of an address in that 
protocol  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listen s up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Protocol Address Length is set to IPADDRLEN  
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Protocol Address Length is set to IPADDRLEN  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    
 

  
    
  110 ARP12 ARP request sending Operation Code check  
Synopsis  The Address Resolutio n module sets the arop to aresopREQUEST  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Operation code is set to OPERATIONREQUEST  
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Operation code is set to OPERATIONREQUEST  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    
 

  
    
  111 ARP13 ARP request sending ARP Sender Hardware Address check  
Synopsis  The Address Resolution module sets the arsha with the 48bit ethernet address of 
itself  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         ARP Sender Hardware Address is set to DIFACE 0MAC ADDR  
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 ARP Sender Hardware Address is set to DIFACE 0MAC ADDR  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    

  
    
  112 ARP14 ARP request sending Source IP Address check  
Synopsis  The Address Resolution module sets the arspa with the protocol address of itself  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CON FIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT  Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Source IP Address is set to DIface 0IP 
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Source IP Address is set to DIfa ce0IP 
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation 
MUST  
Notes    
 

  
    
  113 ARP15 ARP request sending Destination IP Address correct  
Synopsis  The Address Resolution module sets the artpa with the protocol address of the 
machine that is trying to be accessed  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
         Destinat ion IP Address is set to HOST 1IP 
Pass Criteria  4 DUT Sends ARP Request  
5 TESTER Verify that received ARP Request contains  
 Destination IP Address is set to HOST 1IP 
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet  Generation 
MUST  
Notes    
4242  Packet Reception  
ARP16 ARP request reception ARP Target Hardware Address  000000000000  
Synopsis  The Address Resolution module does not set artha to anything in particular because it is 
this value that it is trying to determine Note In this test TESTER sends an ARP Request 
with ARP Target Hardware Address set to all zeroes and expects that DUT will send an ARP 
Response after receiving the ARP Request  

  
    
  114 Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to  DIface 0IP 
         ARP Target Hardware Address set to all zeroes  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
Pass Criteria  3 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP17 ARP request reception ARP Target Hardware Address  ffffffffffffff  
Synopsis  The Address Resolution module does not set artha to anything in particular because it is 
this v alue that it is trying to determine Note In this test TESTER sends an ARP Request 
with ARP Target Hardware Address set to Ethernet Broadcast Address and expects that 
DUT will send an ARP Response after receiving the ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  

  
    
  115 Pass Criteria  3 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP18 ARP request reception ARP Target Hardware Address  random  
Synopsis  The Address Resolution module does not set artha to anything in particu lar because it is 
this value that it is trying to determine Note In this test TESTER sends an ARP Request 
with ARP Target Hardware Address set to an arbitrary value and expects that DUT will 
send an ARP Response after receiving the ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT throug h DIface 0 
        containing  
         Sender IP Address s et to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Target Hardware Address set to ARBITMACADDR  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
Pass Criteria  3 DUT Sends ARP R esponse  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP19 ARP request reception ARP Target Hardware Address  Address of DUT  
Synopsis  The Address Resolution module does not set artha to anything in particular because it is 
this value that it is trying to determine Note In this test TESTER sends an ARP Request 
with ARP Target Hardware Address set to DUT MAC Address Ethernet Destinat ion Address 
set to Ethernet Broadcast Address and expects that DUT will send an ARP Response after 

  
    
  116 receiving the ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Target Hardware Address set to DIFACE 0MAC ADDR  
         Ethernet Destination Address set to  
           ETHERNETBROADCASTADDR  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
Pass Criteria  3 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Generation MUST  
Notes    
ARP20 ARP request reception Hardware Type correct  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolutio n module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Do I have the hardware type in arhrd NoteIn this test TESTER is configuring DUT 
to clear its ARP Cache  entries TESTER then sends an ARP Request with hardware type field 
set to Ethernet All the other fields in the ARP Request Packet are set to their correct values 
It then expects that DUT should send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  

  
    
  117 Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Addre ss HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Type set to ARPHARDWAREETHERNET  
         Ethernet Source Address set to MAC ADDR1  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
Pass Criteria  4 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP21 ARP request reception  Hardware Type wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Do I have the hardware type in arhrd NoteHere TESTER is sending correct values 
for all the fields in the ARP Request packet except hardware type field and also TESTER is 
configuring DUT to clear its ARP Cache entriesThe hardware type field  is set to an unknown 
hardware type value and TESTER expects that DUT will not send any ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Type set to ARPHARDWARETYPEUNKNOWN  

  
    
  118 3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Does not send ARP Response  
Pass Criteria  4 DUT Does not sen d ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP22 ARP response reception Hardware Type wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Do I have the hardware type in arhrd NoteIn this test TESTER is configuring DUT 
to clear its ARP Cache entriesTESTER then sends an ARP Response with hardware type field 
set to an unknown hardware type value All the other fields in the ARP  Response Packet are 
set to their correct values TESTER then causes DUT to send an ICMP Echo Request and 
expects that DUT will send an ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARPTOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Respon se to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Type set to ARPHARDWARETYPEUNKNOWN  
         ARP Sender Hardware Address set to MAC ADD R1 
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 

  
    
  119          Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
6 DUT Send s ARP Request  
Pass Criteria  6 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP23 ARP request reception Hardware Address Length correct   
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the packet 
optionally check the hardware length arhln NoteIn this test TESTER is configuring DUT 
to clear its ARP Cache entries TESTER then sends an ARP Request with hardware address 
length field set to Ethernet Address Length All the other fields i n the ARP Request Packet 
are set to their correct values It then expects that DUT should send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedur e 1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Addres s set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Address Length set to ETHERNETADDRLEN  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
Pass Criteria  4 DUT Sends A RP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  

  
    
  120 Notes    
ARP24 ARP request reception Hardware Address Length wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the packet 
optionally check the hardware length arhln NoteIn this test TESTER is configuring DUT 
to clear its ARP Cache entries TESTER then sends an ARP Request with hardware address 
length field set to unknown hardware address length All the other fields in the ARP Request 
Packet are set to their correct values It then expects that DUT should NOT send an ARP 
Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Address Length set to UNKNOWNHWADDRLEN  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Does not send ARP Response  
Pass Cri teria  4 DUT Does not send ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  
Notes    
ARP25 ARP request response Hardware Address Length wrong   
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 

  
    
  121 followingNegative conditionals indicate an end of processing and a discarding of the packet 
optionally check the hardware length arhln NoteIn this test TESTER is configuring DUT 
to clear its ARP Cache entriesTESTER then sends an ARP Response with hardware address 
length field set to an unknown hardware address length All the oth er fields in the ARP 
Response Packet are set to their correct values TESTER then causes DUT to send an ICMP 
Echo Request and expects that DUT will send an ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER   HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Hardware Address Length set to UNKNOWNHWADDRLEN  
         ARP Sender Hard ware Address set to MAC ADDR1  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set  to HOST 1IP 
6 DUT Sends ARP Request  
Pass Criteria  6 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  
Notes    

  
    
  122 ARP26 ARP request reception Protocol Type correct   
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Do I speak the protocol in arpro NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Request with protocol type field set 
to type IP All the other fields in the ARP Request Packet are set to their correct values It 
then expects that DUT should send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to  clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Targe t IP Address set to DIface 0IP 
         Protocol Type set to ARPPROTOCOLIP  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
Pass Criteria  4 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP27 ARP request reception Protocol Type wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution m odule which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Do I speak the protocol in arpro NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entrie s TESTER then sends an ARP Request with protocol type field set 
to an unknown protocol type value All the other fields in the ARP Request Packet are set to 

  
    
  123 their correct values It then expects that DUT should NOT send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Add ress HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Protocol Type set to ARPPROTOCOLUNKNOWN  
3 TEST ER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Does not send ARP Response  
Pass Criteria  4 DUT Does not send ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP28 ARP response reception Protocol Type wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative c onditionals indicate an end of processing and a discarding of the 
packet Do I speak the protocol in arpro NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entriesTESTER then sends an ARP Response with protocol type field set 
to Unkno wn Protocol value All the other fields in the ARP Response Packet are set to their 
correct values TESTER then causes DUT to send an ICMP Echo Request and expects that 
DUT will send an ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input MAC ADDR1  

  
    
  124 Parameters  ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address H OST1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Protocol Type set to ARPPROTOCOLUNKNOWN  
         ARP Sender Hardware Address set to MAC ADDR1  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
4 DUT CONFIGURE Configur e DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
6 DUT Sends ARP Request  
Pass Criteria  6 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP29 ARP request reception Protocol Address Length correct  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of proces sing and a discarding of the packet 
optionally check the protocol length arpln NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Request with protocol length field 
set to IP Address Length All the oth er fields in the ARP Request Packet are set to their 
correct values It then expects that DUT should send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  

  
    
  125 Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Protocol Address Length set to IPADDRLEN  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
Pass Criteria  4 DUT Se nds ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  
Notes    
ARP30 ARP request reception Protocol Address Length wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the packet 
optionally check the protocol length arpln NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Request with protocol address length 
field set to an unknown protocol address length All the oth er fields in the ARP Request 
Packet are set to their correct values It then expects that DUT should NOT send an ARP 
Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  

  
    
  126          Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Protocol Address Length set to UNKNOWNPROTOCOLADDRLEN  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Does not send ARP Response  
Pass Criteria  4 DUT Does not send ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  
Notes    
ARP31 ARP response reception Protocol Address Length wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the packet 
optionally check the protocol length arpln NoteIn this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Response with protocol length field 
set to an unknown protocol address length All the other fiel ds in the ARP Response Packet 
are set to their correct values TESTER then causes DUT to send an ICMP Echo Request and 
expects that DUT will send an ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Send s ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         Protocol Address Length set to UNKNOWNPROTOCOLADDRLEN  
         ARP Sender Hardware A ddress set to MAC ADDR1  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  

  
    
  127 4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to H OST1IP 
6 DUT Sends ARP Request  
Pass Criteria  6 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MAY  
Notes    
ARP32 ARP entry update RequestRequest  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of  the 
packet Mergeflag  false If the pair protocol type sender protocol address is already in 
my translation table update the ARP sender hardware address field of the entry with the 
new information in the packet and set Mergeflag to true Note Her e TESTER sends an 
ARP Request to DUT so that an entry gets added to the dut arp cache TESTER then sends 
another ARP Request with a different Ethernet source address to DUT to check if the 
existing entry gets updated  
Prerequisites  Check section prerequ isites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
MAC ADDR2  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hardware Add ress set to MAC ADDR1  

  
    
  128 3 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hardware Address set to MAC ADDR2  
         Ethernet Source Address set to MAC ADDR2  
4 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
5 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIfac e0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
6 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destin ation Address set to MAC ADDR2  
7 DUT Sends ICMP Echo Request  
Pass Criteria  7 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP33 ARP entry update ResponseResponse  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of  the 
packet Mergeflag  false If the pair protocol type sender protocol address is already in 
my translation table update the ARP sender hardware address field of the entry with the 
new information in the packet and set Mergeflag to true Note Her e TESTER sends an 
ARP Response to DUT so that an entry gets added to the dut arp cache TESTER then sends 
another ARP Response with a different Ethernet source address to DUT to check if the 
existing entry gets updated  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
MAC ADDR2  
ARP TOLERANCE TIME  

  
    
  129 Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hard ware Address set to MAC ADDR1  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP A ddress set to DIface 0IP 
         ARP Sender Hardware Address set to MAC ADDR2  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
4 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to g et refreshed  
5 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
6 TESTER HOST 1 Listens  up to  ParamListenTime  on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR2  
7 DUT Sends ICMP Echo Request  
Pass Criteria  7 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution  Protocol section Packet Reception MUST  
Notes    
ARP34 ARP entry update RequestResponse  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through a n algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of the 
packet Mergeflag  false If the pair protocol type sender protocol address is already in 
my translation table update the ARP sender hard ware address field of the entry with the 
new information in the packet and set Mergeflag to true Note Here TESTER sends an 
ARP Request to DUT so that an entry gets added to the dut arp cache TESTER then sends an 
ARP Response with a different Ethernet source address to DUT to check if the existing entry 

  
    
  130 gets updated  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
MAC ADDR2  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender  IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hardware Address set to MAC ADDR1  
3 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hardware Address set to MAC ADDR2  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
4 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds f or the  
        arp cache of DUT to get refreshed  
5 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
6 TESTER  HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR2  
7 DUT Sends ICMP Echo Request  
Pass Criteria  7 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    

  
    
  131 ARP35 ARP entry update ResponseRequest  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of  the 
packet Mergeflag  false If the pair protocol type sender protocol address is already in 
my translation table update the ARP sender hardware address field of the entry with the 
new information in the packet and set Mergeflag to true Note Her e TESTER sends an 
ARP Response to DUT so that an entry gets added to the dut arp cache TESTER then sends 
an ARP Request with a different Ethernet source address to DUT to check if the existing 
entry gets updated  
Prerequisites  Check section prerequisit es 
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
MAC ADDR2  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
         ARP Sender Hardware Addres s set to MAC ADDR1  
         ARP Target Hardware Address set to ETHERNETBROADCASTADDR  
3 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set t o DIface 0IP 
         ARP Sender Hardware Address set to MAC ADDR2  
4 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
5 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
6 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR2  
7 DUT Sends ICMP Echo Request  

  
    
  132 Pass Criteria  7 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP36 ARP request reception Target Protocol Address correct  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Am I the target protocol address Note In this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Request with target protocol address 
field set to DIface 0IP All the other fields in the ARP Request Pa cket are set to their 
correct values It then expects that DUT should send an ARP Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender IP Address set to HOST 1IP 
         Target IP Address set to DIface 0IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
Pass Criteria  4 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section  Packet Reception MUST  
Notes    

  
    
  133 ARP37 ARP request reception Target Protocol Address wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an  algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Am I the target protocol address Note In this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP  Request with target protocol address 
field set to an IP First unused address value All the other fields in the ARP Request Packet 
are set to their correct values It then expects that DUT should NOT send an ARP Response  
Prerequisites  Check section pr erequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to  
           IPFIRST UNUSED ADDR INTERFACE 1 
3 TESTER HOST 1 Listens  up to  ParamLi stenTime on DIface 0 
4 DUT Does not send ARP Response  
Pass Criteria  4 DUT Does not send ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP38 ARP response reception Target P rotocol Address wrong  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
followingNegative conditionals indicate an end of processing and a discarding of the 
packet Am I the target protocol address Note In this test TESTER is configuring DUT to 
clear its ARP Cache entries TESTER then sends an ARP Response with target protocol 
address field set to IP First unused address value All the other fields in t he ARP Response 

  
    
  134 Packet are set to their correct values TESTER then causes DUT to send an ICMP Echo 
Request and expects that DUT will send an ARP Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER  HOST 1 Sends ARP Response to DUT through  DIface 0 
         containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to  
           IPFIRST UNUSED ADDR INTERFACE 1 
         Ethernet Source Address set to MAC ADDR1  
         Ethernet Destination Address set to ETHERNETBROADCASTADDR  
3 TESTER HOST 1 Waits up to  1 seconds for the ARP cache of DUT  
        to get refreshed  
4 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to  DIface 0IP 
         Destination IP Address set to HOST 1IP 
5 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
6 DUT Sends ARP Request  
Pass Criteria  6 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP39 ARP learning request answers request  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet t o the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of the 
packet If Mergeflag is false add the triplet protocol type sender protocol address 
sender hardware address to the translation table Note In this test TESTER sends an ARP 

  
    
  135 Request with sender protocol address sender hardware address fields set to HOST 1IP 
MAC ADDR2 TESTER then causes DUT to send an ICMP Echo Request and expects that 
DUT will send an ICMP Echo Request with Ethernet Destination Address set to MAC 
ADDR2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR2  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR2  
6 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
7 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
8 TESTER HOST 1 Listens  up to ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR2  
9 DUT Sends ICMP Echo Request  
Pass Criteria  4 DUT Sends ARP Request  
9 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    

  
    
  136 ARP40 ARP learning response answers request  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals indicate an end of processing and a discarding of  the 
packet If Mergeflag is false add the triplet protocol type sender protocol address 
sender hardware address to the translation table NoteIn this test TESTER sends an ARP 
Response with sender protocol address sender hardware address fields set to HOST 1
IP MAC ADDR3 TESTER then causes DUT to send an ICMP Echo Request and expects that 
DUT will send an ICMP Echo Request with Ethernet Destination Address set to MAC 
ADDR3  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR3  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to send a UDP Request Message  from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Request  
5 TESTER  HOST 1 Sends ARP Response to DUT through DIface 0 
         containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to  MAC ADDR3  
         ARP Target  Hardware Address set to ETHERNETBROADCASTADDR  
6 TESTER HOST 1 Waits up to  ARP TOLERANCE TIME seconds for the  
        arp cache of DUT to get refreshed  
7 DUT CONFIGURE Configure DUT to send a UDP Request Messa ge from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
8 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR3  
9 DUT Sends ICMP Echo Request  

  
    
  137 Pass Criteria  4 DUT Sends ARP Request  
9 DUT Sends ICMP Echo Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP41 ARP responding response answers request  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following I s the opcode aresopREQUEST YesSet the arop field to aresopREPLY 
Note In this test TESTER sends an ARP Request All other fields in the ARP Request 
message are set correctly TESTER then expects that DUT will send an ARP Packet with 
Operation code field set to Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
         for ARP Packet with Operation Code set to Response  
3 DUT Sends ARP Response  
Pass Criteria  3 DUT Sends ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    

  
    
  138 ARP42 ARP responding no response to response  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Negative conditionals ind icate an end of processing and a discarding of the 
packet Is the opcode aresopREQUEST NoteIn this test TESTER sends an ARP Packet 
with opcode field set to response value and expects that DUT will not send any ARP 
Response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER HOST 1 Sends ARP Response to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         Operation code set to OPERATIONRESPONSE  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Does not send ARP Response  
Pass Criteria  3 DUT Does not send ARP Response  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP43 ARP response  Ethernet Source Hardware Address check  
Synopsis  When an address resolution packet is received the receiving Ethernet module giv es the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Is the opcode aresopREQUEST Swap hardware field putting the local 
hardware address in the sender field  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  

  
    
  139 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Source IP Address set to HOST 1IP 
         Destination IP Address set to DIface 0IP 
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
         Ethernet Source Hardware Address is set to DIFACE 0MAC ADDR  
Pass Criteria  3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
 Ethernet Source Hardware Address is set to DIFACE 0MAC ADDR  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP44 ARP response Sender IP Address check  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to th e 
following Is the opcode aresopREQUEST Swap protocol field putting the local 
protocol address in the sender field  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
         Sender  IP Address is set to DIface 0IP 

  
    
  140 Pass Criteria  3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
 Sender IP Address is set to DIface 0IP 
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP45 ARP response ARP Target Hardware Address check  
Synopsis  When an address resolution packet is received the receiving Ethernet module gives the 
packet to the Address Resolution module which goes through an algorithm similar to the 
following Is the opcode aresopREQUEST Yes Send the packet to  the new ARP target 
hardware address on the same hardware on which the request was received  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
MAC ADDR2  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
3 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends ARP Response  
5 TESTER Verify that received ARP Response contains  
         ARP Target  Hardware Address is set to MAC ADDR1  
6 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set t o DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR2  
7 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
8 DUT Sends ARP Response  
9 TESTER Verify that received ARP Response contains  

  
    
  141          ARP Target Hardware Add ress is set to MAC ADDR2  
Pass Criteria  4 DUT Sends ARP Response  
5 TESTER Verify that received ARP Response contains  
 ARP Target Hardware Address is set to MAC ADDR1  
8 DUT Sends ARP Response  
9 TESTER Verify that received ARP Response contains  
 ARP Target Hardware Address is set to MAC ADDR2  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception MUST  
Notes    
ARP46 ARP response Hardware Type check  
Synopsis  For the 10Mbit Ethernet arhrd  takes on the value 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends A RP Response  
4 TESTER Verify that received ARP Response contains  
         Hardware Type is set to ARPHARDWAREETHERNET  
Pass Criteria  3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
 Hardware Type is set to ARPHARDWA REETHERNET  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception 
MUST  
Notes    

  
    
  142 ARP47 ARP response Hardware Address Length check  
Synopsis  For the 10Mbit Ethernet arhln takes on the value 6  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends ARP Request to DUT through DIface 0 
        containing  
         Sender  IP Address set  to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
2 TESTER HOST 1 Listens  up to  ParamListenTime on DIface 0 
3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Res ponse contains  
         Hardware Address Length is set to ETHERNETADDRLEN  
Pass Criteria  3 DUT Sends ARP Response  
4 TESTER Verify that received ARP Response contains  
 Hardware Address Length is set to ETHERNETADDRLEN  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Packet Reception 
MUST  
Notes    
ARP48 ARP timeout idle  
Synopsis  If no packets are received from a host for a suitable length of time the address 
resolution entry is forgotten  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
DYNAMIC ARPCACHE TIMEOUT  
ARP TOLERANCE TIME  

  
    
  143 DYNAMIC ARPCACHE TIMEOUTARP TOLERANCE TIME  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configu re DUT to clear the dynamic entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to set a timeout of  
        DYNAMIC ARPCACHE TIMEOUT seconds  
        for the dynamic entries in the AR P Cache of DIface 0 
3 TESTER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
4 TESTER HOST 1 Waits up to ARP TOLERANCE TIME seconds for the  
        ARP cache of DUT to get refreshed  
5 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Source IP Address set to DI face 0IP 
         Destination IP Address set to HOST 1IP 
6 TESTER HOST 1 Listens up to ParamListenTime on DIface 0 
         Target  IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
7 DUT Sends ICMP E cho Request  
8 TESTER HOST 1 Waits up to  
        DYNAMIC ARPCACHE TIMEOUTARP TOLERANCE TIME seconds for the arp  
        cache of DUT to get refreshed  
9 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 wi th 
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
10 TESTER HOST 1 Listens up to ParamListenTime on DIface 0 
11 DUT Sends ARP Request  
12 CLEANUP Configure DUT to clear a timeout of  
          DYNAMIC ARPCACHE TIMEOUT seconds  
          for the dynamic entries in the ARP Cache of DIface 0 
Pass Criteria  7 DUT Sends ICMP Echo Request  
11 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Related  issue SHOULD  
Notes    

  
    
  144 ARP49 ARP timeout busy  
Synopsis  It may be desirable to have table aging andor timeouts Note In this test case TESTER 
expects that DUT should delete a given Dynamic ARP Cache Entry even if it is being used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  MAC ADDR1  
DYNAMIC ARPCACHE TIMEOUT  
ARP TOLERANCE TIME  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Configure DUT to clear the dynamic  entries in the ARP Cache  
        of DIface 0 
         containing IP Address HOST 1IP 
2 DUT CONFIGURE Configure DUT to set a timeout of  
        DYNAMIC ARPCACHE TIMEOUT seconds  
        for the dynamic entries in the ARP Cache of DIface 0 
3 TE STER  HOST 1 Sends ARP Request to DUT through DIface 0 
         containing  
         Sender  IP Address set to HOST 1IP 
         Target  IP Address set to DIface 0IP 
         ARP Sender  Hardware Address set to MAC ADDR1  
4 TESTER HOST 1 Wa its up  to ARP TOLERANCE TIME seconds for the  
        ARP cache of DUT to get refreshed  
5 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destin ation IP Address set to HOST 1IP 
6 TESTER HOST 1 Listens up  to ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
7 DUT Sends ICMP Echo Request  
8 TESTER  HOST 1 Waits up  to DYNAMIC ARPCACHE TIMEOUT 2 
        seconds for the ARP cache of DUT to get refreshed  
9 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
10 TESTER HOST 1 Listens up to ParamListenTime on DIface 0 
         Destination IP Address set to HOST 1IP 
         Ethernet Destination Address set to MAC ADDR1  
11 DUT Sends ICMP  Echo Request  
12 TESTER HOST 1 Waits up to  

  
    
  145         DYNAMIC ARPCACHE TIMEOUT 2 ARPTOLERANCE TIME seconds for the  
        ARP cache of DUT to get refreshed  
13 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Source IP Address set to DIface 0IP 
         Destination IP Address set to HOST 1IP 
14 TESTER HOST 1 Listens up to ParamListenTime on DIface 0 
15 DUT Sends ARP Request  
16 CLEANUP Configure DUT to clear a timeout of 
          DYNAMIC ARPCACHE TIMEOUT seconds  
          for the dynamic entries in the ARP Cache of DIface 0 
Pass Criteria  7 DUT Sends ICMP Echo Request  
11 DUT Sends ICMP Echo Request  
15 DUT Sends ARP Request  
Reference  RFC 826 An Ethernet Address Resolution Protocol section Related issue MAY  
Notes    
 

  
    
  146 43 Internet Control Message Protocol Version 4 ICMPv4  
431  General  
4311  Reference d specification  
 
The scope of this chapter is to specify test cases for the Internet Control Message Protocol Version 4 
ICMPv4 from the following standards  
   
 RFC 792   Internet Control Message Protocol  
 RFC 1122   Requirements for Internet Hosts  Communication Layers  
 RFC 1812  Requirements for IP Version 4 Routers  
4312  Simulated topologies  
 
 
4313  Required topology related configuration prerequisites  
 
 This test suite expects to be running against an IP stack  
 All tests run with one interface  
 
4314  Coverage  
 
  Specification Document  Section   Number  Test Category           Test Numbers       
RFC 792 Internet 
Control Message 
Protocol   Error Handling  ICMPv4ERROR1 to 
ICMPv4ERROR3  
RFC 1122 Requirements 
for Internet Hosts  322  Error Handling  ICMPv4ERROR4 
ICMPv4ERROR5  
RFC 792 Internet 
Control Message 
Protocol  4332  ICMP Types  ICMPv4TYPE1 to 
ICMPv4TYPE12  
ICMPv4TYPE16 to 
ICMPv4TYPE18  
ICMPv4TYPE21   DIface 0 TIface 0 
 
ECU 

  
    
  147 ICMPv4TYPE22  
 
432  Parameters used in the tests  
 
Parameter used in test  Description  
idfr  Identifier used in the ICMP Messages to identify an ICMP Message  
seqno  Sequence  Numbers used in ICMP Messages to identify an ICMP Message  
broadcast address  IP broadcast address  
origTimestampValue  Time the sender last touched a message before sending it It is 32 bits of 
milliseconds since midnight UT  
invalidChecksum  This is  the checksum which is different from the calculated checksum ie 
different from 16 bit ones complement of the ones complement sum of the 
ICMP message starting with the ICMP Type  
ListenTime    This is the maximum time interval for which TESTER waits  for a n ICMP Reply  
packet  This defaults to 3 seconds unless DUT configuration specifies 
otherwise  
UnusedUDPPort  An unused UDP port available on the DUT  
FragReassemlyTimeout  The fragment reassembly timeout This defaults to 15 seconds  
DUTSupportsIPOptions  Automotive ECUs may not support IP options either for performance or 
security reasons  
TRUE indicates DUT supports IP options  
FALSE indicates DUT does not support IP options  
Default TRUE  
Trigger Time    This is the maximum time interval for which TESTER waits for a packet for 
cases when a certain event has to be manually triggered  on the DUT either 
by some protocol timer or using some external mechanism  This defaults to 
30 seconds unless DUT configuratio n specifies otherwise  
unsupportedProtocol  This is an IP protocol number that is not supported by the DUT  
unknownType  This is an ICMP type that is not assigned by any RFC  
unreachablePort  This defines a process port which is not active  
 

  
    
  148 NOTE As a general test pattern it can be assumed that all events will be guarded by a timer eg 
receiving or non receiving of message Due to the difference nature of guarding different default values 
can be assumed  
 Guarding user interactions 30 seconds  
 Guarding awaiting of response 3 seconds  
 Guarding awaiting of no response 10 seconds  
 
Protocol should be mentioned in the respective test cases  

  
    
  149 433  Test cases ICMPv4  
4331  Error Handling  
ICMPv4ERROR 01  Avoid the infinite loop for ICMP message error  
Synopsis  The I CMP messages typically rep ort errors in the processing of datagrams To avoid the 
infinite regress of messages about messages etc no ICMP messages are sent about ICMP 
messages Note This tests that no ICMP message is sent when an erroneous ICMP 
message s is received thus avoiding an infinite loop This test is ran when 
DUTSupportsIPOptions is TRUE  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test 
Procedure  1 TESTER Cause DUT to send an ICMP Echo Request through DIface 0 
        containing  
         IP Destination Address field set to address of host 1 
2 TESTER Listen for up to TriggerTime seconds on DIface 0 
3 DUT Send an ICMP Echo Request messa ge  
4 TESTER Send an ICMP Parameter Problem Message to DIface 0 
        containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 11  
             flg field set to zero  
             one timestamp value  
         ICMP Pointer field set to 20 pointing option type  
         ICMP Data field set to Internet header  64 bits of  
          original data datagram  
5 TESTER Listen for up to ListenTime seconds on DIface 0 
6 DUT Do not send ICMP Parameter Problem Message  
Pass Criteria  3 DUT Send an ICMP Echo Request message  
6 DUT Do not send ICMP Parameter Problem Message  
Reference  RFC 792 p1 Introduction MUST  
ICMPv4ERROR 02  ICMP messages are only sent for fragment 0  
Synopsis  Also ICMP messages are only sent about errors in handling fragment zero of fragmented 
datagrams Note This tests that ICMP error message is sent on receiving the fragment 

  
    
  150 having Fragment Offset field set to zero  This test is ran when DUTSupportsIPOptions is 
TRUE   
Prerequisites  Check section prereq uisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address  of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         IP Options containing  
           One Internet Timestamp option con taining  
             length field set to 10  
             pointer field set to 9  
             one timestamp value  
         first half of the constructed ICMP packet  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send one ICMP Parameter Problem message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
        contains  
         Pointer field set to 22 Basic IP Header length 20   
                                   third octet pointer field of  
                                   timestamp option  
Pass Criteria  3 DUT Send one ICMP Parameter Problem message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
contains  
 Pointer field set to 22 Basic IP Header length 20   
third octet poi nter field of  
timestamp option  
Reference  RFC 792 p1 Introduction MUST  
ICMPv4ERROR 03  ICMP messages are not sent when fragment not 0  
Synopsis  Also ICMP messages are only sent about errors in handling fragment zero of fragmented 
datagrams Note This tests that ICMP error message is not sent on receiving non zero 
fragment ie Fragment Offset field set to non zero value  This test is ran when 
DUTSupportsIPOptions is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Check section Parameters used in the tests  

  
    
  151 Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 9  
             one timestamp value  
         first half of the constructed ICMP packet  
 
 
2 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to ad dress of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to data size sent in first  
          IP packet in unit of 8 octets  
         Flags first containing  
           MF bit set to zero  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 10  
             pointer field set to 9  
             one timestamp value  
         last half of the constructed ICMP packet  
3 TESTER Listen f or up to ListenTime seconds on DIface 0 
4 DUT Do not send ICMP Parameter Problem messages  
Pass Criteria  4 DUT Do not send ICMP Parameter Problem messages  
Reference  RFC 792 p1 Introduction MUST  
Notes   

  
    
  152 ICMPv4ERROR 04  ICMP messages are not sent for broadcast address  
Synopsis  An ICMP error message MUST NOT be sent as the result of receiving a datagram destined 
to an IP broadcast Note This test is ran when DUTSupportsIPOptions is TRUE  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  broadcast address  
Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of  host 1 
         IP Destination Address field set to broadcast address  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 10  
             pointer field set to 9  
             one t imestamp value  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Do not send ICMP Parameter Problem Message  
Pass Criteria  3 DUT Do not send ICMP Parameter Problem Message  
Reference  RFC 1122 s322 p39 Internet Control Message Protocol  ICMP MUST  
Notes   

  
    
  153 ICMPv4ERROR 05  Uknown ICMP message types are ignored  
Synopsis  If an ICMP message of unknown type is received it MUST be silently discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Message to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Type field set to InvalidICMPType  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Do not send any ICMP Message  
Pass Criteria  3 DUT Do not send any ICMP Message  
Reference  RFC 1122 s322 p38 Internet Control Message Pro tocol  ICMP MUST  
Notes   

  
    
  154 4332  ICMP Types  
ICMPv4TYPE 01  Send ICMP Destination Unreachable for unknown port  
Synopsis  If in the destination host the IP module cannot deliver the datagram because the 
indicated protocol module or process port is not active the destination host may send a 
destination unreachable message to the source host  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send a UDP Packet to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destina tion Address field set to address of DUT  
         IP Protocol field set to ipTypeUDP  
         UDP Destination Port set to UnusedUDPPort  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Destination Unreachable message   
4 TESTER Verify that the received Destination Unreachable message  
        contains  
         Code value set to 3 port unreachable  
Pass Criteria  3 DUT Send ICMP Destination Unreachable message  
4 TESTER Verify that the received Destination Unrea chable message  
contains  
 Code value set to 3 port unreachable  
Reference  RFC 792 p5 Destination Unreachable Message MAY  
Notes   

  
    
  155 ICMPv4TYPE 02  Discard packet with missing fragments  
Synopsis  If a host reassembling a fragmented datagram cannot complete the reassembly due to 
missing fragments within its time limit it discards the datagram  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Wait for FragReassemlyTimeout seconds  
3 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Fragment Offset field set to data s ize sent in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
4 TESTER Listen for up to ListenTime seconds on DIface 0  
5 DUT Discar d the fragments and do not send ICMP Echo Reply  
Pass Criteria  5 DUT Discard the fragments and do not send ICMP Echo Reply  
Reference  RFC 792 p7 Time Exceeded Message MUST  
Notes   
ICMPv4TYPE 03  Send ICMP Time Exceeded message on fragmentation error  
Synopsis  If a host reassembling a fragmented datagram cannot complete the reassembly due to 
missing fragments within its time limit it may send a time exceeded message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  

  
    
  156 Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address fi eld set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Wait for FragReassemlyTimeout seconds  
3 TESTER Listen f or up to ListenTime seconds on DIface 0 
4 DUT Send an ICMP Time Exceeded message  
5 TESTER Verify that the received ICMP Time Exceeded message  
        contains  
         Code field set to 1 fragment reassembly time exceeded  
Pass Criteria  4 DUT Send an ICMP Time Exceeded message  
5 TESTER Verify that the received ICMP Time Exceeded message  
contains  
 Code field set to 1 fragment reassembly time exceeded  
Reference  RFC 792 p7 Time Exceeded Message MAY  
Notes   
ICMPv4TYPE 04  Do no send ICMP Time Exceeded message if missing fragment 0  
Synopsis  If fragment zero is not available then no time exceeded need be sent at all  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to half of the constructed  
          ICMP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
2 TESTER Wait for FragReassemlyTimeout s econds  
3 TESTER Listen for up to ListenTime seconds on DIface 0 
4 DUT Do not send ICMP Time Exceeded message  
Pass Criteria  4 DUT Do not send ICMP Time Exceeded message  
Reference  RFC 792 p7 Time Exceeded Message MUST  
Notes   

  
    
  157 ICMPv4TYPE 05  Discard messages with header parameter problem  
Synopsis  If the gateway or host processing a datagram finds a problem with the header parameters 
such that it cannot complete processing the datagram it must discard the datagram Note 
This test is ran when DUTSupportsIPOptions is TRUE  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 10  
             pointer field set to 9  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Discard the ICMP Echo Request and do not send ICMP Echo  
        Reply  
Pass Criteria  3 DUT Discard the ICMP Echo Request and do not send ICMP Echo  
Reply  
Reference  RFC 792 p9 Parameter Problem Message MUST  
Notes   
ICMPv4TYPE 06  Sending of ICMP Prameter Problem message  
Synopsis  If the gateway or host processing a datagram finds a problem with the header parameters 
such that it cannot complete processing the datagram it may notify the source host via the 
parameter problem message Note This test is ran when DUTSupportsIPOptions  is 
TRUE  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  

  
    
  158              length field set to 10  
             pointer field set to 9  
             one timestamp value  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem  
        Message contains  
         Pointer field set to 22 Basic IP Header length 20   
                                   Length of Type field 1   
                                   Length of Length field 1  
Pass Criteria  3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem  
Message contains  
 Pointer field set to 22 Basic IP Header length 20   
Length of Type field 1   
Length of Length field 1  
Reference  RFC 792 p9 Parameter Problem Message MAY  
Notes   
ICMPv4TYPE 07  ICMP Parameter Problem Message contents  
Synopsis  Unused filed in Parameter Problem Message is set to zero and it contains the exactly same 
Internet Header and 64 bits of Original Datagram Note This test is ran when 
DUTSupportsIPOptions is TRUE  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to ad dress of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           Two Internet Timestamp options each containing  
             length field set to 12  
             pointer field set to 9   
             flg field set to zero  
             one timestamp value   
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
        cont ains  
         Unused field set to zero  
         Data field contains exactly same IP header and 64 bits  
          of Original Data sent to the DUT  

  
    
  159 Pass Criteria  3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Param eter Problem Message  
contains  
 Unused field set to zero  
 Data field contains exactly same IP header and 64 bits  
of Original Data sent to the DUT  
Reference  RFC 792 p9 Parameter Problem Message MAY  
Notes   
ICMPv4TYPE 08  ICMP Echo Reply message data field  
Synopsis  The data received in the echo message must be returned in the echo reply message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Data field set to ECU NETWORK VALIDATION TEST  
2 TESTER Listen  for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that the received ICMP Echo Reply contains  
         Data field set to ECU NETWORK VALIDATION TEST  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Ve rify that the received ICMP Echo Reply contains  
 Data field set to ECU NETWORK VALIDATION TEST  
Reference  RFC 792 p15 Echo or Echo Reply Message MUST  
Notes   
ICMPv4TYPE 09  ICMP Echo Reply message id and sequence field  
Synopsis  The identifier and sequence number may be used by the echo sender to aid in 
matching the replies with the echo requests  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  idfr  
seqno  
Check section Parameters used  in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 

  
    
  160          IP Destination Address field set to address of DUT  
         Identifier field set to idfr  
         Sequence Number field set to seqno  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that the received ICMP Echo Reply contains  
         Identifier field set to idfr  
         Sequence Number field set to seqno  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that the received ICMP Echo Reply contains  
 Identifier field set to idfr  
 Sequence Number field set to seqno  
Reference  RFC 792 p15 Echo or Echo Reply  Message MAY  
Notes   
ICMPv4TYPE 10 ICMP checksum is checked  
Synopsis  The checksum is the 16 bit ones complement of the ones complement sum of the ICMP 
messa ge starting with the ICMP Type For computing the checksu m the checksum field 
should be zero If the total length is odd the received data is padded with one octet of 
zeros for computing the checksum  Note This tests that a  node does  not send ICMP Echo 
Reply if ICMP Checksum is incorrect   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  invalidChecksum  
Check section Parameters used in the tests  
Test 
Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Checksum field set to invalidChecksum  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Do not send ICMP Echo Reply  
Pass Criteria  3 DUT Do not send ICMP Echo Reply  
Refe rence  RFC 792 p15 Echo or Echo Reply Message MUST  
Notes   

  
    
  161 ICMPv4TYPE 11 ICMP Timestamp Reply message content  
Synopsis  The data received a timestamp in the message is returned in the reply together with 
an additional timestamp  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  origTimestampValue  
Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Timestamp Message to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Originate Timestamp field set to origTimestampValue  
         Receive Timestamp field set to zero  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Timestamp Reply  
4 TESTER Verify that the received ICMP Timestamp Reply contains  
         Originate Timestamp field set to origTimestampValue  
         Receive Timestamp field set to non zero  
         Transmit Timestamp field set to non zero  
Pass Criteria  3 DUT Send ICMP Timestamp Reply  
4 TESTER Verify that the received ICMP Timestamp Reply contains  
 Originate Timestamp field set to origTimestampValue  
 Receive Timestamp field set to nonzero  
 Transmit Timestamp field set to non zero  
Reference  RFC 792 p17 Timestamp or Timestamp Reply Message  MAY  
Notes   
 

  
    
  162 ICMPv4TYPE 12 ICMP Timestamp Reply message id and sequence field  
Synopsis  The identifier and sequence number may be used by the echo sender to aid in 
matching the replies with the requests  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  idfr  
seqno  
Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Timestamp Message to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Identifier field set to idfr  
         Sequence Number field set to seqno  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Timestamp Reply  
4 TESTER Verify that the received ICMP Timestamp Reply contains  
         Identifier field set to idfr  
         Sequence Number field set to seqno  
Pass Criteria  3 DUT Send ICMP Timestamp Reply  
4 TESTER Verify that the received ICMP Timestamp Reply contains  
 Identifier field set to idfr  
 Sequence Number field set to seqno  
Reference  RFC 792 p17 Timestamp or Timestamp Reply Message MAY  
Notes   
 

  
    
  163 ICMPv4TYPE16 Ensure that the D UT does not accept an  ICMP v4 Information  
Request and does not generate a ICMPv4 Information Reply  
Synopsis  A host SHOULD NOT implement these messages Note referring to Information 
Request or Information Reply Message  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Information Request to DIface 0 
        containing  
         IP Source Address field set to network portion of IP  
          address of host 1 
         IP Destination Address field set to zero  
         Identifier field set to idfr  
         Sequence Number field set to seqno  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Do not send ICMP Information Reply  
Pass Criteria  Pass criteria  
3 DUT Do not send ICMP Information Reply  
Test Iterations   
Reference  Derived from RFC792 RFC1122 3227  
Notes   
 
DEPRECATED  ICMPv4TYPE17 Ensure that the D UT accepts an  ICMP v4 Timestamp 
and generates a valid ICMPv4 Timestamp Reply  
Synopsis  Ensure that  
  when a DUT receives an ICMPv4 Packet  
    containing a Type  
      indicating a value of 13 Timestamp Request  
    and containing a Code  
      indicating a value of 0  
    and containing a valid Checksum  
    and containing an Identifier  
      indicating a value of ID1  
    and containing a Sequence Number  
      indicating a value of SEQ1  
  then the DUT sends an ICMPv 4 Packet  
    containing a Type  
      indicating a value of 14 Timestamp Reply  

  
    
  164     and containing a Code  
      indicating a value of 0  
    and containing a valid Checksum  
    and containing an Identifier  
      indicating a value of ID1  
    and containing a Sequence Number  
      indicating a value of SEQ1  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Timestamp Message  
2 DUT Send ICMPv4 Timestamp Reply  
Pass Criteria  The DUT sends an ICMPv4 Packet  
    containing a Type  
      indicating a value of 14 Timestamp Reply  
    and containing a Code  
      indicating a value of 0  
    and containing a valid Checksum  
    and containing an Identifier  
      indicatin g a value of ID1  
    and containing a Sequence Number  
      indicating a value of SEQ1  
Test Iterations   
Reference  Derived from RFC792 RFC1122 3228  
Notes  OPTIONAL  
 
ICMPv4TYPE18 Send ICMP Destination Unreachable for unknown protocol  
Synopsis  Ensure t hat 
  when a DUT receives an IPv4 Packet  
    containing an IPv4 Header  
      containing a Protocol  
        indicating a value of unsupportedProtocol  
  then the DUT sends an ICMPv4 Packet  
    containing a Type  
      indicating a value of 3 Destin ation Unreachable  
    and containing a Code  
      indicating a value of 2 Protocol unreachable  
Prerequisites  None  
Test setup  Topology 1  

  
    
  165 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 Packet with protocol value of unsupportedProtocol  
2 DUT Send s ICMP v4 Destination Unreachable message indicating Protocol 
Unreachable  
Pass Criteria  The DUT sends an ICMPv4 Packet  
    containing a Type  
      indicating a value of 3 Destination Unreachable  
    and containing a Code  
      indicating a value of 2 Protocol unreachable  
Test Iterations   
Reference  Derived from RFC792 RFC1122 3221  
Notes   
 

  
    
  166 DEPRECATED  ICMPv4TYPE21 Ensure that the D UT does not generate an  ICMP v4 
Time Exceeded message when reassembly fails due to the absence of the first 
fragment  
Synopsis  Ensure t hat 
  when a DUT receives an IPv4 Packets  
    containing an IPv4 Header  
      containing Flags  
        containing DF flag  
          indicating a value of 0  
        containing MF flag  
          indicating a value of 1  
      and containing Offset  
        indicating a value not equal to 0  
  then the DUT does not send an ICMPv4 Packet  
    containing a Type  
      indicating a value of 11 
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 Packet with DF1 Dont Fragment and MF1 More 
Fragments and an Offset not equal to 0  
2 DUT Does not s end an ICMP v4 Time Exceeded message  
Pass Criteria  The DUT does not send an ICMPv4 Packet  
    containing a Type  
      indicating a value of 11 
Test Iterations   
Reference  Derived from RFC792 RFC1122 3224  
Notes   
ICMPv4 TYPE 22 Send ICMP Echo Reply on receiving ICMP Echo Request  
Synopsis  A host must respond to all ICMP Echo Requests sent to it  by sending an ICMP Echo 
Reply back to the sender of ICMP Echo Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section Parameters used in the tests  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  

  
    
  167          IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
2 TESTER Listen for up  to ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
Pass Criteria  3 DUT Send ICMP Echo Reply  
Reference  RFC 792 p15 Echo or Echo Reply Message MUST  
Notes   
 

  
    
  168 44 Internet Protocol Version 4 IPv4  
441  General  
4411  Reference d specification  
 
The scope of this chapter is to specify test cases for the Internet Protocol Version 4 IPv4 from the 
following standards  
   
 RFC 791   INTERNET PROTOCOL DARPA INTERNET PROGRAM PROTOCOL SPECIFICATION  
 RFC 1122   Requirements for Internet Hosts  Communicati on Layers  
 
Though the focus of conformance testing has been limited to the above   mentioned specification 
documents we have relied heavily upon the following document as specification for transmission of IP 
Datagrams over Ethernet Options  
 
 RFC 894  A Standard for the Transmission of IP Datagrams over Ethernet Networks  
4412  Simulated topologies  
 
 HOST 1 DIface 0 TIface 0 
ECU 
 
TOPOLOGY 1 

  
    
  169  
4413  Required topology related configuration  
 
 This test suite expects to be running against an IP stack  
 
4414  Coverage  
 
  Specification Document  Section   
Number  Test Category           Test Numbers       
RFC 791  31 IPv4 Header  IPv4HEADER01 to 
IPv4HEADER05 
IPv4HEADER08 
IPv4HEADER09  
RFC 791  31 IPv4 Checksum  IPv4CHECKSUM01 
IPv4CHECKSUM02 
IPv4CHECKSUM04 
IPv4CHECKSUM05  
RFC 791  31 IPv4 Time to Live  IPv4TTL01  IPv4TTL03 
to IPv4TTL05  
RFC 791  31 IPv4 Version Number  IPv4VERSION01  
IPv4VERSION03 
IPv4VERSION04  
RFC 791  32 IPv4 Addressing  IPv4ADDRESSING01 to 
IPv4ADDRESSING03  
RFC 791  23 IPv4 Fragments  IPv4FRAGMENTS1 to 
IPv4FRAGMENTS5  
RFC 791  32 IPv4 Options  IPv4OPTIONS1 to 
IPv4OPTIONS1 4 
RFC 791  32 IPv4 Reassembly  IPv4REASSEMBLY01 to 
IPv4REASSEMBLY11  TOPOLOGY 2 TIface 1 
HOST 1 DIface 0 TIface 0 
ECU 
 DIface 1 

  
    
  170 442  Parameters used in the tests  
 
Parameter used in test  Description  
validTTL  Time To Live field value used in IP packet to be sent If the packet is to be 
forwarded then  this value must be greater than 2  
invalidChecksum  This is the checksum which is different from the calculated checksum ie 
different from 16 bit ones complement of the ones complement sum of 
all 16 bit words in the header  
id  id1 id2  Identification of the IP packet  
LargeTTLValue  Time To Live value in a Fragmented packet This value is greater than the 
initial timer setting which is 15 seconds  
LowTTLValue  Time To Live value in a Fragmented packet This value is less than the 
initial timer setting which is 15 seconds  
non reserve value  A value which is not zero  
limitedBroadcastAddress  The limited broadcast address addresses every host on the connected 
physical network  1 1  255255255255  
directed BroadcastAddress  The directed broadcast address addresses a specific group in the 
network Network number 1 eg 192168255255  
loopBack Address  The internal host loopback address eg 127001  
MTU  The Maximum Transmission Unit size  
 
NOTE As a general test pattern it can be assumed that all events will be guarded by a timer eg 
receiving or non receiving of message Due to the difference nature of guarding different default values 
can be assumed  
 Guarding user interactions 30 seconds  
 Guarding awaiting of response 3 seconds  
 Guarding awaiting of no response 10 seconds  
 
Protocol should be mentioned in the respective test cases  
 

  
    
  171 443  IPv4 Test cases  
4431  IPv4 Header  
IPv4HEADER 01 Ensure that the DUT generates an IPv4 Packet with a Total Length 
greater t han or equal to 20  
Synopsis  Ensure that  
  when the DUT is requested to generate an IPv4 packet  
  then the DUT generates an IPv4 Packet  
    containing an IPv4 Header  
      containing a Total Length  
        indicating a value greater than or equal to 20  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request  
2 DUT Generates an ICMPv4 Echo Reply  
Pass Criteria  The DUT generates an IPv4 Packet  
    containing an IPv4 Header  
      containing a Total Length  
        indicating a value greater than or equal to 20  
Test Iterations   
Reference  Derived from RFC791 section 31  
Notes   
 
IPv4HEADER 02 Ensure that the DUT discards an IPv4 Packet with an invalid 
Header Length  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a Header Length  
        indicating a value less than 20  
  then the DUT discards the IPv4 Packet silently  
Prerequisites  None  
Test setup  Topology 1  

  
    
  172 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with a header length indicating a value less 
than 20  
2 DUT Does not send an ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 Packet silently  
Test Iterations   
Reference  Derived from RFC791 section 31  
Notes   
 

  
    
  173 IPv4HEADER 03 Ensure that the DUT generates an IPv4 Packet with the Source 
Address being one of its IPv4 Addresses  
Synopsis  Ensure that  
  when the DUT is requested to generate an IPv4 packet  
  then the DUT sends an IPv4 Packet  
    containing an IPv4 Header  
      containing a Source Address  
        indicating one of its defined IPv4 addresses  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request  
2 DUT Generates an ICMPv4 Echo Reply with Source Address being one of its defined 
IPv4 addresses  
Pass Criteria  The DUT sends an IPv4 Pack et 
    containing an IPv4 Header  
      containing a Source Address  
        indicating one of its defined IPv4 addresses  
Test Iterations   
Reference  Derived from RFC791 section 31 32 RFC1122 section 3213  
Notes   
 

  
    
  174 IPv4HEADER 04 Ensure that the DUT discards an IPv4 Packet with an incorrect 
Destination Address  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a Destination Address  
        indicating a value different from the DUTs IPv4 ad dress and is not a Broadcast or 
Multicast address  
  then the DUT discards the IPv4 Packet silently  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with destination address different than the 
DUTs IPv4 address  
2 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 Packet silently  
Test Iterations   
Reference  Derived from RFC791 section 31 32 RFC1122 section 3213  
Notes   
 

  
    
  175 IPv4HEADER 05 IP Maximum datagram length check  
Synopsis  All hosts must be prepared to accept datagrams of up to 576 octets  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Total Length field set to 576 
         IP Payload field containing  
           556 bytes data  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are s ame as those of ICMP Echo Request sent  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent  
Test Iterations   
Notes  Derived from RFC 791 s31  p13 Internet Header Format MUST  

  
    
  176 IPv4HEADER08  IP Header length validation  
Synopsis  Internet Header Length is the length of the internet header in 32 bit words and thus 
points to the beginning of the data  Note that the minimum value for a correct h eader is 5 
Note Tests that DUT discards a packet with total length smaller than implied by IHL value  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Data field set to ECU NETWORK VALIDATION TEST  
         IP IHL field set to 13  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Does not Send ICMP Echo Reply  
Pass Criteria  3 DUT Does not Send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p11 Internet Header Format MUST  

  
    
  177 IPv4HEADER 09 IP Total Length validation  
Synopsis  Total Length is the length of the datagram measured in octets including internet header 
and data Note Tests that DUT discards a packet with total length bigger than the actual 
transmitted data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Data field set to ECU NETWORK VALIDATION TEST  
         IP Total Length field set to 48  
2 TESTER Listen for up to Listen Time seconds on DIface 0 
3 DUT Does not Send ICMP Echo Reply  
Pass Criteria  3 DUT Does not Send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p13 Internet Header Format MUST  
 

  
    
  178 4432  IPv4 Checksum  
DEPRECATED   IPv4CHECKSUM01 Ensure that the DUT generates an IPv4 Packet 
with a valid Header Checksum  
Synopsis  Ensure that  
  when the DUT generates an IPv4 packet  
  then the DUT sends an IPv4 Packet  
    containing an IPv4 Header  
      containing a Header Checksum  
        indicating  a valid checksum  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request  
2 DUT Sends an ICMPv4 Echo Reply containing a valid checksum  
Pass Criteria  The DUT sends an IPv4 Packet  
    containing an IPv4 Header  
      containing a Header Checksum  
        indicating a valid checksum  
Test Iterations   
Reference  Derived from RFC791 section 31 RFC1122 section 3212  
Notes  Deprecated in version 2  Test case is duplicated to IPv4CHECKSUM05  
 

  
    
  179 IPv4CHECKSUM02  IP Checksum method validation on receiving  
Synopsis  If the header checksum fails the internet datagram is discarded at once by the entity 
which detects the error  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  invalidChecksum  
Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with Header Checksum indicating 
invalidChecksum  
2 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 Packet silently  
Test Iterations   
Reference  Derived from RFC791 section 31 RFC1122 section 3212  
Notes   
 

  
    
  180 IPv4CHECKSUM04  IP Checks um method validation on sending  
Synopsis  The checksum field is the 16 bit ones complement of the ones complement sum of all 16 
bit words in the header For purposes of computing the checksum the value of the 
checksum field is zero Note Here we are verifying that DUT uses same checksum 
calcu lation method as we are expecting  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to send a IP packet  DIface 0 containing  
         IP Destination Address set to address of host 1 
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send  a IP packet  
4 TESTER Verify that the received IP packet  contains  
         IP Checksum field set to 16 bit ones comp lement of the  
          ones complement sum of all 16 bit words in the header  
Pass Criteria  3 DUT Send an IP Packet  
4 TESTER Verify that the received IP packet  contains  
 IP Checksum field set to 16 bit ones complement of the  
ones complement sum  of all 16 bit words in the header  
Test Iterations   
Notes  Derived from RFC 791 s31 p14 Internet Header Format MUST  
Request  Reply Mech nism has to be supported by DUT and a packet may be an ICMP 
Request or UDP datagram on a port DUT is listening  

  
    
  181 IPv4CHECKSUM05  IP Checksum method validation  
Synopsis  The checksum field is the 16 bit ones complement of the ones complement sum of all 16 
bit words in the header For purposes of computing the checksum the value of the 
checksum field is zero Note Here we send an Echo Request with checksum calculated 
according to rfc DUT receives this Echo Request verifies the Echo Request and then sends 
Echo Reply We then verify that DUT uses the checksum calculation method according to 
rfc  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test In put 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Checksum field set to 16 bit ones complement  
          of the ones complement sum of all 16 bit words in  
          the header  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify th at the received ICMP Echo Reply contains  
         IP Checksum field to 16 bit ones complement  
          of the ones complement sum of all 16 bit words  
          in the header  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that the received ICMP Echo Reply contains  
 IP Checksum field to 16 bit ones complement  
of the ones complement sum of all 16 bit words  
in the header  
Test Iterations   
Notes  Derived from RFC 791 s31 p14 Internet Header Format MUST  
 
 

  
    
  182 4433  IPv4 Time to Live  
IPv4TTL01 A host MUST NOT send a datagram with a Ti metoLive TTL value of 
zero  
Synopsis  A host MUST NOT send a datagram with a Time toLive TTL value of zero  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request packet  
2 DUT Sends an ICMPv4 Echo Reply packet with a TTL value greater than 0  
Pass Criteria  The DUT sends an IPv4 packet  
    containing an IPv4 Header  
      containing a TTL  
        indicating a value greater than 0  
Test Iterations   
Reference  Derived from RFC791 section 31 and 32 RFC1122 section 3217  
Notes   
 

  
    
  183 DEPRECATED   IPv4TTL03 Ensure that the DUT decrements the TTL of a 
forwarded IPv4 Packet by at least 1  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a TTL  
        indicating a value TTL1  
  then the DUT forwards and sends an IPv4 packet  
    containing an IPv4 Header  
      containing a TTL  
        indicating a value less than TTL1  
Prerequisites  None  
Test setup  Topology 2  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with a TTL value TTL1 which is greater than 2  
2 DUT Sends an IPv4 packet with a TTL value less than TTL1  
Pass Criteria  The DUT forwards and sends an IPv4 packet  
    containing an IPv4 Header  
      containing a TTL  
        indicating a value less than TTL1  
Test Iterations   
Reference  Derived from RFC791 section 31 and 32 RFC1122 section 3217  
Notes  Deprecated in version 2   test case only applicable for router  
 

  
    
  184 DEPRECATED   IPv4TTL04 Ensure that the DUT discards an IPv4 packet with a TTL 
of 0 if the IPv4 packet has to be forwarded  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a TTL  
        indicating a value 0  
  then the DUT does not forwards and discards the IPv4  
Prerequisites  None  
Test setup  Topology 2  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with a TTL value of 0 which has to be 
forwarded  
2 DUT  Does not forward the  ICMP v4 Echo Re quest  
Pass Criteria  The DUT does not forwards and discards the IPv4  
Test Iterations   
Reference  Derived from RFC791 section 31 and 32 RFC1122 section 3217  
Notes  Deprecated in version 2  test case only applicable for router  
 

  
    
  185 IPv4TTL 05 Packets with 0 or 1 TTL are not discarded by hosts  
Synopsis  A host MUST NOT discard a datagram just because it was received with TTL less than 
2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP E cho Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP TTL field set to ttl  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
 
Pass Criteria  3 DUT Send ICMP Echo Reply  
Test Iterations  1 CASE ttl  0  
2 CASE ttl  1  
Notes  Derived from RFC 1122 s3217 p34 Time toLive RFC 791 Section 32 MUST  
 

  
    
  186 4434  IPv4 Version Number  
IPv4 VERSION 01 Ensure that the DUT accepts an IPv4 Packet with a valid Version 4  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a Version  
        indicating a value of 4  
  then the DUT accepts the IPv4 Packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with version 4  
2 DUT Sends an ICMPv4 Echo Reply  
Pass Criteria  The DUT accepts the IPv4 Packet and replies correctly with an ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 31 RFC1122 section 3211  
Notes   
 

  
    
  187 IPv4 VERSION 03 Ensure that the DUT generates a IPv4 Packet with a valid Version 
4 
Synopsis  Ensure that  
  when the DUT generates an IPv4 packet  
  then the DUT sends an IPv4 Packet  
    containing an IPv4 Header  
      containing a Version  
        indicating a value of 4  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check sec tion general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request  
2 DUT Does not send an ICMPv4 Echo Reply containing a valid version 4  
Pass Criteria  The DUT sends an IPv4 Packet  
    containing an IPv4 Header  
      containing a Version  
        indicating a value of 4  
Test Iterations   
Reference  Derived from RFC791 section 31 RFC1122 section 3211  
Notes   

  
    
  188 IPv4 VERSION 04 IP Version validation  
Synopsis  A datagram whose version number is not 4 MUST be silently discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to D Iface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Version field set to other than IPVERSION4  
2 TESTER Listen for upto ListenTime seconds on  DIface 0 
3 DUT Discard ICMP Echo Request and do not send ICMP Echo Reply  
Pass Criteria  3 DUT Discard ICMP Echo Request and do not send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p11 Internet Header Format Version RFC 1122 s3211 p29 
Version Number RFC 791 Section 31 MUST  

  
    
  189 4435  IPv4 Addressing  
IPv4 ADDRESSING 01 Ensure that the DUT receives an IPv4 Packet with a 
Destination Address being a Limited Broadcast Address  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packe t 
    containing an IPv4 Header  
      containing a Destination Address  
        indicating a value of Limited Broadcast  
  then the DUT accepts the IPv4 Packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  limitedBroadcastAddress  
Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with destination address being 
limitedBroadcastAddress  
2 DUT Sends an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT accepts the IPv4 Packet and answers correctly w ith an ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32 RFC1122 section 3213  
Notes   
 

  
    
  190 IPv4 ADDRESSING 02 Ensure that the DUT discards an IPv4 Packet with a 
Destination Address being a Directed Broadcast Address  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a Destination Address  
        indicating a value of Directed Broadcast  
  then the DUT discards the IPv4 Packet silently  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  directedBroadcastAddress  
Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with destination address being 
directedBroadcastAddress  
2 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 Packet silently  
Test Iterations   
Reference  Derived from RFC791 section 32 RFC1122 section 3213  
Notes   
 

  
    
  191 IPv4 ADDRESSING 03 Ensure that the DUT discards an IPv4 Packet with a 
Destination Address being a Loop Back Address  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing a Destination Address  
        indicating a value of Loop Back  
  then the DUT discards the IPv4 packet silently  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  loopBackAddress  
Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with destination address being 
loopBackAddress  
2 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 packet silently  
Test Iterations   
Reference  Derived from RFC791 section 32 RFC1122 section 3213  
Notes   

  
    
  192 4436  IPv4 Fragments  
IPv4FRAGMENTS 01  IP Reconstruct fragments validation  
Synopsis  To assemble the fragments of an internet datagram an internet protocol module for 
example at a destination host combines internet datagrams that all have the same value 
for the four fields identification source destination and protocol  
Prerequisi tes Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  id  
Check section general Input Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Addr ess field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to zero  
         Flags containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to data size sent in first IP packet  
          in unit of 8 octets  
         Flags containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
3 TESTER Listen for upto ListenTime seconds on DIface 0 
4 DUT Send ICMP Echo Reply  
5 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request  sent in two  
        fragments  
Pass Criteria  4 DUT Send ICMP Echo Reply  
5 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s23 p9 Function Description Fragmentation RFC 791 s32 p29 
Discussion Identification RFC 1122 s332 p56 Reassembly MUST  

  
    
  193 IPv4FRAGMENTS 02  IP Reconstruct fragments negative test on id  
Synopsis  To assemble the fragments of an internet datagram an internet protocol module for 
example at a destination host combines internet datagrams that all have the same value 
for the four fields identification source destination and protocol Note This test verifies 
that IP module does not assemble the fragments if identification is different  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id1  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Send an IP packet to DIface 0 containin g 
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id2  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to data size s ent in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
3 TESTER Listen for upto ListenTime seconds on DIface 0 
4 DUT Do not send IC MP Echo Reply  
5 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id1  
         Protocol field set  to ipTypeICMP  
         Fragment Offset field set to data size sent in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
6 TESTER Listen for upto ListenTime seconds on DIface 0 
7 DUT Send ICMP Echo Reply  
8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request sent in two  

  
    
  194         fragments  
9 TESTER Wait for ipI niReassembleTimeout seconds  
10 NOTE TESTER has to wait for ipIniReassembleTimeout seconds because  
        when TESTER is sending the fragment with different identification  
        the fragment gets stored in DUTs reassembly buffer  
        If this f ragment is not removed from the buffer then it may lead  
        to a scenario where this fragment may be mistaken for a fragment 1 of another test 
case  
        So a timeout needs to occur for this fragment  
Pass Criteria  4 DUT Do not send ICMP Echo Rep ly 
7 DUT Send ICMP Echo Reply  
8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s23 p9 Function Description Fragmentation MUST  

  
    
  195 IPv4FRAGMENTS 03  IP Reconstruct fragments negative test on source  
Synopsis  To assemble the fragments of an internet datagram an internet protocol module for 
example at a destination host combines internet datagrams that all ha ve the same value 
for the four fields identification source destination and protocol Note This test verifies 
that IP module does not assemble the fragments if source is different  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  id  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination  Address field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to different address from  
          host 1  
         Destination Address field set to address of DUT  
         Identification field set  to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to data size sent in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the const ructed ICMP packet  
3 TESTER Listen for upto ListenTime seconds on DIface 0 
4 DUT Do not send ICMP Echo Reply  
5 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Add ress field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to data size sent in first  
          IP packet in unit of 8 octets  
         Flags field containi ng 
           MF bit set to zero  
         last half of the constructed ICMP packet  
6 TESTER Listen for upto ListenTime seconds on DIface 0 

  
    
  196 7 DUT Send ICMP Echo Reply  
8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request sent in two  
        fragments  
9 TESTER Wait for ipIniReassembleTimeout seconds  
10 NOTE TESTER has to wait for ipIniReassembleTimeout seconds because  
        when TESTER is sending the fragment with different source address  
        the fragment gets stored in DUTs reassembly buffer  
        If this fragment is not removed from the buffer then it may lead  
        to a scenario where this fragment may be mistaken for a fragment 1 of another test 
case  
        So a timeout needs to occur for this fragment  
Pass Criteria  4 DUT Do not send ICMP Echo Reply  
7 DUT Send ICMP Echo Reply  
8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request se nt in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s23 p9 Function Description Fragmentation MUST  

  
    
  197 IPv4FRAGMENTS 04  IP Reconstruct fragments negative  test on  protocol  
Synopsis  To assemble the fragments of an internet datagram an internet protocol module for 
example at a destination host combines internet datagrams that all have the same value 
for the four fields identification source destination and protocol Note This test verifies 
that IP module does not assemble the fragments if protocol is different  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  id  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeICMP  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         first half of the constructed ICMP packet  
2 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1  
         Destination Address field set to address of DUT  
         Identification field set to id  
         Protocol field set to ipTypeTCP  
         Fragment Offset field set to data size sen t in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
3 TESTER Listen for upto ListenTime seconds on DIface 0 
4 DUT Do not send ICM P Echo Reply  
5 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Identification field set to id  
         Protocol field set t o ipTypeICMP  
         Fragment Offset field set to data size sent in first  
          IP packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         last half of the constructed ICMP packet  
6 TESTER Listen f or upto ListenTime seconds on DIface 0 
7 DUT Send ICMP Echo Reply  

  
    
  198 8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request sent in two  
        fragments  
9 TESTER Wait for ipIni ReassembleTimeout seconds  
10 NOTE TESTER has to wait for ipIniReassembleTimeout seconds because  
        when TESTER is sending the fragment with different protocol  
        the fragment gets stored in DUTs reassembly buffer  
        If this fragment is not removed from the buffer then it may lead  
        to a scenario where this fragment may be mistaken for a fragment 1 of another test 
case  
        So a timeout needs to occur for this fragment  
Pass Criteria  4 DUT Do not send ICMP Echo Reply  
7 DU T Send ICMP Echo Reply  
8 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s23 p9 Function Description Fragmentation MUST  

  
    
  199 IPv4FRAGMENTS 05  IP se nd unfragmented data validation  
Synopsis  The fragmentation strategy is designed so than an unfragmented datagram has all zero 
fragmentation information MF  0 fragment offset  0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  Test step 1 TESTER Cause DUT to send a Message  with UDPDefaultData from DIface 
0 with  Source IP Address set to DIface 0IP  Desti nation IP Address set to HOST 1IP 
 Source UDP Port field set to unusedUDPDstPort1 20001  Destination UDP Port field 
set to unusedUDPSrcPort 20000  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Request  
4 TESTER Verify that the received packet contains  
         IP Flags field containing  
           MF bit set to zero  
         IP Fragment Offset field set to zero  
Pass Criteria  3 DUT Send ICMP Echo Request  
4 TESTER Verify that the received packet contains  
 IP Flags field containing  
 MF bit set to zero  
 IP Fragment Offset field set to zero  
Test Iterations   
Notes  Derived from RFC 791 s32 p25 Discussion MUST  
The message can be an ICMP Echo Request or a simple UDP message  

  
    
  200 4437  IPv4 Reassembly  
DEPRECATED   IPv4REASSEMBLY 01 Ensure that the DUT reassembles fragments 
of an IPv4 Packet  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet  
  then the DUT reassembles and accepts the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send several IPv4 packets as continuation of the ICMPv4 Echo Request with 
MF  1 More Fragments and Offset incremented each time by the payload size of the 
previous packet and the ID being the same as the first fragment  
3 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset incremented by 
the payload size of the previous packet and the ID being the same as the first fragment  
4 DUT Sends an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT reassembles and accepts th e IPv4 packet and answers correctly with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes  Deprected in version 2   test case is duplicated to IPv4FRAGMENTS01  
 
DEPRECATED   IPv4REASSEMBLY 02 Ensure that the DUT  does not reassemble 
fragments of an IPv4 Packet with different IDs  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet  
    containing an IPv4 Header  
      containing an ID  
        indicating different values  
  then the DUT does not reassemble and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  201 Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset   0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset incremented by 
the payload size of the previous packet and the ID being different from the first 
fragment  
3 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT does not reassemble and accept the IPv4 packet and does not answer with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes  Deprected in version 2  test case is  duplicated to IPv4FRAGMENTS02  
 

  
    
  202 DEPRECATED   IPv4REASSEMBLY 03 Ensure that the DUT does not reassemble 
fragments of an IPv4 Packet with different Protocols  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet  
    containing an IPv4 Header  
      containing a Protocol  
        indicating different values  
  then the DUT does not reassemble and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset incremented by 
the payload size of the previous packet and the Protocol being different from the first 
fragment  
3 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT does not r eassemble and accept the IPv4 packet and does not answer with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes  Deprected in version 2   test case is  duplicated to IPv4FRAGMENTS04  
 

  
    
  203 IPv4REASSEMBLY 04 Ensure that  the DUT reassembles fragments of an IPv4 Packet 
received in the wrong order  
Synopsis  Ensure that  
  when the DUT receives a series of unordered IPv4 Fragments of a large IPv4 packet  
  then the DUT reassembles and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset correctly 
incremented but belonging to the third fragment and the ID being the same as the first 
fragment  
3 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset correctly 
incremented but belonging to the second fragment and the ID being the same as the 
first fragment  
4 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset correctly 
incremented and the ID being the same as the first fragment  
5 DUT  Sends an ICMPv4 Echo Reply  
Pass Criteria  The DUT reassembles and accept the IPv4 packet and answers correctly with an ICMPv4 
Echo Request  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes   
 
DEPRECATED   IPv4REASSEMBLY 05 Ensure that the DUT discards a duplicate of an 
IPv4Fragment during the reassembly  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet including a 
duplicated fragment  
  then the DUT discards the duplicated fragment reassembles and accepts the IPv4 
packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  204 Test Procedure  1 TESTER Send an IPv4 packet with MF  1 M ore Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset correctly 
incremented and the ID being the same as the first fragment  
3 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset indicating the 
same value as in test step 2 and the ID being the same as the first fragment  
4 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset correctly 
incremented an d the ID being the same as the first fragment  
5 DUT Sends an ICMPv4 Echo Reply not including any data from the fragment sent in 
test step 3  
Pass Criteria  The DUT discards the duplicated fragment reassembles and accepts the IPv4 packet and 
answers corr ectly with an ICMPv4 Echo Reply not including any data from the 
duplicated fragment  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes  Deprected in version 2   test case is duplicated to IPv4  REASSEMBLY 13  
 
IPv4REASSEMBLY 06 Ensure that the DUT does not reassemble fragments of an 
IPv4 Packet if no first fragment is sent  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet  
    containing an IPv4 Header  
      containing an Offset  
        indicating a value different than 0 but with correct increment  
  then the DUT does not reassemble and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset not equal to 0 
containing an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset correctly 
incremented  and the ID being the same as the first fragment  
3 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT does not reassemble and accept the IPv4 packet and does not answer with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes   
 

  
    
  205 IPv4REASSEMBLY 07 Ensure that the DUT does not reassemble fragments of an 
IPv4 Packet if some IPv4 Fragments are missing  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet including the 
first and the last fragment but missing some in between  
  then the DUT does not reassemble and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 pack et with MF  1 More Fragments and Offset correctly 
incremented and the ID being the same as the first fragment  
3 TESTER Send an IPv4 packet with MF  0 Last Fragment and Offset is incremented 
as if one more fragment would have been sent and the ID being the same as the first 
fragment  
4 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT does not reassemble and accept the IPv4 packet and does not answer with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32 
Notes   
 

  
    
  206 DEPRECATED   IPv4REASSEMBLY 08 Ensure that the DUT does not reassemble 
fragments of an IPv4 Packet if no last fragment is sent  
Synopsis  Ensure that  
  when the DUT receives a series of IPv4 Fragments of a large IPv4 packet but no last 
fragment  
  then the DUT does not reassemble and accept the IPv4 packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Para meters  
Test Procedure  1 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset  0 containing 
an ICMPv4 Echo Request where the Total length is less than the MTU  
2 TESTER Send an IPv4 packet with MF  1 More Fragments and Offset correc tly 
incremented and the ID being the same as the first fragment  
3 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT does not reassemble and accept the IPv4 packet and does not answer with an 
ICMPv4 Echo Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes  Deprected in version 2   test case is duplicated to IPv4REASSEMBLY10  
 

  
    
  207 IPv4REASSEMBLY 09 Ensure that DUT discards IPv4 Packet MF  1  
Synopsis  Ensure that  
  when the DUT receives an IPv4 packet  
    containing an IPv4 Header  
      containing Flags  
        and containing a MF flag  
          indicating that there are more fragments coming MF  1  
  then the DUT discards the IPv4 Packet silently  
Prerequisites  None  
Test setup  Topology 1  
Test Inpu t 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMPv4 Echo Request with MF  1 More Fragments  
2 DUT Does not send an  ICMP v4 Echo Re ply 
Pass Criteria  The DUT discards the IPv4 Packet silently and does not answer with an ICMPv4 Echo 
Reply  
Test Iterations   
Reference  Derived from RFC791 section 32  
Notes   

  
    
  208 IPv4REASSEMBLY1 0 IP Reassembly default time check  
Synopsis  The current recommendation for the initial timer setting is 15 seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set t o address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         TTL field set to 15  
         first half of the constructed I CMP packet whose size  
          is multiple of 8 octets  
2 TESTER Wait for ipIniReassembleTimeout  ParamToleranceTime seconds  
3 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to data size sent in first IP  
          packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         TTL field set to 15  
         last half of the constructed ICMP packet  
4 TESTER Listen for upto ListenTime seconds on DIface 0 
5 DUT Send ICMP Echo Reply  
6 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Re quest sent in two  
        fragments  
7 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         TTL field set to 15  
         first half of the constructed ICMP packet which is  
          multiple of 8 octets  
8 TESTER Wait for ipIniReassembleTimeout  ParamToleranceTime secon ds 
9 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 

  
    
  209          Destination Address field set to address of DUT  
         Fragment Offset field set to data size sent in first IP  
          packet  in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         TTL field set to 15  
         last half of the constructed ICMP packet  
10 TESTER Listen for upto ListenTime seconds on DIface 0 
11 DUT Do not send IC MP Echo Reply  
12 TESTER Wait for ipIniReassembleTimeout seconds  
13 NOTE TESTER has to wait for ipIniReassembleTimeout seconds  
        so that timeout occurs for fragment 2 stored in DUTs reassembly  
        buffer If this does not happen then it m ay lead to a scenario  
        where fragment 2 stored in the DUTs reassembly buffer  
        may be mistaken for a fragment 1 of another test case  
        So a timeout needs to occur for fragment 2 
Pass Criteria  5 DUT Send ICMP Echo Reply  
6 TESTER V erify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
11 DUT Do not send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s32 p27 Discussion An Example Reassembly Procedure 
SHOULD  

  
    
  210 IPv4REASSEMBLY 11 Check fragment with Large TTL value  
Synopsis  The initial setting of the timer is a lower bound on the reassembly waiting time This is 
because the waiting time will be increased if the Time to Live in the arriving f ragment is 
greater than the current timer value Note Here we are assuming that initial timer setting 
is 15 seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  LargeTTLValue  
Check section general Input Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment  Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         TTL field set to LargeTTLValue  
         first half of the constructed ICMP packet which is  
          multiple of 8 octets  
2 TESTER Wait for 15 seconds  
3 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to data size sent in first IP  
          packet in  unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         TTL field set to LargeTTLValue  
         last half of the constructed ICMP packet  
4 TESTER Listen for upto ListenTime seconds on DIface 0 
5 DUT Send I CMP Echo Reply  
6 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request sent in two  
        fragments  
Pass Criteria  5 DUT Send ICMP Echo Reply  
6 TESTER Verify that Identifier Seque nce Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s32 p27 Discussion An Example Reassembly Procedure MUST  

  
    
  211 IPv4REASSEMBLY 12 Check fragment with Low TTL  value  
Synopsis  The initial setting of the timer is a lower bound on the reassembly waiting time The 
waiting time will not be decreased if it is less the Time to Live in the arriving fragment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  LowTTLValue  
Check section general Input Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request Send an IP packet to  
        DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to zero  
         Flags field containing  
           MF bit set to 1  
         TTL field set to LowTTLValue  
         first half of the constructed ICMP packe t which is  
          multiple of 8 octets  
2 TESTER Wait for LowTTLValue seconds  
3 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to data size sent in first IP  
          packet in unit of 8 octets  
         Flags field containing  
           MF bit set to zero  
         TTL field set to LowTTLValue  
         last half of the constructed ICMP pa cket  
4 TESTER Listen for upto ListenTime seconds on DIface 0 
5 DUT Send ICMP Echo Reply  
6 TESTER Verify that Identifier Sequence Number and Data of ICMP  
        Echo Reply are same as those of ICMP Echo Request sent in two  
        fragments  
Pass Criteria  5 DUT Send ICMP Echo Reply  
6 TESTER Verify that Identifier Sequence Number and Data of ICMP  
Echo Reply are same as those of ICMP Echo Request sent in two  
fragments  
Test Iterations   
Notes  Derived from RFC 791 s32 p27 Discussion An Example Reassembly Procedure MUST  

  
    
  212 IPv4REASSEMBLY 13 IP Fragments overlap check  
Synopsis  In the case that two or more fragments contain the same data either identically or 
through a partial overlap this procedure will use the more recently arrived co py in the 
data buffer and datagram delivered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Construct an ICMP Echo Request containing  
         Data field set to ECU NETWORK VALIDATION TEST  
        Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field  set to zero  
         Flags field containing  
           MF bit set to 1  
         first 16 octets of the constructed ICMP packet  
2 TESTER Listen for upto FragReassemlyTimeout4 seconds on DIface 0 
3 DUT Do not send ICMP Echo Reply  
4 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to 2  
         Flags field containing  
           MF bit se t to 1  
         Data field set to DUPLICATE FRAGMENTS TEST  
5 TESTER Listen for upto FragReassemlyTimeout4 seconds on DIface 0 
6 DUT Do not send ICMP Echo Reply  
7 TESTER Send an IP packet to DIface 0 containing  
         Source Address f ield set to address of host 1 
         Destination Address field set to address of DUT  
         Fragment Offset field set to 2  
         Flags field containing  
           MF bit set to 1  
         second 8 octets of the constructed ICMP packet  
8 TEST ER Listen for upto FragReassemlyTimeout4 seconds on DIface 0 
9 DUT Do not send ICMP Echo Reply  
10 TESTER Send an IP packet to DIface 0 containing  
         Source Address field set to address of host 1 
         Destination Address field se t to address of DUT  
         Fragment Offset field set 3  
         Flags field containing  
           MF bit set to zero  

  
    
  213          remaining portion of the constructed ICMP packet  
11 TESTER Listen for upto FragReassemlyTimeout4 seconds on DIface 0 
12 DUT Send ICMP Echo Reply  
13 TESTER Verify that the received ICMP Echo Reply contains  
         Data field set to ECU NETWORK VALIDATION TEST  
Pass Criteria  3 DUT Do not send ICMP Echo Reply  
6 DUT Do not send ICMP Echo Reply  
9 DUT Do not  send ICMP Echo Reply  
12 DUT Send ICMP Echo Reply  
13 TESTER Verify that the received ICMP Echo Reply contains  
 Data field set to ECU NETWORK VALIDATION TEST  
Test Iterations   
Notes  Derived from RFC 791 s32 p29 Discussion An Example Reassembly Procedure MUST  

  
    
  214 4438  IPv4 Options  
IPv4OPTIONS 01  Multiple End of Options check  
Synopsis  End of Option List option indicates the end of the option list Note Here we are 
verifying that DUT does not crash on receiving multiple End of Options  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           Four End of Option List options  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
Pass Criteria  3 DUT Send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p16 Internet Header Format End of Option List RFC 791 s32 
p31 Options MUST  

  
    
  215 IPv4OPTIONS 02  Mul tiple No Operation option check  
Synopsis  No Operation  This option may be used between options for example to alignthe 
beginning of a subsequent option on a 32 bit boundary Note Here we are verifying that 
DUT does not crash on receiving multiple No Operation Options  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Data field set to ECU NETWORK VALIDATION TEST  
         IP Options containing  
           One Record Route option containing  
              length field set to 7  
              pointer field set to 4  
           Two No Operation options  
           One End of Option List option  
2 TESTER Listen for up to ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
Pass Criteria  3 DUT Send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p17 Internet Header Format No Operation MUST  

  
    
  216 IPv4OPTIONS 03  Multiple No Operation and End of Option check  
Synopsis  No Operation  This option may be used between options for example to alignthe 
beginning of a subsequent option on a 32  bit boundary Note Here we are verifying that 
DUT does not crash on receiving multiple No Operation and End of Options  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test  Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         Data field set to ECU NETWORK VALIDATION TEST  
         IP Options containing  
           One Security option  
           One No Operation option  
           One No Operation option  
           One End of Option List option  
           One End of Option List option  
2 TESTER Listen for up to  ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
Pass Criteria  3 DUT Send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p17 Internet Header Format No Operation MUST  

  
    
  217 IPv4OPTIONS 04  Security Option check  
Synopsis  Security Option appears at most once in a datagram  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 contai ning  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           Two Security Options  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Do not send ICMP Echo Reply  
Pass Criteria  3 DUT Do not send ICMP Echo Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p18 Internet Header Format Security MAY  

  
    
  218 IPv4OPTIONS 05  Overflo w Bit in timestamp option check  
Synopsis  The Overflow oflw 4 bits is the number of IP modules that cannot register 
timestamps due to lack of space  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp opt ion containing  
             length field set to 8  
             pointer field set to 9 one timestamp sent by TESTER  
             oflw field set to zero  
             flg field set to zero  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
         IP Internet Timestamp option containing  
            oflw field set to 1  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
 IP Internet Timestamp option containing  
 oflw field set to 1  
Test Iterations   
Notes  Derived from RFC 791 s31 p22 Internet Header Format Internet Timestamp MAY  

  
    
  219 IPv4OPTIONS 06  Timestamp value check  
Synopsis  0  time stamps only stored in consecutive 32 bit words  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 9 one timestamp  
             flg field set to zero  
             one timestamp  
             octets 8 11 set to zero  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send  ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
         IP Internet Timestamp option containing  
           octets 8 11 set to timestamp value non zero  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that rece ived ICMP Echo Reply contains  
 IP Internet Timestamp option containing  
 octets 8 11 set to timestamp value non zero  
Test Iterations   
Notes  Derived from RFC 791 s31 p22 Internet Header Format Internet Timestamp MAY  

  
    
  220 IPv4OPTIONS 07  Ttimestamp  value internet address and sequence chec k 
Synopsis  1  each timestamp is preceded with internet address of the registering entity  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Para meters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 20  
             pointer field set to 13 one timestamp and one  
                                       internet address  
             flg field set to 1  
             one internet address set to address of host 1 
             one timestamp  
             octets 12 19 set to zero  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply  contains  
         IP Internet Timestamp option containing  
           octets 12 15 set to address of DUT  
           octets 16 19 set to timestamp value non zero  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo R eply contains  
 IP Internet Timestamp option containing  
 octets 12 15 set to address of DUT  
 octets 16 19 set to timestamp value non zero  
Test Iterations   
Notes  Derived from RFC 791 s31 p22 Internet Header Format Internet Timestamp MAY  
IPv4 OPTIONS 08  Relation between timestamp  its own address  
Synopsis  3  the internet address fields are prespecified An IP module only registers its 
timestamp if it matches its own address with the next specified internet address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  221 Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 5  
             flg field set to 3  
             one internet address set to address of DUT  
             octets 4 7 set to zero  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
         IP Interne t Timestamp option containing  
           octets 4 7 set to timestamp value non zero  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
 IP Internet Timestamp option containing  
 octets 4 7 set to t imestamp value non zero  
Test Iterations   
Notes  Derived from RFC 791 s31 p22 Internet Header Format Internet Timestamp MAY  

  
    
  222 IPv4OPTIONS 09 Relation between timest amp  its own address negative  
Synopsis  3  the internet address fields are prespecified An IP module only registers its 
timestamp if it matches its own address with the next specified internet address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 5  
             flg field set to 3  
             one internet address set to different address  
              of DUT  
             octets 4 7 set to zero  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
         IP Internet Timestamp option contai ning  
           octets 4 7 set to zero DUT did not register  
            its timestamp  
Pass Criteria  3 DUT Send ICMP Echo Reply  
4 TESTER Verify that received ICMP Echo Reply contains  
 IP Internet Timestamp option containing  
 octets 4 7 set to  zero DUT did not register  
its timestamp  
Test Iterations   
Notes  Derived from RFC 791 s31 p22 Internet Header Format Internet Timestamp MAY  
IPv4OPTIONS10 Room for timestamp check  
Synopsis  If there is some room but not enough room for a full ti mestamp to be inserted the 
original datagram is considered to be in error and is discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  223 Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 11  
             flg field set to zero  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Discard ICMP Echo Request and do not sen d ICMP Echo  
        Reply  
Pass Criteria  3 DUT Discard ICMP Echo Request and do not send ICMP Echo  
Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p23 Internet Header Format Internet Timestamp MAY  

  
    
  224 IPv4OPTIONS11 Overflow bits validation  
Synopsis  If the overflow count itself overflows the original datagram is considered to be in 
error and is discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Tim estamp option containing  
             length field set to 8  
             pointer field set to 9 one timestamp sent by TESTER  
             oflw field set to 15 oflw is a 4 bits field  
             flg field set to zero  
             one timestamp v alue  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Discard ICMP Echo Request and do not send ICMP Echo  
        Reply  
Pass Criteria  3 DUT Discard ICMP Echo Request and do not send ICMP Echo  
Reply  
Test Iterations   
Notes  Derived from RFC 791 s31 p23 Internet Header Format Internet Timestamp MAY  

  
    
  225 IPv4OPTIONS12 Check room for timestamp  
Synopsis  If there is some room but not enough room for a full timestamp to be inserted an ICMP 
parameter problem message may be sent  to the source host  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 12  
             pointer field set to 11  
             flg field set to zero  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Paramete r Problem Message  
        contains  
         Pointer field set to 22 Basic IP Header length 20   
                                   third octet pointer field of  
                                   Internet Timestamp option  
Pass Criteria  3 DUT Se nd ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
contains  
 Pointer field set to 22 Basic IP Header length 20   
third octet pointer field of  
Internet Timestamp option  
Test Iterations   
Notes  Derived from RFC 791 s31 p23 Internet Header Format Internet Timestamp MAY  
IPv4OPTIONS13 Validate overflow bits  
Synopsis  If the overflow count itself overflows an ICMP parameter problem message may be 
sent to the source host  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  226 Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           One Internet Timestamp option containing  
             length field set to 8  
             pointer field set to 9 one timestamp sent by TESTER  
             oflw field set to 15 oflw is a 4 bits field  
             flg field set to zero  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that t he received ICMP Parameter Problem Message  
        contains  
         Pointer field set to 23 Basic IP Header length 20   
                                   fourth octet oflw field  
Pass Criteria  3 DUT Send ICMP Parameter Problem Message  
4 TESTE R Verify that the received ICMP Parameter Problem Message  
contains  
 Pointer field set to 23 Basic IP Header length 20   
fourth octet oflw field  
Test Iterations   
Notes  Derived from RFC 791 s31 p23 Internet Header Format Internet Timestamp MAY  

  
    
  227 IPv4OPTIONS14 Timestamp option occurrence check  
Synopsis  The timestamp option appears at most once in a datagram  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an ICMP Echo Request to DIface 0 containing  
         IP Source Address field set to address of host 1 
         IP Destination Address field set to address of DUT  
         IP Options containing  
           Two Interne t Timestamp options each containing  
             length field set to 12  
             pointer field set to 9  
             flg field set to zero  
             one timestamp value  
2 TESTER Listen for upto ListenTime seconds on DIface 0 
3 DUT S end ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
        contains  
         Pointer field set to 32 Basic IP Header length 20   
                                   one internet Timestamp option  
                                   length 12  
Pass Criteria  3 DUT Send ICMP Parameter Problem Message  
4 TESTER Verify that the received ICMP Parameter Problem Message  
contains  
 Pointer field set to 32 Basic IP Header length 20   
one internet Timest amp option  
length 12  
Test Iterations   
Notes  Derived from RFC 791 s31 p23 Internet Header Format Internet Timestamp MAY  

  
    
  228 45 Dynamic configuration of IPv4 Link Local Address  
451  General  
 
The scope of this chapter is to specify test cases for the Dynamic IPv4 address Autoconfiguraron 
Protocol IPv4 Autoconfig based on the following standards  
   
 RFC 3927  Dynamic Configuration of IPv4 Link Local Addresses  
452  Simulated topologies  
 
 
453  Required topology related configuration  
 
This suite expects to be running against any IP enabled network interface which supports acquisitiong of 
IP address through the following methods   
 IPv4 Link Local Autoconfiguration  
 DHCP  
 
 The following information are obtained from the unused IP network  configurations on the TESTER  
 IP Address of all the emulated servers  
 IP Address Pool to be offered by these emulated DHCP Servers  
 
 DIface 0 TIface 0 
ECU 
DUT 
TOPOLOGY 1 

  
    
  229 454  Coverage  
 
   
Specification 
Document                Sub
section  Test Category           Test  
Numbers    
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  19 When to configure 
a 
linklocal address      IPv4AUTOCONFINTRO1 to 
IPv4AUTOCONFINTRO6  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  21 221 
22     Address Selection 
Defense and 
Delivery             IPv4AUTOCONF ADDRESSSELECTION 1 to 
IPv4AUTOCONF ADDRESSSELECTION 16  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresse s 24 12   Announcing an 
Address    IPv4AUTOCONFANNOUNCING1 to 
IPv4AUTOCONFANNOUNCING7  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  25     Conflict Detection 
and Defense           IPv4AUTOCONFCONFLICT1 to 
IPv4AUTOCONFCONFLICT12  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  262   Forwarding Rules         IPv4AUTOCONFFORWARDING1 to 
IPv4AUTOCONFFORWARDING8  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  27     LinkLocal Packets 
Are Not Forwared           IPv4AUTOCONFLINKLOCAL PACKETS1 to 
IPv4AUTOCONFLINKLOCAL PACKETS4  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  33     Interaction with 
Hosts with 
Routable 
Addresses      IPv4AUTOCONFROUTABLE ADDRESSES1  
IPv4AUTOCONFROUTABLE ADDRESSES2  
RFC 3927 Dynamic 
Configuration of IP 
LinkLocal Addresses  4 Healing of Network  
Partitions             IPv4AUTOCONFNETWORKPARTITIONS1  
TOTAL    56 
 
 
 
455  Parametersconstants used in the tests  
Parameters used in test  Description  
SERVER 1 This denotes 1st DHCP Server simulated by TESTER  
ROUTABLEIPADDR1  This denotes IP address of 1st DHCP Server simulated by TESTER  
ROUTABLEIPADDR2  This denotes IP address offered to the 1st DUT interface by the 
1st DHCP Server  
DIFACE 0IPLINKLOCAL ADDR  This denotes Link local IP address of 1st DUT interface  
AIFACE 0IPLINKLOCAL ADDR  This denotes link local IP Address of 1st TESTER interface  
ARBITRARY IPLINKLOCAL ADDR  This denotes an IP link local address with value 1692541010  
PARAMPROCESSTIME  Amount of time TESTER will wait after sending a packet for 
which there is no immediate manifestation but later some other 

  
    
  230 event will decide whether the DUT has correctly accepted the 
packet or not  
PARAMTOLERANCETIME  Tolerance time associated with an event When waiting or 
listening then this number will be added with the actual wait 
time or listen time  
PARAMLISTENTIME  This is the maximum time interval for which  TESTER waits for a 
packet for cases when a certain event has been triggered on the 
DUT either by some protocol timer or using some external 
mechanism script  
DIface 0 This denotes 1st DUT interface  
MAC ADDR1  This value is equal to the value provided for IEEE First Unused 
MAC Address  
MAC ADDR2  This is another value for MAC address which is auto generated 
from IEEE First Unused MAC Address  
DIFACEOMACADDR  This is the MAC address of 1st DUT interface  
LINK LOCAL NETADDR  This deno tes the Link local network ID ie 16925400  
CONSTANT  Description  
PROBEMININMILLISEC   This indicates the value of PROBEMIN constant specified in 
RFC 3927 pg 26 in milliseconds ie the value is 1000 
milliseconds  
PROBEMAXINMILLISEC   This indicates the value of PROBEMAX constant specified in 
RFC 3927 pg 26 in milliseconds ie the value is 2000 
milliseconds  
ANNOUNCEWAIT  This indicates the value of ANNOUNCEWAIT constant specified 
in RFC 3927 pg 26 ie the value is 2 seconds  
ANNOUNCEINTERVAL  This indicates the value of ANNOUNCEINTERVAL constant 
specified in RFC 3927 pg 26 ie the value is 2 seconds  
   
ANNOUNCEINTERVALINMILLISEC  This indicates the value of ANNOUNCEINTERVAL constant 
specified in RFC 3927 pg 26 in mi lliseconds ie the value is 2000 
milliseconds  
PROBEMINMILLISEC  This indicates the value of PROBEMIN constant specified in RFC 
3927 pg 26 in milliseconds ie the value is 1000  
PROBEMINMILLISEC  This indicates the value of PROBEMIN constant specified in RFC 
3927 pg 26 in milliseconds ie the value is 1000  
RATELIMITINTERVAL  This indicates the value of RATELIMITINTERVAL constant 
specified in RFC 3927 pg 26 ie the value is 60 seconds  
DEFENDINTERVAL  This indicates the value of DEF ENDINTERVAL constant 
specified in RFC 3927 pg 26 ie the value is 10 seconds  
ETHERNETBROADCASTADDRESS  This indicates the Ethernet Broadcast Address This value is 
equal to FFFFFFFFFFFF  
BROADCAST IP Broadcast IP address of the network  
NULL MAC ADDRESS  This indicates a MAC address with value 000000000000  

  
    
  231 456  Tests  
4561  Introduction  
IPv4AUTOCONFINTRO 01  Link local address configurability condition in 
presence of operable routable address  
Synopsis  When an operable routable address is available on an interface the host SHOULD NOT 
also assign an IPv4 Link Local address on that interface  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime  on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
6 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
7 DUT Sends D HCPREQUEST Message  
8 TESTER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP  Address set to  
           LINK LOCAL NETADDR  
10 DUT Does not send ARP Request Message  

  
    
  232 11 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
10 DUT Does not send ARP Request Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p8 Section 19  SHOULD  
IPv4AUTOCONFINTRO 02  Link local address preference condition in presense of 
operable routable address  
Synopsis  If a host finds that an interface that was previously configured with an IPv4 Link Local 
address now has an operable routable address available the host MUST use the routable 
address when initiating new communications and MUST cease advertising the avail ability of 
the IPv4 Link Local address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Li stens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Addres s field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIG URE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  

  
    
  233          Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Des tination Hardware Address set to  
           DIFACE 0MAC ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to  AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
14 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
15 TESTER SERVER 1 Listens  up to  ParamListenTime on DIf ace0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
18 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
19 DUT Sends DHCPRE QUEST Message  
20 TESTER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
21 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Addres s set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
22 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to 0000  
         Source IP Address set to ROUTABLEIPA DDR2  
         Destination IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR1  
23 DUT Sends ARP Probe or ARP Response  
24 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  

  
    
  234          Destination IP Address set to ROUTABLEIPADDR2  
25 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to ROUTABLEIPADDR 2 
         Destination IP Address set to ROUTABLEIPADDR1  
26 DUT Sends ARP Request Message  
27 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends A RP Request Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends DHCPREQUEST Message  
23 DUT Sends ARP Probe or ARP Response  
26 DUT Sends ARP Request Message  
Test 
Iterations   
Notes  Derived from RFC 3927 p9 Section 19  MUST  
IPv4AUTOCONFINTRO 03  Link local address usage continuation condition  
Synopsis  The host SHOULD continue to use the IPv4 Link Local address for communications already 
underway and MAY continue to accept new communications addressed to the IPv4 Link 
Local address Note In this test case TESTER checks that at that time when DUT is assigning 
a routable address on its interface it will continue to use its linklocal address for any 
undergoing communications until the routable address assignment through DHCP for 
example is  complete  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally  configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  

  
    
  235 5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message rece ived from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL for DUT 
to assign the  
        linklocal address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP E cho Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Destination Hardware Address set to  
           DIFACE 0MAC ADDR to verify that DUT has assigned the link local ip  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to A IFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ICMP Echo Reply Message  
13 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
14 TESTER SERVER 1 Listens  up to  20 seconds on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
15 DUT Keeps on sending ICMP Echo Reply Messages  
16 TESTER Stores the count of ICMP echo replies received from DIface 0 
         in LINKLOCALECHOREPLYCOUNT1  
17 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
18 TESTER Externally cause DUT to bring up DIface 0 
19 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
20 DUT Sends DHCPDISCOVER Message  
21 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Add ress set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIM E3  

  
    
  236 22 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
23 DUT Sends DHCPREQUEST Message  
24 TESTER SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
25 TESTER SERVER 1 Kee ps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
26 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
27 TESTER SERVER 1 Listens  up to  20 seconds on DI face 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
        and 
         Source IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTAB LEIPADDR1  
28 DUT Keeps on sending ICMP Echo Reply Messages  
29 TESTER Counts the number of ICMP echo replies received from DIface 0 with  
        i   Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
             Destination IP Address set t o AIFACE 0IPLINKLOCAL ADDR  
             increments LINKLOCALECHOREPLYCOUNT1 and stores  
             the cumulative count in LINKLOCALECHOREPLYCOUNT2  
        ii  Source IP Address set to ROUTABLEIPADDR2  
             Destination IP Addr ess set to ROUTABLEIPADDR1  
             and stores the count in ROUTABLEECHOREPLYCOUNT  
30 TESTER Verify that LINKLOCALECHOREPLYCOUNT2 
LINKLOCALECHOREPLYCOUNT1 is greater than 0  
31 TESTER Verify that ROUTABLEECHOREPLYCOUNT is great er than 0  
32 TESTER Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ICMP Echo Reply Message  
15 DUT Keeps on sending ICMP Echo Reply Messages  
20 DUT Sends D HCPDISCOVER Message  
23 DUT Sends DHCPREQUEST Message  
28 DUT Keeps on sending ICMP Echo Reply Messages  
30 TESTER Verify that LINKLOCALECHOREPLYCOUNT2 
LINKLOCALECHOREPLYCOUNT1 is greater than 0  

  
    
  237 31 TESTER Verify that ROUTABLEECHOREPLYCOUN T is greater than 0  
Test 
Iterations   
Notes  Derived from RFC 3927 p9 Section 19  SHOULD  
IPv4AUTOCONFINTRO 04  Link local address usage for new communication  
Synopsis  The host SHOULD continue to use the IPv4 Link Local address for communications already 
underway and MAY continue to accept new communications addressed to the IPv4 Link 
Local address Note In this test case TESTER checks that at that time when DUT is as signing 
a routable address on its interface it will continue to use its linklocal address for any 
undergoing communications till the routable address assignment and also it will accept 
new communications addresses to the link local address until the rout able address 
assignment is complete  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field o f ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL for DUT 
to assign the  
        linklocal address to DIface 0 
9 DUT CONFIGURE Conf igure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  

  
    
  238          Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT C ONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
11 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ether net Destination Hardware Address set to  
           DIFACE 0MAC ADDR to verify that DUT has assigned the link local ip  
12 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
13 DUT Sends ICMP Echo Reply Message  
14 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Destination Hardware Address set to  
           DIFACE 0MAC ADDR  
15 TESTER SERVER 1 Listens  up to  20 seconds on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
16 DUT Keeps on sending ICMP Echo Reply Messages  
17 TESTER Stores the count of ICMP echo replies received from DIface 0 
         in LINKLOCALECHOREPLYCOUNT1  
18 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
19 TESTER Externally cause DUT to bring up DIface 0 
20 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
21 DUT Sends DHCPDISCO VER Message  
22 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
23 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
24 DUT Sends DHCPREQUEST Message  
25 TESTER SERV ER1 Sends DHCPACK Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  

  
    
  239          yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPI PADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
26 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFAC E0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
27 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR1  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
28 TESTER SERVER 1 Keeps on sending ICMP Echo Request Messages to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
29 TESTER SERVER 1 Listens  up to  20 seconds on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
        and 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR1  
        and 
         Source IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR1  
30 DUT Keeps on sending ICMP Echo Reply Messages  
31 TESTER Counts the number of ICMP echo replies received from DIface 0 with  
        i   Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
             Destination IP Addres s set to AIFACE 0IPLINKLOCAL ADDR  
             increments LINKLOCALECHOREPLYCOUNT1 and stores  
             the cumulative count in LINKLOCALECHOREPLYCOUNT2  
        ii  Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
             Dest ination IP Address set to AIFACE 0IPLINKLOCAL ADDR1  
             and stores it in LINKLOCALECHOREPLYCOUNT3  
        iii Source IP Address set to ROUTABLEIPADDR2  
             Destination IP Address set to ROUTABLEIPADDR1  
             and stores it in ROUTABLEECHOREPLYCOUNT  
32 TESTER Verify that LINKLOCALECHOREPLYCOUNT2 
LINKLOCALECHOREPLYCOUNT1 is greater than 0  
33 TESTER Verify that LINKLOCALECHOREPLYCOUNT3 is greater than 0  
34 TESTER Verify that ROUTABLEECHORE PLYCOUNT is greater than 0  
35 TESTER Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
13 DUT Sends ICMP Echo Reply Message  

  
    
  240 16 DUT Keeps on sending ICMP Echo Reply Messages  
21 DUT Sends DHCPDISCOVER Message  
24 DUT Sends DHCPREQUEST Message  
30 DUT Keeps on sending ICMP Echo Reply Messages  
32 TESTER Verify that LINKLOCALECHOREPLYCOUNT2 
LINKLOCALECHOREPLYCOUNT1 is greater than 0  
33 TESTER Verify that  LINKLOCALECHOREPLYCOUNT3 is greater than 0  
34 TESTER Verify that ROUTABLEECHOREPLYCOUNT is greater than 0  
Test 
Iterations   
Notes  Derived from RFC 3927 p9 Section 19  MAY  
IPv4AUTOCONFINTRO 05  Link local address configurability condition I in 
absense of operable routable address  
Synopsis  If a host finds that an interface no longer has an operable routable address available the 
host MAY identify a usable IPv4 Link Local address and assign tha t address to the 
interfaceWays in which an operable routable address might cease to be available on an 
interface include Removal of the address from the interface through manual configuration  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to assign any static IP on DIface 0 
2 DUT CONFIGURE Externally cause DUT to remove the static I P on DIface 0 
3 DUT CONFIGURE Externally cause DUT to reboot DIface 0 
4 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
5 DUT Sends ARP Request Message  
6 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
7 TESTER Wait till PROBEMAX2ANNOUNCE WAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
8 DUT CONFIGURE Configure DUT to add a static route with  

  
    
  241          Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
9 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCA LADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Destination Hardware Address set to  
           DIFACE 0MAC ADDR  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Ad dress set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 DUT Sends ARP Request Message  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  5 DUT Sends ARP Request Message  
11 DUT Sends ARP Request Message  
Test 
Iterations   
Notes  Derived from RFC 3927 p9 Section 19  MAY  
IPv4AUTOCONFINTRO 06  Link local address configurability condition II in 
absense of operable routable address  
Synopsis  If a host finds that an interface no longer has an operable routable address available the 
host MAY identify a usable IPv4 Link Local address and assign that address to the 
interfaceWays in which an operable routable address might cease to be available o n an 
interface include Expiration of the lease on the address assigned through DHCP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 

  
    
  242 Procedure  3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Se nds DHCPDISCOVER Message  
5 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option conta ining  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
6 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TEST ER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Addr ess set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to 0000  
         Source IP Address set to ROUTABLEIP ADDR2  
         Destination IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR1  
11 DUT Sends ARP Probe or ARP Response  
12 TESTER Wait till PARAMLISTENTIME3 PARAMTOLERANCETIME so  
        that t he lease time of the routable IP address of DIFace 0 gets expired  
13 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
14 DUT Sends ARP Re quest Message  
15 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
16 TESTER Wait till PROBEMAX2ANNOUNCEWAIT ANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
17 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
18 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  

  
    
  243         DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
19 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFAC E0IPLINKLOCAL ADDR  
20 DUT Sends ARP Request Message  
21 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ARP Probe or ARP Response  
14 DUT Sends A RP Request Message  
20 DUT Sends ARP Request Message  
Test 
Iterations   
Notes  Derived from RFC 3927 p9 Section 19  MAY  

  
    
  244 4562  Address Selection Defense and Delivery  
IPv4AUTOCONFADDRESS SELECTION 01  Future use of first 256 and last 256 
addresses in the 16925416 prefix  
Synopsis  The first 256 and last 256 addresses in the 16925416 prefix are reserved for future use 
and MUST NOT be selected by a host using this dynamic configuration mechanism  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
         Target IP Address is greater than 1692540255  
         Target IP Address is less than or equal to 169254254255  
8 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 Target IP Address is greater than 1692540255  
 Target IP Address is less than or equal to 169254254255  
Test Iterations  
 
Notes  Derived from RFC 3927 p10 Section 21  MUST  

  
    
  245 IPv4AUTOCONFADDRESS SELECTION 02  Use of persistent storage for each 
interface  record  
Synopsis  Hosts that are equipped with persistent storage MAY for each interface record the IPv4 
address they have selected On booting hosts with a previously recorded address SHOULD 
use that address as their first candidate when probing  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TES TER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till  PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Externally cause DUT to reboot DIface 0 
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
11 DUT Sends ARP Request Message  
12 TESTER Verify that received ARP Request Message contains  
         Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
11 DUT Sends ARP Request Message  
12 TESTER Verify that received ARP Request Message contains  
 Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p10 Section 21  SHOULD  

  
    
  246 IPv4AUTOCONFADDRESS SELECTION 03  Need for probing to detect address 
already in use  
Synopsis  A host probes to see if an address is already in use by broadcasting an ARP Request for 
the desired address Note this is an ARP Probe Request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP  Probe  Request Message contains  
         Ethernet Destination Hardware Address is set to  
           ETHERNETBROADCASTADDR  
8 CLEANUP Externally cause DUT  to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 Ethernet Destination Hardware Address is set to  
ETHERNETBROADCASTADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  247 IPv4AUTOCONFADDRESS SELECTION 04  Need for not probing periodically to 
detect address already in use  
Synopsis  A host MUST NOT perform this check periodically as a matter of course  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE E xternally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DI FACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to A IFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIfac e0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Destination Hardware Address set to  
           DIFACE 0MAC ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
14 DUT Does not send ARP Request Message  
15 CLEANUP Externally cause DUT to shutdown DIface 0 

  
    
  248 Pass Criteria  4 DUT Sen ds DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ARP Request Message  
14 DUT Does not send ARP Request Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p11 Section 22   
MUST  

  
    
  249 IPv4AUTOCONFADDRESS SELECTION 05  Sender hardware address field usage  
Synopsis  The client MUST fill in the sender hardware address field of the ARP Request with the 
hardware address of the interface through which it is sending the packet Note This holds 
true for all kinds of ARP frames  Request Response Probe  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of  Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
         Source Hardware Address is set to DIFACE 0MAC ADDR  
8 CLEANUP Externally cause DUT to s hutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 Source Hardware Address is set to DIFACE 0MAC ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  250 IPv4AUTOCONFADDRESS SELECTION 06  Sender IP address setting  
Synopsis  The sender IP address field MUST be set to all zeroes Note this is testing for the ARP 
Probe frame  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SE RVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
         Sender IP Address is set to 0000  
8 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DU T Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 Sender IP Address is set to 0000  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  251 IPv4AUTOCONFADDRESS SELECTION 07  Target hardware address setting and 
receive check  
Synopsis  The target hardware address field is ignored and SHOULD be set to all zeroes  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Messa ge 
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message c ontains  
         Target Hardware Address is set to NULL MAC ADDRESS  
8 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 Target Hardware Address is set to NULL MAC ADDRESS  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  SHOULD  

  
    
  252 IPv4AUTOCONFADDRESS SELECTION 08  Target IP address field setting  
Synopsis  The target IP address field MUST be set to the address being probed  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIf ace0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends  ARP Request Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  253 IPv4AUTOCONFADDRESS SELECTION 09  Probing time interval and packet count  I 
Synopsis  When ready to begin probing the host should then wait for a random time interval selected 
uniformly in the range zero to PROBEWAIT seconds and should then send PROBENUM 
probe packets each of these probe packets spaced randomly PROBEMIN to PROBEMAX 
seconds apart Note  Here TESTER is verifying that the number of PROBES received is equal 
to PROBENUM  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Liste ns up to  ParamListenTime on DIface 0 
         Source IP Address set to 0000  
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 CLEANUP Externally cause DUT to  shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  254 IPv4AUTOCONF ADDRESSSELECTION 10 Probing time interval and packet count  
II 
Synopsis  When ready to begin probing the host should then wait for a random time interval selected 
uniformly in the range zero to PROBEWAIT seconds and should then send PROBENUM 
probe packets each of these probe packets spaced randomly PROBEMIN  to PROBEMAX 
seconds apart Note  Here TESTER is verifying that the time gap between consecutive 
probes falls in the range PROBEMININMILLISEC to PROBEMAXINMILLISEC 
Tolerance is 50 milliseconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER Verify that the time interval between  
        reception of last two ARP Requests  
         is greater than  
        PROBEMININMILLISEC    50 milli second  
8 TESTER Verify that the time interval between  
        rece ption of last two ARP Requests  
         is less than  
        PROBEMAXINMILLISEC    50 milli second  
9 TESTER Verify that the time interval between  
        reception of 1st ARP Request and second last ARP Request  
         is greater than  
        PROBEMININMILLISEC    50 milli second  
10 TESTER Verify that the time interval between  
        reception of 1st ARP Request and second last ARP Request  
         is less than  
        PROBEMAXINMILLISEC    50 milli second  
11 CLEANUP Exter nally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
7 TESTER Verify that the time interval between  

  
    
  255 reception of last two ARP Requests  
is greater than  
PROBEMININMILLISEC  50 milli second  
8 TESTER Verify that the time interval between  
reception of last two ARP Requests  
is less than  
PROBEMAXINMILLISEC  50 milli second  
9 TESTER Verify that the time interval between  
reception of 1st ARP Request and second last ARP R equest  
is greater than  
PROBEMININMILLISEC  50 milli second  
10 TESTER Verify that the time interval between  
reception of 1st ARP Request and second last ARP Request  
is less than  
PROBEMAXINMILLISEC  50 milli second  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  256 IPv4AUTOCONF ADDRESSSELECTION 11 Probing and reception of ARP packet  I 
Synopsis  If during this period from the beginning of the probing process until ANNOUNCEWAIT 
seconds after the last probe pac ket is sent the host receives any ARP packet Request or 
Reply on the interface where the probe is being performed where the packets sender IP 
address is the address being probed for then the host MUST treat this address as being in 
use by some oth er host and MUST select a new pseudo random address and repeat the 
process Note  Here TESTER is sending a conflicting ARP request packet with sender IP 
address equal to the link local probed address and verifies that DUT sends another ARP 
Probe with a different link local probe address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network  Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to 255255255255  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Mess age 
11 TESTER Verify that received ARP Request Message contains  

  
    
  257  Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  258 IPv4AUTOCONF ADDRESSSELECTION 12 Probing and reception of ARP packet  II 
Synopsis  If during this period from the beginning of the probing process until ANNOUNCEWAIT 
seconds after the last probe packet is sent the host receives any ARP packet Request or 
Reply on the interface where the probe i s being performed where the packets sender IP 
address is the address being probed for then the host MUST treat this address as being in 
use by some other host and MUST select a new pseudo random address and repeat the 
process Note  Here TESTER is s ending a conflicting ARP Response packet with sender IP 
address equal to the link local probed address and verifies that DUT sends another ARP 
Probe with a different link local probe address  
Prerequisites  Check section prerequisites  
Test setup  Topology  1 
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Req uest Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER SERVER 1 Sends ARP Response Message to  DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to 255255255255  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected N etwork Address of Target IP Address set to  
           LINK LOCAL NETADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
12 CLEANUP  Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  

  
    
  259 11 TESTER Verify that received ARP Request Message contains  
 Target IP Address is no t set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  
IPv4AUTOCONF ADDRESSSELECTION 13 Probing and reception of ARP packet  III 
Synopsis  In addition if during this period the host receives any ARP Probe where the packets target 
IP address is the address being probed for and the packets sender hardware address is 
not the hardware address of the interface the host is attempting to con figure then the host 
MUST similarly treat this as an address conflict and select a new address as above  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Liste ns up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Addres s field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to 0000  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
12 CLEANUP Externally cause DUT to shutdown DIface 0 

  
    
  260 Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT  Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  
IPv4AUTOCONF ADDRESSSELECTION 14 Conflict resolution  I 
Synopsis  If the number of conflicts exceeds MAXCONFLICTS then the host MUST limit the rate at 
which it probes for new addresses to no more than one new address per 
RATELIMITINTERVAL N ote  Here TESTER checks that if number of conflicts reach 
MAXCONFLICTS10 then the host should not send any ARP request within 
RATELIMITINTERVAL seconds after the 10th conflict  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime o n DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TE STER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Ad dress of Target IP Address set to  

  
    
  261            LINK LOCAL NETADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
13 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
14 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Tar get IP Address set to  
           LINK LOCAL NETADDR  
15 DUT Sends ARP Request Message  
16 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
17 TESTER SERVER 1 retrieves  the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
18 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
19 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Addre ss set to  
           LINK LOCAL NETADDR  
20 DUT Sends ARP Request Message  
21 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
22 TESTER SERVER 1 retrieves the value o f Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
23 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
24 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
25 DUT Sends ARP Request Message  
26 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
27 TESTER SERVER 1 retrieves the value of Destinat ion Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
28 TESTER SERVER 1 Sends ARP Request Message to DUT through  

  
    
  262         DIface 0 containing  
         Source IP Add ress set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
29 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
30 DUT Sends ARP Request Message  
31 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
32 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
33 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
34 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
35 DUT Sends ARP Request Message  
36 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
37 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
38 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
39 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
40 DUT Sends ARP Request Message  
41 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
42 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field o f ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
43 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
44 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
45 DUT Sends ARP Request Message  
46 TESTER Verify that received ARP Request Message contains  

  
    
  263          Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
47 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Reques t Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
48 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
49 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
50 DUT Sends ARP Request Message  
51 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
52 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message re ceived from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
53 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destinati on IP Address set to DIFACE 0IPLINKLOCAL ADDR  
54 TESTER SERVER 1 Listens  up to  RATELIMITINTERVAL second on  
        DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
55 DUT Does not se nd ARP Request Message  
56 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message c ontains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
15 DUT Sends ARP Request Message  
16 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
20 DUT Sends ARP Requ est Message  
21 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
25 DUT Sends ARP Request Message  
26 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
30 DUT Sends ARP Request Message  
31 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  

  
    
  264 35 DUT Sends ARP Request Message  
36 TESTER Verif y that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
40 DUT Sends ARP Request Message  
41 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
45 DUT Sends ARP Request Message  
46 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
50 DUT Sends ARP Request Message  
51 TESTER Verify that received ARP Request M essage contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
55 DUT Does not send ARP Request Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221  MUST  

  
    
  265 IPv4AUTOCONF ADDRESSSELECTION 15 Conflict resolution  II 
Synopsis  If the number of conflicts exceeds MAXCONFLICTS then the host MUST limit the rate at 
which it probes for new addresses to no more than one new address per 
RATELIMITINTERVAL Note  Here TESTER checks that if number of conflicts reach 
MAXCONF LICTS10 then the host should send only 1 ARP request after the 
RATELIMITINTERVAL seconds get over within the next RATELIMITINTERVAL seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCP DISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to 
           LINK LOCAL NETADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVER 1 retrieves the value of Desti nation Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
13 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
14 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 

  
    
  266          Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
15 DUT Sends ARP Request Message  
16 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
17 TESTER SERVER 1 retrieves the value of Destination Proto col 
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
18 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
19 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCA LNETADDR  
20 DUT Sends ARP Request Message  
21 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
22 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
23 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
24 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
25 DUT Sends ARP Request Message  
26 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
27 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address fiel d of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
28 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCA LADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
29 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
30 DUT Sen ds ARP Request Message  
31 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
32 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Req uest Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  

  
    
  267 33 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
34 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
35 DUT Sends ARP Reque st Message  
36 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
37 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message  received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
38 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destin ation IP Address set to DIFACE 0IPLINKLOCAL ADDR  
39 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
40 DUT Sends ARP Request Message  
41 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
42 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received fr om DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
43 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Add ress set to DIFACE 0IPLINKLOCAL ADDR  
44 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
45 DUT Sends ARP Request Message  
46 TESTER V erify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
47 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
48 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
49 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
50 DUT Sends ARP Request Message  

  
    
  268 51 TESTER Verify that r eceived ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
52 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
53 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
54 TESTER SERVER 1 Listens  up to  RATELIMITINTERVAL second on  
        DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
55 DUT Does not send ARP Request Message  
56 TESTER  SERVER 1 Listens  up to  RATELIMITINTERVAL second on  
        DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
57 DUT Sends ARP Request Message  
58 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
59 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFA CE0IPLINKLOCAL ADDR  
60 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
61 TESTER SERVER 1 Listens  up to  RATELIMITINTERVAL second on  
        DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
62 DUT Does not send ARP Request Message  
63 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
15 DUT Sends ARP Request Message  
16 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
20 DUT Sends ARP Request Message  
21 TESTER Verify that received ARP Requ est Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  

  
    
  269 25 DUT Sends ARP Request Message  
26 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
30 DUT S ends ARP Request Message  
31 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
35 DUT Sends ARP Request Message  
36 TESTER Verify that received ARP Request Message contains  
 Targe t IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
40 DUT Sends ARP Request Message  
41 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
45 DUT Sends ARP Request Message  
46 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
50 DUT Sends ARP Request Message  
51 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to D IFACE 0IPLINKLOCAL ADDR  
55 DUT Does not send ARP Request Message  
57 DUT Sends ARP Request Message  
58 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
62 DUT Does not send AR P Request Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221   MUST  

  
    
  270 IPv4AUTOCONF ADDRESSSELECTION 16 IPv4 Link Local address claim condition  
I 
Synopsis  If by ANNOUNCEWAIT seconds after the transmission of the last ARP Probe no 
conflicting ARP Reply or ARP Probe has been received then the host has successfully 
claimed the desired IPv4 Link Local address  
Prerequisites  Check section prerequisites  
Test  setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DI face 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TE STER Wait till ANNOUNCEWAIT for DUT to assign the link local  
        address to DIface 0 
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Sender Hardware Address set to MAC ADDR1  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 DUT Sends ARP Response Message  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
11 DUT  Sends ARP Response Message  

  
    
  271 Test Iterations  
 
Notes  Derived from RFC 3927 p12 Section 221   MUST  

  
    
  272 4563  Announcing an Address  
IPv4AUTOCONFANNOUNCING 01  An ARP announcement  I 
Synopsis  An ARP announcement is identical to the ARP Probe described above except that now the 
sender and target IP addresses are both set to the hosts newly selected IPv4 address In 
this document the term ARP Announcement is used to refer to an ARP Request p acket 
broadcast on the local link identical to the ARP Probe described above except that both 
the sender and target IP address fields contain the IP address being announced Note Here 
TESTER checks that after receiving 3 ARP Probes from DUT interface  TESTER receives an 
ARP AnnouncementRequest packet with Destination MAC address set to Ethernet 
Broadcast AddressA tolerance time of 005 seconds is used at the step where TESTER is 
waiting up to ANNOUNCEWAIT seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SE RVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOU NCEWAIT 005 ie the delay time before  
        DUT sends the ARP Announcement message  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Ethernet Destination Hardware Address is set to  
           ETHERNETBROADCASTADDR  
12 CLEANUP Externally cause  DUT to shutdown DIface 0 

  
    
  273 Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
 Ethernet Destination Hardware Address is set to  
ETHERNETBROADCASTADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section 24 MUST  
IPv4AUTOCONFANNOUNCING 02  An ARP announcement  II 
Synopsis  An ARP announcement is identical to the ARP Probe described above except that now the 
sender and target IP addresses are both set to the hosts newly selected IPv4 address In 
this document the term ARP Announcement is used to refer to an ARP Request p acket 
broadcast on the local link identical to the ARP Probe described above except that both 
the sender and target IP address fields contain the IP address being announced Note Here 
TESTER checks that after receiving 3 ARP Probes from DUT interface  TESTER receives an 
ARP AnnouncementRequest packet with Source IP address  Target IP address  
Announced IP address A tolerance time of 005 seconds is used at the step where TESTER 
is waiting up to ANNOUNCEWAIT seconds  
Prerequisites  Check section  prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER  SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADD R 
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANN OUNCEWAIT 005 for DUT to send ARP  

  
    
  274         Announcement Message  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
10 DUT Sends ARP Reque st Message  
11 TESTER Verify that received ARP Request Message contains  
         Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
         Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
12 CLEANUP Externally cause DUT to shutdown D Iface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
 Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section 24 MUST  
IPv4AUTOCONFANNOUNCING 03  An ARP announcement  III 
Synopsis  An ARP announcement is identical to the ARP Probe described above except that now the 
sender and target IP addresses are both set to the hosts newly selected IPv4 address In 
this document the term ARP Announcement is used to refer to an ARP Request p acket 
broadcast on the local link identical to the ARP Probe described above except that both 
the sender and target IP address fields contain the IP address being announced Note Here 
TESTER checks that after receiving 3 ARP Probes from DUT interface  TESTER receives an 
ARP AnnouncementRequest packet with Sender Hardware address set to DUT interface 
MAC Address A tolerance time of 005 seconds is used at the step where TESTER is waiting 
up to ANNOUNCEWAIT seconds  
Prerequisites  Check section pre requisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 

  
    
  275 Procedure  3 TESTER  SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADD R 
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANN OUNCEWAIT 005 for DUT to send ARP  
        Announcement Message  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Source Hardware Address is set to DIFACE 0MAC ADDR  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT S ends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
 Source Hardware Address is set to DIFACE 0MAC ADDR  
Test Iterations  
 
Notes  Derived from R FC 3927 p13 section 24 MUST  

  
    
  276 IPv4AUTOCONFANNOUNCING 04  An ARP announcement  IV 
Synopsis  An ARP announcement is identical to the ARP Probe described above except that now the 
sender and target IP addresses are both set to the hosts newly selected IPv4 address In 
this document the term ARP Announcement is used to refer to an ARP Request p acket 
broadcast on the local link identical to the ARP Probe described above except that both 
the sender and target IP address fields contain the IP address being announced Note Here 
TESTER checks that after receiving 3 ARP Probes from DUT interface  TESTER receives an 
ARP AnnouncementRequest packet with Target Hardware address set to all zeroes A 
tolerance time of 005 seconds is used at the step where TESTER is waiting up to 
ANNOUNCEWAIT seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 A RP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAIT 005 for  DUT to send ARP  
        Announcement Message  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT  Sends ARP Request Message  
11 TESTER Verify that received ARP Request Message contains  
         Target Hardware Address is set to NULL MAC ADDRESS  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends ARP Request Message  

  
    
  277 11 TESTER Verify that received ARP Request Message contains  
 Target Hardware Address is set to NULL MAC ADDRESS  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section  24 SHOULD  

  
    
  278 IPv4AUTOCONFANNOUNCING 05  Announcing claimed address  
Synopsis  Having probed to determine a unique address to use the host MUST then announce its 
claimed address by broadcasting ANNOUNCENUM ARP announcements spaced 
ANNOUNCEINTERVAL sec onds apart Note  A tolerance time of 005 seconds is used at 
the step where TESTER is waiting up to ANNOUNCEWAIT seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTE R SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Prot ocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAIT 005 for DUT to send ARP  
        Announcement Message  
9 TESTER SERVER 1 Listens  up to ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT Sends 2 ARP Request Messages  
11 CLEANUP Externally cause DUT to shutdown DIf ace0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
10 DUT Sends 2 ARP Request Messages  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section 24  MUST  

  
    
  279 IPv4AUTOCONFANNOUNCING 06  Announcing claimed address interval and 
packet count  
Synopsis  Having probed to determine a unique address to use the host MUST then announce its 
claimed address by broadcasting ANNOUNCENUM ARP announcements spaced 
ANNOUNCEINTERVAL seconds apart No te  Here TESTER is verifying that the time gap 
between the two announce messages is ANNOUNCEINTERVALINMILLISEC Tolerance 
is 50 milliseconds A tolerance time of 005 seconds is used at the step where TESTER is 
waiting up to ANNOUNCEWAIT seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set t o 
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAIT 005 for DUT to send ARP  
        Announcement Message  
9 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP  Address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT Sends 2 ARP Request Messages  
11 TESTER Verify that the time interval between  
        reception of last two ARP Requests  
         is greater than  
        ANNOUNCEINTERVALINMILLISEC    50 milli  second  
12 TESTER Verify that the time interval between  
        reception of last two ARP Requests  
         is less than  
        ANNOUNCEINTERVALINMILLISEC    50 milli second  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteri a 4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  

  
    
  280 10 DUT Sends 2 ARP Request Messages  
11 TESTER Verify that the time interval between  
reception of last two ARP Requests  
is greater than  
ANNOUNCEINTERVALINMILLISEC  50 milli second  
12 TESTER Verify that the time interval between  
reception of last two ARP Requests  
is less than  
ANNOUNCEINTERVALINMILLISEC  50 milli second  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section 24  MUST  
IPv4AUTOCONFANNOUNCING 07  Announcing claimed address non conflict  
Synopsis  The purpose of these ARP announcements is to make sure that other hosts on the link do 
not have stale ARP cache entries left over from some other host that may previously have 
been using the same address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
PARAMPROCESSTIME  
MAC ADDR1  
MAC ADDR2  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field  of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  

  
    
  281         for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Co nfigure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TES TER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Source Har dware Address set to MAC ADDR1  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 TESTER  SERVER 1 Sends ARP Response Message to DUT through  
         DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Sender Hardware Address set to MAC ADDR1  
14 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Source Hardware Address set to MAC ADDR1  
15 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
16 DUT Sends ICMP Echo Reply Message  
17 TESTER Verify that received ICMP Echo Reply Message contains  
         Ethernet Destination Hardware Address is set to MAC ADDR1  
18 TESTER  SERVER 1 Sends ARP Request Messag e to DUT through  
         DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Sender Hardware Address set to MAC ADDR2  
         Ethernet So urce Hardware Address set to MAC ADDR2  
19 TESTER Wait till PARAMPROCESSTIME for DUT to update its arp  
        cache entry  
20 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Addre ss set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
21 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
22 DUT Sends ICMP Echo Reply Message  

  
    
  282 23 TESTER Verify that received ICMP Echo Reply Message contains  
         Ethernet Destination Hardware Address is set to MAC ADDR2  
24 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ARP Request Message  
16 DUT Sends ICMP Echo Reply Message  
17 TESTER Verify that received ICMP Echo Reply Message contains  
 Ethernet Destination Hardware Address is set to MAC ADDR1  
22 DUT Sends ICMP Echo Reply Message  
23 TESTER Verify that received ICMP Echo Reply Message contains  
 Ethernet Destination Hardware Address is set to MAC ADDR2  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 section 24  MUST  

  
    
  283 4564  Conflict Detection and Defense  
IPv4AUTOCONFCONFLICT 01  Conflicting ARP packet  reception  
Synopsis  Upon receiving a conflicting ARP packet a host MAY elect to immediately configure a new 
IPv4 Link Local address Note In this test case TESTER is sending a conflicting ARP Request 
message with source IP Address and target IP Address both set to probed linklocal address 
sent by the DUT and checks whether DUT sends a probe with a different link local address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 List ens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Addre ss field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER SERVER 1 Send s ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Listens  up to  ParamListenTime  on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
11 DUT Sends ARP Request Message  
12 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIF ACE0IPLINKLOCAL ADDR  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
11 DUT Sends ARP Request Message  

  
    
  284 12 TESTER Verify that received ARP Request Message  contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  
IPv4AUTOCONFCONFLICT 02  Defending own address  I 
Synopsis  If a host currently has active TCP connections or other reasons to prefer to keep the same 
IPv4 address and it has not seen any other conflicting ARP packets within the last 
DEFENDINTERVAL seconds then it MAY elect to attempt to defend its address by re cording 
the time that the conflicting ARP packet was received and then broadcasting one single ARP 
announcement giving its own IP and hardware addresses as the sender addresses of the 
ARP Note  Here TESTER sends a conflicting ARP request message with b oth source and 
target IP address set to the probed link local address and checks that the ARP 
announcement that DUT has send to defend its address has both the Source IP Address and 
Target IP address set to DUTs LinkLocal IP Address  
Prerequisites  Check  section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCA LNETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Request Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  

  
    
  285          Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL PARAMTOLERANCETIME for DUT to  
        process the conflicting packet and defend its link local address at  
        DIface 0 
11 TESTER S ERVER 1 Listens  up to  ParamListenTime on DIface 0 
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
         Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
         Sender IP Address is set  to DIFACE 0IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request  Message contains  
 Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  
IPv4AUTOCONFCONFLICT 03  Defending own address  II 
Synopsis  If a host currently has active TCP connections or other reasons to prefer to keep the same 
IPv4 address and it has not seen any other conflicting ARP packets within the last 
DEFENDINTERVAL seconds then it MAY elect t o attempt to defend its address by recording 
the time that the conflicting ARP packet was received and then broadcasting one single ARP 
announcement giving its own IP and hardware addresses as the sender addresses of the 
ARP Note  Here TESTER sends a c onflicting ARP Request message with both source and 
target IP Address set to the advertised link local address and checks that the ARP 
announcement that DUT has send to defend its address has the Sender Hardware Address 
set to DUT interface MAC Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 

  
    
  286 Procedure  2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Request Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFAC E0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL PARAMTOLERANCETIME for DUT to  
        process the conflicting packet and defend its link local address at  
        DIface 0 
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 TESTER Ve rify that received ARP Request Message contains  
         Source Hardware Address is set to DIFACE 0MAC ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
 Source Hardware Address is set to DIFACE 0MAC ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  

  
    
  287 IPv4AUTOCONFCONFLICT 04  Defending own address  III 
Synopsis  If a host currently has active TCP connections or other reasons to prefer to keep the same 
IPv4 address and it has not seen any other conflicting ARP packets within the last 
DEFENDINTERVAL seconds then it MAY elect to a ttempt to defend its address by recording 
the time that the conflicting ARP packet was received and then broadcasting one single ARP 
announcement giving its own IP and hardware addresses as the sender addresses of the 
ARP Note  Here TESTER sends a conf licting ARP Response message with both source and 
target IP address set to the advertised link local address and checks that the ARP 
announcement that DUT has send to defend its address has both the Source IP Address and 
Target IP address set to DUTs Link Local IP Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally  cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP  Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Response Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL PARAMTOLERANCETIME for DUT to  
        process the conflicting packet and defend it link local address  at 
        DIface 0 
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
         Target IP Address is set to DIFACE 0IPLINKLOCAL ADD R 

  
    
  288          Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
 Target IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  
IPv4AUTOCONFCONFLICT 05  Defending own address  IV 
Synopsis  If a host currently has active TCP connections or other reasons to prefer to keep the same 
IPv4 address and it has not seen any other conflicting ARP packets within the last 
DEFENDINTERVAL se conds then it MAY elect to attempt to defend its address by recording 
the time that the conflicting ARP packet was received and then broadcasting one single ARP 
announcement giving its own IP and hardware addresses as the sender addresses of the 
ARP No te  Here TESTER sends a conflicting ARP Response packet with both source and 
target IP Address set to the advertised link local address and checks that the ARP 
announcement that DUT has send to defend its address has the Sender Hardware Address 
set to DUT  interface MAC Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of  Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  

  
    
  289         Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Response Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL PARAMTOLERANCETIME for DUT to  
        process the conflicting packet and defend it link local address at  
        DIface 0 
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
         Source Hardware Address is set to DIFACE 0MAC ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT  Sends 3 ARP Request Messages  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
 Source Hardware Address is set to DIFACE 0MAC ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  

  
    
  290 IPv4AUTOCONFCONFLICT 06  Link local address usage cease condition  I 
Synopsis  If this is not the first conflicting ARP packet the host has seen and the time recorded for the 
previous conflicting ARP packet is recent within DEFENDINTERVAL seconds then the host 
MUST immediately cease using this address and configure a new IPv4 Lin kLocal address 
NoteIn this test case TESTER sends 2 conflicting ARP Request mesages with both source 
and target IP address set to the advertised link local address within DEFENDINTERVAL 
seconds and check if DUT probes with a new advertised link loc al address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause  DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received fro m DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Request Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL2 before sending the next  
        conflicting packet to  DIface 0 
11 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVE R1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  

  
    
  291          Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
15 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 14 Section 25  MUST  
IPv4AUTOCONFCONFLICT 07  Link local address usage cease condition   II 
Synopsis  If this is not the first conflicting ARP packet the host has seen and the time recorded for the 
previous conflicting ARP packet is recent within DEFENDINTERVAL seconds then the host 
MUST immediately cease using this address and configur e a new IPv4 Link Local address 
NoteIn this test case TESTER sends 2 conflicting ARP Response messages with both source 
and target IP address set to the advertised link local address within DEFENDINTERVAL 
seconds and check if DUT probes with a new ad vertised link local address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE  Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address o f Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Response Message to DUT through  

  
    
  292          DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL2 before sending the next  
        conflicting packet to DIface 0 
11 TESTER SERVER 1 Se nds ARP Response Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVER 1 Listens  up to  ParamListenTi me on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to  DIFACE 0IPLINKLOCAL ADDR  
15 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Mess age contains  
 Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 14 Section 25  MUST  

  
    
  293 IPv4AUTOCONFCONFLICT 08  Link local address usage cease condition  III 
Synopsis  If this is not the first conflicting ARP packet the host has seen and the time recorded for the 
previous conflicting ARP packet is recent within DEFENDINTERVAL seconds then the host 
MUST immediately cease using this address and configure a new IPv4 Lin kLocal address 
NoteIn this test case TESTER first sends 1 conflicting ARP Request mesages and then sends 
1 conflicting ARP Response message within DEFENDINTERVAL seconds and check if DUT 
probes with a new advertised link local address  
Prerequisi tes Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up  DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Request Message to DUT through  
         DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL2 before sending the next  
        conflicting packet to DIface 0 
11 TESTER SERVER 1 Sends ARP Response Message to DUT thro ugh 
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expecte d Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  

  
    
  294          Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
15 CLEA NUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  
 Target IP Address is  not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 14 Section 25  MUST  
IPv4AUTOCONFCONFLICT 09  Link local address usage cease condition  IV 
Synopsis  If this is not the first conflicting ARP packet the host has seen and the time recorded for the 
previous conflicting ARP packet is recent within DEFENDINTERVAL seconds then the host 
MUST immediately cease using this address and configure a new IPv4 Lin kLocal address 
NoteIn this test case TESTER first sends 1 conflicting ARP Response message and then 
sends 1 conflicting ARP request message within DEFENDINTERVAL seconds and check if 
DUT probes with a new advertised link local address  
Prerequisit es Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LIN KLOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER  Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER  SERVER 1 Sends ARP Response Message to DUT through  

  
    
  295          DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER Wait till DEFENDINTERVAL2 before sending the next  
        conflicting packet to DIface 0 
11 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
12 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Netwo rk Address of Target IP Address set to  
           LINK LOCAL NETADDR  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
15 CLEANUP Ex ternally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
13 DUT Sends ARP Request Message  
14 TESTER Verify that received ARP Request Message contains  
 Target IP Address is not se t to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 14 Section 25  MUST  

  
    
  296 IPv4AUTOCONFCONFLICT10 Receiving a conflicting ARP packet  
Synopsis  Upon receiving a conflicting ARP packet a host MAY elect to immediately configure a new 
IPv4 Link Local address Note In this test case TESTER is sending a conflicting ARP 
Response message with source IP Address and target IP Address both set to probed  link
local address sent by the DUT and checks whether DUT sends a probe with a different link 
local address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Li stens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER SERVER 1 Se nds ARP Response Message to DUT through  
        DIface 0 containing  
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Listens  up to  ParamListenTi me on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
11 DUT Sends ARP Request Message  
12 TESTER Verify that received ARP Request Message contains  
         Target IP Address is not set to  DIFACE 0IPLINKLOCAL ADDR  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
11 DUT Sends ARP Request Message  
12 TESTER Verify that received ARP Request Mess age contains  

  
    
  297  Target IP Address is not set to DIFACE 0IPLINKLOCAL ADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p13 Section 25  MUST  
IPv4AUTOCONFCONFLICT11 ARP packets containing Link  Local sender IP 
address rule   I 
Synopsis  All ARP packets replies as well as requests  that contain a Link  Local sender IP address 
MUST be sent using link layer broadcast instead of link layer unicast NoteHere TESTER 
checks that DUT sends ARP Probe Response with Ethernet destination addr ess set to 
broadcast address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP  Probe  Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received fr om DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
11 DUT Sends ARP Response  Message  
12 TESTER Verify that received ARP Response Message contains  
         Target IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
         Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  

  
    
  298          Ethernet Destination Hardware Address i s set to  
           ETHERNETBROADCASTADDR  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Probe Request Messages  
11 DUT Sends ARP Response Message  
12 TESTER Verify that re ceived ARP Response Message contains  
 Target IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
 Ethernet Destination Hardware Address is set to  
ETHERNETBROADCASTADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p14 Section 25  MUST  

  
    
  299 IPv4AUTOCONFCONFLICT12 ARP packets containing Link  Local sender IP 
address rule   II 
Synopsis  All ARP packets replies as well as requests that contain a Link  Local sender IP address 
MUST be sent using link layer broadcast instead of link layer unicast NoteHere TESTER 
checks that DUT sends ARP Requests with Ethernet destination address set  to broadcast 
address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on  DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destinatio n Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT thro ugh 
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
         Ethernet Destination Hardware Ad dress is set to  
           ETHERNETBROADCASTADDR  

  
    
  300 14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
12 DUT Sends ARP Request Message  
13 TESTER Verify that re ceived ARP Request Message contains  
 Ethernet Destination Hardware Address is set to  
ETHERNETBROADCASTADDR  
Test Iterations  
 
Notes  Derived from RFC 3927 p14 Section 25   
MUST  

  
    
  301 4565  Forwarding Rules  
IPv4AUTOCONFFORWARDING 01  Forwarding Rules Destination address is in the 
16925416 prefix  I 
Synopsis  If the destination address is in the 16925416 prefix excluding the address 
169254255255 which is the broadcast address for the Link Local prefix then the sender 
MUST ARP for the destination address and then send its packet directly to the destination on 
the same physical link Note  Here TESTER checks that the DUT interface which has a 
linklocal ip address sends an ARP request when it is configured to send an ICMP echo 
request to a link local destination IP address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime  on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Messag e received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a s tatic route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
12 DUT Sends ARP Request Message  
13 TESTER  Verify that received ARP Request Message contains  

  
    
  302          Target IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
         Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteri a 4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ARP Request Message  
13 TESTER Verify that received ARP Request Message contains  
 Target IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set t o DIFACE 0IPLINKLOCAL ADDR  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 Section 262  MUST  
IPv4AUTOCONFFORWARDING 02  Forwarding Rules Destination address is in the 
16925416 prefix  II 
Synopsis  If the destination address is in the 16925416 prefix excluding the address 
169254255255 which is the broadcast address for the Link Local prefix then the sender 
MUST ARP for the destination address and then send its packet directly to the destinat ion on 
the same physical link Note  Here TESTER checks that DUT sends an ICMP echo request 
with destination IP address set to TESTER interfaces link local ip address and source IP 
address set to its own linklocal IP Address  
Prerequisites  Check secti on prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set t o 
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  

  
    
  303         Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADD R  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR 
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
         Sour ce IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address is set to  
           AIFACE 0IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends  ARP Request Message  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
 Source IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
 Destination IP Address is set to  
AIFACE 0IPLINKLOCAL ADDR  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 Section 262  MUST  

  
    
  304 IPv4AUTOCONFFORWARDING 03  Forwarding Rules Destination address is in the 
16925416 prefix  III 
Synopsis  If the destination address is in the 16925416 prefix excluding the address 
169254255255 which is the broadcast address for the Link Local prefix then the sender 
MUST ARP for the destination address and then send its packet directly to the destinat ion on 
the same physical link Note  Here TESTER checks that DUT sends an ICMP echo request 
with ethernet destination address set to TESTER interfaces MAC Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends AR P Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWA ITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to AIFACE 0IPLINKLO CALADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  

  
    
  305          Ethernet Destination Hardware Address is set to MAC ADDR1  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sen ds ARP Request Message  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
 Ethernet Destination Hardware Address is set to MAC ADDR1  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 Section 262  MUST  
IPv4AUTOCONFFORWARDING 04  Forwarding Rules Host sending the packet with 
an IPv4 Link Local source address  I 
Synopsis  If for any reason the host chooses to send the packet with an IPv4 Link Local source address 
eg no routable addres s is available on the selected interface then it MUST ARP for the 
destination address and then send its packet with an IPv4 Link Local source address and a 
routable destination IPv4 address directly to its destination on the same physical link 
Note   Here TESTER checks that DUT sends an ICMP echo request with source IP address as 
its own linklocal IP Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Messa ge 
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destinat ion Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  

  
    
  306         for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to ROUTABLEIPADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to ROUTABLEIPADDR1  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
12 DU T Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
         Source IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends  DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
 Source IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 16 Section 262  MUST  

  
    
  307 IPv4AUTOCONFFORWARDING 05  Forwarding Rules Host sending the packet with 
an IPv4 Link Local source address  II 
Synopsis  If for any reason the host chooses to send the packet with an IPv4 Link Local so urce address 
eg no routable address is available on the selected interface then it MUST ARP for the 
destination address and then send its packet with an IPv4 Link Local source address and a 
routable destination IPv4 address directly to its destinat ion on the same physical link 
Note  Here TESTER checks that DUT sends an ICMP echo request with destination IP 
address as the routable address its trying to ping  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime  on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to ROUTABLEIPADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIF ACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to ROUTABLEIPADDR1  
11 TESTER SERVER 1 Liste ns up to  ParamListenTime on DIface 0 
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
         Destination IP Address is set to ROUTABLEIPADDR1  
14 CLEANUP Externally cause DUT to sh utdown DIface 0 

  
    
  308 Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
 Destination IP Address is set to  ROUTABLEIPADDR1  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 16 Section 262  MUST  
IPv4AUTOCONFFORWARDING 06  Forwarding Rules Host sending the packet with 
an IPv4 Link Local source address  III 
Synopsis  If for any reason the host chooses to send the packet with an IPv4 Link Local source address 
eg no routable address is available on the selected interface then it MUST ARP for the 
destination address and then send its packet with an IPv4 Link Local source address and a 
routable destination IPv4 address directly to its destination on the same physical link 
Note  Here TESTER checks that DUT sends an ICMP echo request with ethernet destination 
address set to TESTER interface mac address  
Prerequi sites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of  Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in D IFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 

  
    
  309 9 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to  ROUTABLEIPADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to ROUTABLEIPADDR1  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to ROUTABLEIP ADDR1  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
         Ethernet Destination Hardware Address is set to MAC ADDR1  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Crit eria 4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ICMP Echo Request Message  
13 TESTER Verify that received ICMP Echo Request Message contains  
 Ethernet Destination Hardware Address is set to MAC ADDR1  
Test 
Iterations   
Notes  Derived from RFC 3927 p15 16 Section 262  MUST  

  
    
  310 IPv4AUTOCONFFORWARDING 07  Forwarding Rules Destination address is a 
unicast address outside the 16925416 prefix  
Synopsis  If the destination address is a unicast address outside the 16 925416 prefix then the host 
SHOULD use an appropriate routable IPv4 source address if it can Note  Here TESTER 
checks that DUT sends an ICMP echo request with source IP address set to routable 
address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring u p DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address set to ROUTABLEI PADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
6 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to 0000  

  
    
  311          Source IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR1  
11 DUT Sends ARP Probe or ARP Res ponse  
12 DUT CONFIGURE Configure DUT to send an ICMP Echo Request Message from  
        DIface 0 with  
         Destination IP Address set to ROUTABLEIPADDR1  
13 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
14 DUT Sends ICMP  Echo Request Message  
15 TESTER Verify that received ICMP Echo Request Message contains  
         Source IP Address is set to ROUTABLEIPADDR2  
         Destination IP Address is set to ROUTABLEIPADDR1  
16 CLEANUP Externally cause DUT to shutd own DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ARP Probe or ARP Response  
14 DUT Sends ICMP Echo Request Message  
15 TESTER Verify that received ICMP Echo Request Message contains  
 Sour ce IP Address is set to ROUTABLEIPADDR2  
 Destination IP Address is set to ROUTABLEIPADDR1  
Test Iterations  
 
Notes  Derived from RFC 3927 p15 Section 262  SHOULD  

  
    
  312 IPv4AUTOCONFFORWARDING 08  Forwarding Rules host MUST NOT send a 
packet with an IPv4 Link Local destination address to any router for forwarding  
Synopsis  The host MUST NOT send a packet with an IPv4 Link Local destination address to any router 
for forwarding Note  Here TESTER sends a ping with destination IP address set to an 
arbitrary link local address and checks that DUT should not send the ping to a router after 
consulting the static route entry in its routing table  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
ARBITRARY IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally c ause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Source IP Address  set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
6 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
9 TESTER SERVER 1 Sends ARP  Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  

  
    
  313 10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to 0000  
         Source IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ROUTABLEIPADDR1  
11 DUT Sends ARP Probe or ARP Respon se 
12 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to ARBITRARY IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ROUTABLEI PADDR21  
13 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ARBITRARY IPLINKLOCAL ADDR  
14 TESTER SERV ER1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to ARBITRARY IPLINKLOCAL ADDR  
         Destination IP Address set to ROUTABLEIPADDR1  
15 DUT Does not send ICMP Echo Request Message  
16 CLEANUP Configure DUT to delete a static route on DIface 0 with  
         Destination Prefix set to ARBITRARY IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ROUTABLEIPADDR21  
17 CLE ANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ARP Probe or ARP Response  
15 DUT Does not send ICMP Echo Request Message  
Test Iterations  
 
Notes  Derived  from RFC 3927 p15 Section 262  MUST  

  
    
  314 4566  Link Local Packets Are Not Forwarded  
IPv4AUTOCONFLINKLOCAL PACKETS 01  Link Local Packets Are Not Forwarded 
TTL  
Synopsis  A sensible default for applications which are sending from an IPv4 Link Local address is t o 
explicitly set the IPv4 TTL to 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime  on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Messag e received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a s tatic route with  
         Destination Prefix set to AIFACE 0IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Ethernet Source Hardware Address set to  MAC ADDR1  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
12 DUT Sends ICMP Echo Reply Message  
13 TESTER Verify that received ICMP Echo Reply Message contains  

  
    
  315          TTL field is set to 1  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT Sends ICM P Echo Reply Message  
13 TESTER Verify that received ICMP Echo Reply Message contains  
 TTL field is set to 1  
Test Iterations  
 
Notes  Derived from RFC 3927 p16 section 27  MAY  
IPv4AUTOCONFLINKLOCAL PACKETS 02  Link Local Packets Are Not Forwarded  
Source andor destination address is in the 16925416 prefix  
Synopsis  An IPv4 packet whose source andor destination address is in the 16925416 prefix MUST 
NOT be sent to any router for forwarding Note  Here TESTER sends a ping with destination 
IP address set to DUT interface link local address and checks that DUT should not send a ping 
reply after consulting the static route entry in its routing table  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ARBITRARY IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TE STER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 DUT CONFIGURE Configure DUT to add a static route with  

  
    
  316          Destination Prefix set to ROUTABLEIPADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ARBITRARY IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Ad dress set to ROUTABLEIPADDR1  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
11 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destinat ion IP Address set to ROUTABLEIPADDR1  
12 DUT Does not send ICMP Echo Reply Message  
13 CLEANUP Configure DUT to delete a static route on DIface 0 with  
         Destination Prefix set to ROUTABLEIPADDR1  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ARBITRARY IPLINKLOCAL ADDR  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
12 DUT  Does not send ICMP Echo Reply Message  
Test 
Iterations   
Notes  Derived from RFC 3927 p16 Section 27  MUST  

  
    
  317 IPv4AUTOCONFLINKLOCAL PACKETS 03  Link Local Packets Are Not Forwarded 
Router response  
Synopsis  A router may of course answer ARP Requests for one or more IPv4 Link Local addresses 
that it has legitimately claimed for its own use according to the claim anddefend protocol 
described in this document Note  Here TESTER checks that the routerhost m ust answer to 
the ARP request for the Link local address it is using  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Li stens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Addres s field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 TESTER S ERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Target Hardware Address set to  NULL MAC ADDRESS  
         Sender Hardware Address set to MAC ADDR1  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
11 DUT Sends ARP Response Message  
12 TESTER Verify that received ARP Response Message contains  
         Targ et IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
         Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
13 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Mes sage  

  
    
  318 11 DUT Sends ARP Response Message  
12 TESTER Verify that received ARP Response Message contains  
 Target IP Address is set to AIFACE 0IPLINKLOCAL ADDR  
 Sender IP Address is set to DIFACE 0IPLINKLOCAL ADDR  
Test 
Iterations   
Notes  Derived from RFC 3927 p16 Section 27  MAY  
IPv4AUTOCONFLINKLOCAL PACKETS 04  Link Local Packets Are Not Forwarded 
router or other host response for addresses in the 16925416 prefix  
Synopsis  A router or other host MUST NOT indiscriminately answer all ARP Re quests for addresses in 
the 16925416 prefix A router may of course answer ARP Requests for one or more IPv4 
LinkLocal addresses that it has legitimately claimed for its own use according to the claim 
anddefend protocol described in this document N ote  Here TESTER checks that the 
routerhost will not answer to the ARP request for an arbitrary link local address which it is 
not using  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIFACE 0IPLINKLOCAL ADDR  
ARBITRARY IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till  PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 

  
    
  319 9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to ARBITRARY IPLINKLOCAL ADDR  
         Target Hardware Address set to NULL MAC ADDRESS  
         Sender Hardware Address set to MAC ADDR1  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on  DIface 0 
         Source IP Address set to ARBITRARY IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 DUT Does not send ARP Response Message  
12 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Cri teria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Request Message  
11 DUT Does not send ARP Response Message  
Test 
Iterations   
Notes  Derived from RFC 3927 p16 Section 27  MUST  

  
    
  320 4567  Interaction with Hosts with Routable Addresses  
IPv4AUTOCONFROUTABLE ADDRESSES 01  Host acquires a routable address  
Synopsis  When a host acquires a routable address it does not need to retain its Link Local address 
for the purpose of communicating with other devices on the link that are themselves us ing 
only Link Local addresses  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends ARP  Probe  Request Message  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address  field of ARP Request Message received from DIface 0 and stores  
        Target IP address  in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait till PROBEMAX2ANNOUNCEWAITANNOUNCEINTERVAL  
        for DUT to assign the link local address to DIface 0 
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Target Hardware A ddress set to NULL MAC ADDRESS  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 DUT Sends ARP Response Message  
12 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
13 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
14 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
15 DUT Sends DHCPDISCOVER Message  
16 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 

  
    
  321         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type fie ld set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
17 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
18 DUT Sends DHCPREQUEST Message  
19 TESTER  SERVER 1 Sends DH CPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEA SETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
20 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destin ation IP Address set to ROUTABLEIPADDR2  
21 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 for ARP response 
message  
22 DUT Sends ARP Response  
         Destination IP Address set to ROUTABLEIPADDR1  
23 TESTER SERVER 1 Sen ds ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Target Hardware Address set to NULL MAC ADD RESS  
         Ethernet Destination Hardware Address set to  
           ETHERNETBROADCASTADDR  
24 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
25 DUT Does not send ARP Response Message  
26 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends ARP Probe Request Message  
11 DUT Sends ARP Re sponse Message  
15 DUT Sends DHCPDISCOVER Message  
18 DUT Sends DHCPREQUEST Message  
22 DUT Sends ARP Response  
25 DUT Does not send ARP Response Message  

  
    
  322 Test Iterations  
 
Notes  Derived from RFC 3927 p20 Section 33  MAY  
IPv4AUTOCONFROUTABLE ADDRESSES 02  Interaction with Hosts with Routable 
Addresses  
Synopsis  It is not necessary for that host to have a Link Local source address in order to send to a 
LinkLocal destination address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  ROUTABLEIPADDR1  
ROUTABLEIPADDR2  
ARBITRARY IPLINKLOCAL ADDR  
MAC ADDR1  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Sends DHCPOFFER Message to DUT through DIface 0 
        containing  
         Sourc e IP Address set to ROUTABLEIPADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLI STENTIME3  
6 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER  SERVER 1 Sends DHCPACK Message to DUT through DIface 0 
         containing  
         Source IP Address set to ROUTABLEIP ADDR1  
         yiaddr field set to ROUTABLEIPADDR2  
         Message Option containing  
           Type field set to DHCPIPADDRESSLEASETIME  
           Length field set to 4  
           Value set to PARAMLISTENTIME3  
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  

  
    
  323         DIface 0 containing  
         Source IP Address set to ROUTABLEIPADDR1  
         Destination IP Address set to ROUTABLEIPADDR2  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIf ace0 for ARP 
response message  
11 DUT Sends  ARP Response  
         Destination IP Address set to ROUTABLEIPADDR1  
12 DUT CONFIGURE Configure DUT to add a static route with  
         Destination Prefix set to ARBITRARY IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ROUTABLEIPADDR2  
13 TESTER SERVER 1 Sends ICMP Echo Request Message to DUT through  
        DIface 0 containing  
         Source IP Addres s set to ARBITRARY IPLINKLOCAL ADDR  
         Destination IP Address set to ROUTABLEIPADDR2  
         Ethernet Destination Hardware Address set to  
           DIFACE 0MAC ADDR  
         Ethernet Source Hardware Address set to MAC ADDR1  
14 TEST ER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to ROUTABLEIPADDR2  
         Destination IP Address set to ARBITRARY IPLINKLOCAL ADDR  
15 DUT Sends ICMP Echo Reply Message  
16 CLEANUP Configure DUT t o delete a static route on DIface 0 with  
         Destination Prefix set to ARBITRARY IPLINKLOCAL ADDR  
         Netmask set to HOSTMASK  
         Outgoing interface set to DUTIFACE0  
         Gateway address set to ROUTABLEIPADDR2  
17 CLEANU P Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ARP Response  
15 DUT Sends ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from RFC 3927 p20 Section  33 MAY  

  
    
  324 4568  Healing of Network Partitions  
IPv4AUTOCONFNETWORK PARTITIONS 01  Healing of Network Partitions Hosts  
Synopsis  Hosts SHOULD NOT send periodic gratuitous ARPs Note for Link Local Addresses  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  AIFACE 0IPLINKLOCAL ADDR  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally cause DUT to bring up DIface 0 
3 TE STER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Expected Network Address of Target IP Address set to  
           LINK LOCAL NETADDR  
6 DUT Sends 3 ARP Request Messages  
7 TESTER SERVER 1 retrieves the value of Destination Protocol  
        Address field of ARP Request Message received from DIface 0 and stores  
        it in DIFACE 0IPLINKLOCAL ADDR  
8 TESTER Wait ti ll ANNOUNCEWAITANNOUNCEINTERVAL for DUT to  
        assign the link local address to DIface 0 
9 TESTER SERVER 1 Sends ARP Request Message to DUT through  
        DIface 0 containing  
         Source IP Address set to AIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADDR  
10 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to AIFACE 0IPLINKLOCAL ADDR  
11 DUT Sends ARP Response Message  
12 TESTER SERVER 1 Listens  up to  ParamListenTime on DIface 0 
         Source IP Address set to DIFACE 0IPLINKLOCAL ADDR  
         Destination IP Address set to DIFACE 0IPLINKLOCAL ADD R 
13 DUT Does not send ARP Request Message  
14 CLEANUP Externally cause DUT to shutdown DIface 0 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 DUT Sends 3 ARP Request Messages  
11 DUT Sends ARP Response Message  
13 DUT Does not send ARP Req uest Message  

  
    
  325 Test Iterations  
 
Notes  Derived from RFC 3927 p23 Section 4  SHOULD  

  
    
  326 46 User Datagram Protocol UDP  
461  General  
 
The scope of this chapter is to specify test cases for the User Datagram Protocol UDP from the 
following standards  
   
 RFC 768   User Datagram Protocol  
 
462  Simulated topologies  
 
 
463  Required topology related configuration  
 
 This test suite expects to be running against an UDP stack  
 This test suite runs over Ethernet  
 All tests run with one interface except 2 these 2 needs discussion  
 
464  Parameters use d in the tests  
 
Parameter used in test  Description  
testerUDPPort  Port number used for UDP in TESTER  HOST 1 DIface 0 TIface 0 
ECU 
DUT 
TOPOLOGY 1 Control channel for the 
stub 

  
    
  327 testerUDPPort2  Another port number used for UDP in TESTER  
unusedUDPSrcPort  Unused UDP source port number used in TESTER Value  20000  
unusedUDPDstPort1  Unused UDP destination port number used in TESTER Value  
20001  
udpUserDataSize  UDP data size used by the TESTER Value  101  
calculatedUDPChecksum  UDP checksum of a UDP packet  
incorrectUDPChecksum  Incorrect UDP checksum Value  0xffff  
UDPDefaultData  Default data used in UDP message by TESTER  
UDPDefaultDataLen  Length of UDP default data  
UDPData  UDP data used by TESTER Value  TESTERTESTERTESTERTESTER 0 
UDPDataLen  UDP data length Value  17  
APISUCCESS  Indication to API status is successful Value  SUCCESS  
allSystemMCastAddr  Multicast address for all systems  
AIface 0BcastIP  Broadcast address of the TESTERs 0th interfaces network  
Host 1IP IP address from unused network  
Host 2IP Another  IP address from unused network  
DUTSupportsDynamicInterface  Automotive ECUs may not support dynamic user interface for new 
port creation either for performance or security reasons  
TRUE indicates DUT supports dynamic user interface  
FALSE indicates DUT does not support dynamic user interface  
Default FALSE  

  
    
  328 465  Tests  
4651  UDP M essage  Format  
DEPRECATED  UDP MessageFormat 01 To verify that IUT generates  an UDP packet 
containing a well formed UDP header  
Synopsis  Ensure that  
  when the DUT is requested to generat e a UDP  packet  
  then the DUT generates a UDP Packet  
    containing a well formed  Header  
      containing a  Source Port field   
      containing a Total Length  
      containing a Destination Port  
      containing a Length field  
      containing a Checksum  field  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Proc edure  1 TESTER Send sendUdpPacket command to the DUT to request a UDP packet  
2 DUT Generates a  UDP packet  
Pass Criteria  The DUT generates a UDP Packet  
    containing a well formed  Header  
      containing a  Source Port field  
      containing a Destination Port  
        indicating a value equal to the TSs UDP port  
      containing a Length field  
        indicating a valid value  equal to the size of the received datagram  
      containing a Checksum field  
        indicating a value equal to the  calculatedUDPChecksum  
Test Iterations   
Reference  Derived from RFC 768  section Format  
Notes   
 
UDP MessageFormat02  To verify that IUT accepts an UDP packet containing a well 
formed UDP header  
Synopsis  Ensure that  

  
    
  329   when the DUT receives a  UDP  packet  
    containing a well formed  Header  
      containing a  Source Port field  
      containing a Destination Port  
        indicating a va lue equal to the DUTs UDP port  
      containing a Length field  
        indicating a valid value equal to the size of the sent datagram  
      containing a Checksum field  
        indicating a value equal to the  calculatedUDPChecksum  by the DUT  
  then the DUT accepts the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet containing a well formed UDP Header  
2 DUT Sends Indication containing the same content of the UDP packet received  
Pass Criteria  The DUT accepts the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Format  
Notes   
 

  
    
  330 4652  UDP Port Handling  
DEPRECATED  UDP PortHandling01  To verify that the D UT accepts the datag ram 
in case UDP Header has  a non zero source port  
Synopsis  Ensure that  
  when the DUT receives a  UDP  packet  
    containing a UDP Header  
      containing a  Source Port Field  
        indicating a value different from zero  
  then the DUT accepts the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with a non zero Source Port field  
2 DUT Sends Indication containing the same content of the UDP packet received  
Pass Criteria  The DUT accepts the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  331 DEPRECATED  UDP PortHandling02  To verify that the D UT accepts the datag ram 
in case UDP Header has  a source port  with a value equal to zero  
Synopsis  Ensure that  
  when the DUT receives a  UDP  packet  
    containing a UDP Header  
      containing a  Source Port Field  
        indicating a value equal to zero  
  then the DUT accepts the UDP  packet  
Prerequisites  None 
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with a Source Port field equal to zero  
2 DUT Sends Indication containing the same content of the UDP packet received  
Pass Criteria  The DUT accepts the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  332 DEPRECATED  UDP PortHandling03  To verify that the D UT accepts the datag ram 
in case UDP Header  has a specific  source port  value  
Synopsis  Ensure that  
  when the DUT receives a  UDP  packet  
    containing a UDP Header  
      containing a  Source Field  
        indicating an acceptable specific value  
  then the DUT accepts the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test  Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with a specific Source Port field value  
2 DUT Sends Indication containing the same content of the UDP packet received  
Pass Criteria  The DUT accepts  the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  333 DEPRECATED  UDP PortHandling04  To verify that the D UT discards  a datag ram in 
case UDP Header has  a non acceptable source port  value  
Synopsis  Ensure that  
  when the DUT receives a  UDP  packet  
    containing a UDP Header  
      containing a  Source Field  
        indicating a value different from the rangeOfAcceptablePorts  
  then the DUT discards the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with a valid Source Port field  
2 DUT Discards the UDP packet  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  334 4653  UDP Datagram Length  
UDP DatagramLength01  To verify that IUT dis cards a truncated UDP datagram  
Synopsis  Ensure that  
  when the DUT receives a truncated UDP packet a packet with the length field smaller 
than the actual size of the data coming from the Ethernet frame  
  then the DUT discards the UDP packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a truncated UDP packet  
2 DUT Discards the UDP packet and sends no Indication  
Pass Criteria  The DUT discards the UDP packet  
Test Iterations   
Reference  Derived from RFC768 section Format and automotive specific requirements on frame 
integrity  
Notes   
 

  
    
  335 DEPRECATED  UDP DatagramLength02  To verify that IUT discards a  UDP 
datagram in case datagram total length less  than 8  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value less than 8  
  then the DUT discards the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with Length greater than or equal to 8  
2 DUT Discards the UDP packet and sends no Indication  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  336 DEPRECATED  UDP DatagramLength03  To verify that IUT accepts an UDP 
datagram in case datagram total length greater than 8  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value greater than or equal to 8  
  then the DUT accepts the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Paramete rs 
Test Procedure  1 TESTER Send a UDP packet with Length greater than or equal to 8  
2 DUT Sends Indication containing the same content of the UDP packet received  
Pass Criteria  The DUT accepts the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  337 DEPRECATED  UDP DatagramLength04  To verify that IUT discards a  UDP 
datagram in case datagram total l ength equal to 0  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value equal to 0  
  then the DUT discards the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with Length equal to zero  
2 DUT Discards UDP packet and sends no Indication  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  338 DEPRECATED  UDP DatagramLength05  To verify that IUT discards a  UDP 
datagram in case datagram total l ength greater than the size of the datagram  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value g reater than the size of the packet  
  then the DUT discards the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with Length greater than the packet size  
2 DUT Discards the UDP packet and sends no Indication  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  339 DEPRECATED  UDP DatagramLength06  To verify that IUT discards a  UDP 
datagram in case datagram total length is less than the size of the datagram  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value less than the siz e of the packet  
  then the DUT discards the UDP  packet  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with Length field less than the size of the packet  
2 DUT Discards the UDP packet and sends no Indication  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  340 DEPRECATED  UDP DatagramLength07  To verify that IUT discards  an UDP 
datagram in case datagram total length is set to maximum number allowed by the 
field  
Synopsis  Ensure that  
  when the DUT receives a  UDP packet  
    containing a UDP Header  
      containing a Length field  
        indicating a value equal to the max imum size  
  then the DUT discards the UDP  packet and sends no Indication  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a UDP packet with Length field set to maxim um size  
2 DUT discards the UDP packet  
Pass Criteria  The DUT discards the UDP  packet  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   

  
    
  341 4654  UDP Padding  
DEPRECATED  UDP Padding01  To verify that IUT generates UDP datagram with 
odd size of payload and adds padding at the end  
Synopsis  Ensure that  
  when the DUT is requested to generate a UDP packet with an odd udpUserDataSize  
  then the DUT generates a UDP  packet  
    containing Data  
      indicating value of the received odd paylo ad size plus padding bytes  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send  sendUdpPacketOddSize to the DUT to request a UDP packet with 
odd udpUserDataSize  
2 DUT Generates a UDP packet with padding  
Pass Criteria  The DUT generates a UDP  packet  
    containing Data  
      indicating value of the received odd udpUserDataSize plus padding bytes  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  342 UDP Padding02  To verify that IUT generates UDP datagram with even size of 
payload and no padding at the end  
Synopsis  Ensure that  
  when the DUT is requested to generate a UDP packet with an even payload size  
  then the DUT generates a UDP  packet  
    containing Data  
      indicating value of the received even udpUserDataSize  with no padding bytes  
Prerequisites  None  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a sendU dpPacketEvenSize to the DUT to request a UDP packet with 
an even udpUserDataSize  
2 DUT Generates a UDP packet without padding  
Pass Criteria  The DUT generates a UDP  packet  
    containing Data  
      indicating value of the received an even udpUserDataSize  with no padding bytes  
Test Iterations   
Reference  Derived from RFC768 section Fields  
Notes   
 

  
    
  343 4655  UDP Fields  
UDPFIELDS01  Fields  Specify Source Port  
Synopsis  Source Port is an optional field when meaningful it indicates the port of the sending 
process and may be assumed to be the port to which a reply should be addressed in the 
absence of any other information A user interface should allow the creation of n ew receive 
ports Note In this test we verify that application can specify source port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally  cause DUT to send a UDP Message with source port  
        set to unusedUDPDstPort1 through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends  Message  
4 TESTER Verify that received UDP Message contains  
         Source UDP Port field is set to unusedUDPDstPort1  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Source UDP Port field is set to unusedUDPDstPort1  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields  SHOULD  

  
    
  344 UDPFIELDS02 Fields  Specify Destination Port  
Synopsis  Source Port is an optional field when meaningful it indicates the port of the sending 
process and may be assumed to be the port to which a reply should be addressed in the 
absence of any other information Note In this test we verify that DUT can res pond 
respond back if required to source port of received message This has two parts being 
able to read the source port of a received message and being able to set the destination 
port of a sent message  these operations are available on the AUTOSAR t estability 
protocol In this case the tester is basically implementing the application logic of issuing the 
reply by properly reading the source port and replying to that port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input  
Parameters  unusedUDPSrcPort  
UDPDefaultData  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source UDP Port field set to unusedUDPSrcPort  
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Externally cause DUT to send a UDP Mes sage with  
        UDPDefaultData as data through DIface 0 
5 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
6 DUT Sends Message  
7 TESTER Verify that received UDP Message contains  
         Destination UDP Port field is set to unu sedUDPSrcPort  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
6 DUT Sends Message  
7 TESTER Verify that received UDP Message contains  
 Destination UDP Port field is set to unusedUDPSrcPort  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  345 UDPFIELDS 03 Fields  Accept Source Port set to zero  
Synopsis  Source Port is an optional field when meaningful it indicates the port of the sending 
process and may be assumed to be the port to which a reply should be addressed in the 
absence of any other information If not used a value of zero is inserted Note  In this test 
we verify that using the value 0 for UDP Source Port is valid and DUT accepts such a 
Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source U DP Port field set to 0  
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Verify using Upper Tester that DUT received  
         UDP Message containing  
         UDP Source Port field set to 0  
Pass Criteria  2 DUT Listen on port u nusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that DUT received  
UDP Message containing  
 UDP Source Port field set to 0  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  346 UDPFIELDS 04 Fields  Same Destination Port with Different IP Address send  
Synopsis  Destination Port has a meaning within the context of a particular internet destination 
address Note In this test we verify that DUT can send UDP message at same destination 
port to more than one differrent  IP addresses  
Prerequisites  Check section prerequisites  
Test setup  Topology 2  
Test Input 
Parameters  testerUDPPort  
Host 1IP 
Host 2IP 
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to send a UDP Message at testerUDPPort  
        as the destination port  
        and to Host 1IP IP Address through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contain s 
         Destination IP Address field is set to Host 1IP 
         Destination UDP Port field is set to testerUDPPort  
5 DUT CONFIGURE Externally cause DUT to send a UDP Message at testerUDPPort  
        as the destination port  
        and to H ost2IP IP Address through DIface 0 
6 TESTER HOST 2 Listens up toParamListenTime on DIface 0 
7 DUT Sends Message  
8 TESTER Verify that received UDP Message contains  
         Destination IP Address field is set to Host 2IP 
         Destination UDP Port field is set to testerUDPPort  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Destination IP Address field is set to Host 1IP 
 Destination UDP Port field is set to testerUDPPort  
7 DUT  Sends Message  
8 TESTER Verify that received UDP Message contains  
 Destination IP Address field is set to Host 2IP 
 Destination UDP Port field is set to testerUDPPort  
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  347 UDPFIELDS 05 Fields  Same Port with Different IP Address receive and send  
Synopsis  Destination Port has a meaning within the context of a particular internet destination 
address Note In this test we verify that DUT can receive send UDP message at same 
destination port to  more than one differrent IP addresses  
Prerequisites  Check section prerequisites  
Test setup  Topology 2  
Test Input 
Parameters  UDPDefaultData  
UDPData  
Host 1IP 
Host 2IP 
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field se t to Host 1IP 
         Destination IP Address field set to DIface 0IP 
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP send data set to UDPData  
4 TESTER Verify using Upper Tester that application layer has  got  
        UDP Message containing  
         UDP data equal to UDPData  
5 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
6 DUT Listen on port unusedUDPDstPort1 on DIface 0 
7 TESTER  HOST 2 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field set to Host 2IP 
         Destination IP Address field set to DIface 0IP 
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP send data set to  UDPDefaultData  
8 TESTER Verify using Upper Tester that application layer has  got  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify usin g Upper Tester  that application layer has got  
UDP Message containing  
 UDP data equal to UDPData  
6 DUT Listen on port unusedUDPDstPort1 on DIface 0 
8 TESTER Verify using Upper Tester  that application layer has got  
UDP Message containing  
 UDP d ata equal to UDPDefaultData  

  
    
  348 Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  
UDPFIELDS06 Fields  Total Length  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note In this test  we configure DUT to send udpUserDataSize size of data so that the 
length in Header is udpUserDataSize    8UDP Header Size bytes  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  udpUserDataSize  
Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send UDP Message with  
        udpUserDataSize of data through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTE R Verify that received UDP Message contains  
         UDP Header Length field is set to udpUserDataSize8  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Length field is set to udpUserDataSize 8  
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  

  
    
  349 UDPFIELDS 07 Fields  Total Length no data  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note In this test we configure DUT to send 0 zero size of data so that the length in 
Header is 8UDP Header Size bytes  
Prerequisites  Check section prerequisi tes 
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send UDP Message with 0 of data  
        through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on  DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         UDP Header Length field is set to 8  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Length field is set to 8 
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  
 

  
    
  350 UDPFIELDS 08 Fields  Total Length less than 8 bytes  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note Check that the DUT  discards the received datagram in case the total length of the 
datagram is less than 8 bytes   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message  to DUT through DIface 0 
         containing  
          truncated mess age length less than 8 bytes  
          No UDP Data set  
4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Pass Criteria  4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  
 

  
    
  351 UDPFIELDS 09 Fields  Total Length equal to zero  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note Check that the DUT discards the received datagram in  case the total length of the 
datagram is zero 0   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message  to DUT through DIface 0 
         containing  
          UDP Data set to UDPData  
          length field set to 0  
4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Pass Criteria  4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  
 

  
    
  352 UDPFIELDS 10 Fields  Total Length greater than actual  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note Check that the DUT discards the received datagram in case the length value in the 
header is greater than the actual length of the datagram   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message  to DUT through DIface 0 
         containing  
          length field set to Length of UDPData  8   1  
          UDP Data set to UDPDa ta 
4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Pass Criteria  4 TESTER Verify using Upper Tester  that DUT discards that UDP message  
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  

  
    
  353 UDPFIELDS 12 Fields  Total Length maximum  
Synopsis  Length is the length in octets of this user datagram including this header and the data 
Note Check that the DUT accepts the received datagram in case the length value in the 
header is set to the maximum allowed v alue  
 IPv4 65507 bytes  65535  8 byte UDP header  20 byte IP header  
 IPv6 65535 bytes   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message  to DUT through DIface 0 
         containing  
                  Length  field set to maximum supported value  
                  data set to maximum supported octet size  
4 TESTER Verify using Upper Tester  that DUT has received the UDP message  
Pass Criteria  4 TESTER Verify using Upper Tester  that DUT has received the UDP  message  
Test Iterations   
Notes  Derived from RFC 768 Page 2 Fields MUST  

  
    
  354 UDPFIELDS 13 Fields  Checksum with padding  
Synopsis  Checksum is the 16 bit ones complement of the ones complement sum of a pseudo header 
of information from the IP header the UDP header and the data padded with zero octets 
at the end if necessary to make a multiple of two octets Note In this test  we verify that 
DUT calculates UDP checksum correctly While calculating UDP checksum the padded byte 
is needed to be considered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  udpUserDataSize  
calculatedUDPChecksum  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send UDP Message with  
        udpUserDataSize of data through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         UDP Header Checksum field is set to calculatedUDPChecksum  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Checksu m field is set to calculatedUDPChecksum  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  
 

  
    
  355 UDPFIELDS 14 Fields  Checksum no padding  
Synopsis  Checksum is the 16 bit ones complement of the ones complement sum of a pseudo header 
of information from the IP header the UDP header and the data padded with zero octets 
at the end if necessary to make a multiple of two octets Note In this test  we verify that 
DUT calculates UDP checksum correctly While calculating UDP checksum the padded byte 
is not required  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  calculatedUDPChecksum  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send UDP Message with 100 of data  
        through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Me ssage contains  
         UDP Header Checksum field is set to calculatedUDPChecksum  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Checksum field is set to calculatedUDPChecksum  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  356 UDPFIELDS15 Fields  Checksum incorrect  
Synopsis  If a UDP datagram is received with a checksum that is non zero and invalid UDP MUST 
silently discard the datagram Note In this test we verify th at DUT will not accept UDP 
message with incorrect checksum  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  incorrectUDPChecksum  
UDPDefaultData  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Destination UDP  Port field set to unusedUDPDstPort1  
         UDP Header Checksum field set to incorrectUDPChecksum  
         UDP send data set to UDPDefaultData  
4 TESTER Verify using Upper Tester that application layer did not get  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer did not get  
UDP Message containing  
 UDP data equal to UDPDefaultData  
Test  Iterations   
Notes  Derived from RFC 1122 Section 4134 Page 78 UDP Checksums MUST  

  
    
  357 UDPFIELDS 16 Fields  Checksum  zero checksum  
Synopsis  An all zero transmitted checksum value means that the transmitter generated no checksum 
for debugging or for higher level protocols that dont care An application MAY optionally 
be able to control whether a UDP checksum will be generated but it MUST de fault to 
checksumming on Note In this test we verify that DUT accepts UDP datagram with zero 
checksum  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  UDPDefaultData  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP Header Checksum field set to 0  
         UDP send data set to UDPDefaultData  
4 TESTER Verify using Upper Tester that application layer has  got  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer has got  
UDP Message containing  
 UDP data equal to UDPDefaultData  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  358 DEPRECATED   UDPFIELDS 17 Fields  Checksum  no checksum  
Synopsis  An all zero transmitted checksum value means that the transmitter generated no checksum 
for debugging or for higher level protocols that dont care An application MAY optionally 
be able to control whether a UDP checksum will be generated but it MUST de fault to 
checksumming on Note In this test we verify that application on DUT can generate UDP 
datagram with no checksum  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send a UDP Message with no checksum  
        through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         UDP Header Checksum field is set to 0  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Checksum field is set to 0  
Test Iterations   
Notes  Derived from RFC 768 Page 1 Fields MUST  

  
    
  359 DEPRECATED   UDPFIELDS18 Fields  Checksum controlled  
Synopsis  An application MAY optionally be able to control whether a UDP checksum will be 
generated but it MUST default to checksumming on Note In this test we verify that 
application on DUT ca n turn UDP checksum on while generating UDP datagram  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  calculatedUDPChecksum  
Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message with no checksum  
        through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         UDP Header Checksum field is set to 0 
5 TESTER Externally cause DUT to send a UDP Message with UDP checksum  
        turn on through DIface 0 
6 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
7 DUT Sends Message  
8 TESTER Verify that received UDP Message contains  
         UDP Header Checksum field is set to calculatedUDPChecksum  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 UDP Header Checksum field is set to 0  
7 DUT Sends Message  
8 TESTER Verify that received UDP  Message contains  
 UDP Header Checksum field is set to calculatedUDPChecksum  
Test Iterations   
Notes  Derived from RFC 1122 Section 4134 Page 78 UDP Checksums MUST  
 

  
    
  360 4656  User Interface  
UDPUSER INTERFACE 01  User Interface  New Receive Port  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an indication of source port and source 
address and an operation that allows a datagram to be sent specifyin g the data source 
and destination ports and addresses to be sent Note In this test we verify that user 
interface allows creation of new receive ports  This test is only ran when 
DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to create 10 receive ports on DIface 0 
2 DUT Create 10 receive ports on DIface 0 
3 TESTER Veri fy using Upper Tester that application layer of DUT has created 10  
        receive ports on DIface 0 
Pass Criteria  2 DUT Create 10 receive ports on DIface 0 
3 TESTER Verify using Upper Tester  that application layer of DUT has created 10  
receive ports on DIface 0 
Test Iterations   
Notes  Derived from RFC 768 Page 2 User Interface MUST  

  
    
  361 UDPUSER INTERFACE 02  User Interface  Data octets  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify th at receive 
operations on the receive ports return the data octets correctly  This test is only ran when 
DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  UDPDefaultData  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through  DIface 0 
         containing  
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP send data set to UDPDefaultData  
4 TESTER Verify using Upper Tester that application layer has  got  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer has got  
UDP Message containing  
 UDP data equal to UDPDefaultData  
Test Iterations   
Notes Derived from RFC 768 Page 2 User Interface MUST  

  
    
  362 UDPUSER INTERFACE 03  User Interface  Return Source Port  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets  and an indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that receive 
operations on the receive port s return the source port correctly  This test is only ran when 
DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  unusedUDPSrcPort  
Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source UDP Port field set to unusedUDPSrcPort  
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Verify using Upper Tester that DUT received  
         UDP Message containing  
         UDP Source Port field set to unusedUDPSrcPo rt 
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that DUT received  
UDP Message containing  
 UDP Source Port field set to unusedUDPSrcPort  
Test Iterations   
Notes  Derived from RFC 768 Page 2 User Interface MUST  

  
    
  363 UDPUSER INTERFACE 04 User Interface  Return Source IP Address  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an indication of s ource port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that receive 
operations on the receive ports return the source add ress correctly  This test is only ran 
when DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field set to AIfac e0IP 
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Verify using Upper Tester that application layer received  
        an IP Packet containing a UDP Message containing  
         IP source address equal to AIface 0IP 
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer received  
UDP Message containing  
 UDP source address equal to AIface 0IP 
Test Iterations   
Notes  Derived from RFC 768 Page 2 User Interface MUST  

  
    
  364 UDPUSER INTERFACE 05 User Interface  Source Port to be sent  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that an 
operation that allows a datagram to be sent specifies th e source port to be sent  This test is 
only ran when DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  unusedUDPSrcPort  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send a UDP Message with source port  
        set to unusedUDPSrcPort through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message  contains  
         Source UDP Port field is set to unusedUDPSrcPort  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Source UDP Port field is set to unusedUDPSrcPort  
Test Iterations   
Notes  Derived from RF C 768 Page 2 User Interface MUST  

  
    
  365 UDPUSER INTERFACE 06 User Interface  Destination Port  to be sent  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an  indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that an 
operation that allows a datagram to be sen t specifies the destination port to be sent  This 
test is only ran when DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  testerUDPPort  
Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send a UDP Message with destination  
        port set to testerUDPPort through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         Destination UDP Port field is set to testerUDPPort  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Destination UDP Port field is set to testerUDPPort  
Test Iterations   
Notes  Derived from RFC 768 Page 2 User Interface MUST  
 

  
    
  366 UDPUSER INTERFACE 07 User Interface  Source IP Address to be sent  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that ret urn the data octets and an indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that an 
operation that a llows a datagram to be sent specifies the source address to be sent  This 
test is only ran when DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER Externally cause DUT to send a UDP Message with source  
        address set to DIface 0IP through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         Source IP Address field is set to DIface 0IP 
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Source IP Address field is set to DIface 0IP 
Test Iterations   
Notes Derived from RFC 768 Page 2 User Interface MUST  

  
    
  367 UDPUSER INTERFACE 08 User Interface  Destination Address to be sent  
Synopsis  A user interface should allow the creation of new receive ports receive operations on the 
receive ports that return the data octets and an indication of source port and source 
address and an operation that allows a datagram to be sent specifying the data source 
and destination ports and addresses to be sent Note In this test we verify that an 
operation that allow s a datagram to be sent specifies the destination address to be sent  
This test is only ran when DUTSupportsDynamicInterface is TRUE   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input P arameters  
Test 
Procedure  1 TESTER Externally cause DUT to send a UDP Message with destination  
        address set to AIface 0IP through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received IP Packet containing a UDP Message containing  
         Destination IP Address field is set to AIface 0IP 
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received IP Packet containing a UDP Message containing  
 Destination IP Address field is set to AIface 0IP 
Test Iterations   
Notes  Derived from RFC 768 Page 2 User Interface MUST  
 

  
    
  368 4657  IP Interface  
UDPIP INTERFACE 01  IP Interface  TTL Field  
 
Synopsis  One possible UDPIP interface would return the whole in ternet datagram including all of 
the internet header in response to a receive operation Such an interface would also allow 
the UDP to pass a full internet datagram complete with header to the IP to send The IP 
would verify certain fields for consistency and compute the internet header checksum 
Note In this test we verify that application is notified about TTL value of received UDP 
message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER Set IPIPv6 TTLHoplimit value with defaultIPTTL  
4 TE STER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Destination UDP Port field set to unusedUDPDstPort1  
5 TESTER Verify using Upper Tester that DUT application layer received UDP Message 
containing  
         IP TTL e qual to defaultIPTTL  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
5 TESTER Verify using Upper Tester  that DUT application layer received UDP Message 
containing  
 IP TTL equal to defaultIPTTL  
Test Iterations   
Notes  Derived from RFC 768 Page 3 IP Interface MUST  
 

  
    
  369 4658  Introduction  
UDPINTRODUCTION 01  Introduction  Broadcast Destination Address  
Synopsis  UDP is used by applications that do not require the level of service of TCP or that wish to 
use communications services eg multicast or broadcast delivery not available from TCP 
Note In this test we verify that DUT will accept UDP message with broa dcast destination 
Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  AIface 0BcastIP  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port  unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Destination IP Address field set to AIface 0BcastIP  
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Verify using Upper Tester that application layer  
        received UDP Message containing  
         destination address equal to AIface 0BcastIP  
Pass Criteria  2 DUT Listen on port unuse dUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer  
received UDP Message containing  
 destination address equal to AIface 0BcastIP  
Test Iterations   
Notes  Derived from RFC 1122 Section 411 Page 77 Introduction SHOULD  

  
    
  370 UDPINTRODUCTION 02  Introduction  Multicast Destination Address  
Synopsis  UDP is used by applications that do not require the level of service of TCP or that wish to 
use communications services eg multicast or broadcast delivery not availab le from TCP 
Note In this test we verify that DUT will accept UDP message with multicast destination 
Address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  allSystemMCastAddr  
Check section general Input Para meters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Destination IP Address field set to allSystemMCastAddr  
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Verify using Upper Tester that application layer  
        received UDP Message containing  
         destination address equal to allSystemMCastAddr  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer  
received UDP Message containing  
 destination address equal to al lSystemMCastAddr  
Test Iterations   
Notes  Derived from RFC 1122 Section 411 Page 77 Introduction SHOULD  

  
    
  371 UDPINTRODUCTION 03  Introduction  Pending Listen Call  
Synopsis  If a datagram arrives addressed to a UDP port for which there is no pending LIS TEN call 
UDP SHOULD send an ICMP Port Unreachable message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER HOST 1 Sends Message to DUT through  DIface 0 containing  
         Destination IP Address field set to DIface 0IP 
         Destination UDP Port field set to unusedUDPDstPort1  
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends ICMP Dest Unrchbl Message  
Pass Criteria  3 DUT Sends ICMP Dest Unrchbl Message  
Test Iterations   
Notes  Derived from RFC 1122 Section 4131 Page 77 Ports SHOULD  
 

  
    
  372 4659  IP Option  
UDPIP OPTION 01  IP Option  Time Stamp Option pass any option  
Synopsis  UDP MUST pass any IP option that it receives from the IP layer transparently to the 
application layer Note In this test we verify Time Stamp IP Option   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through  DIface 0 
         containing  
         Destination UDP Port field set to unusedUDPDstPort1  
         Time Stamp IP Option  
4 TESTER Verify using Upper Tester that application layer has received UDP message 
containing  
         IP Header contains  
           IPOPTTIMESTAMP IP option  
5  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer has received UDP message 
containing  
 IP Header contains  
 IPOPTTIMESTAMP IP option  
Test Iterations   
Notes  Derived from RFC 1122 Section 4132 Page 77 IP Option MUST  

  
    
  373 UDPIP OPTION 02  IP Option  Time Stamp Option to be sent  
Synopsis  An application MUST be able to specify IP options to be sent in its UDP datagrams and 
UDP MUST pass these options to the IP layer Note In this test we verify Time Stamp IP 
Option   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message containig  
        IPOPTTIMESTAMP IP Option   through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         Time Stamp IP Option is set to IPOPTTIMESTAMP  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Time Stamp IP Option is set to IPOPTTIMESTAMP  
Test Iterations   
Notes  Derived from RFC 1122 Section 4132 Page 77 IP Option MUST  
 

  
    
  374 46510  UDP Multihoming  
UDPMULTI HOMING 01  UDP Multihoming  appropriate source address  
Synopsis  An application program MUST be able to specify the IP source address to be used for 
sending a UDP datagram or to leave it unspecified in which case the networking software 
will choose an appropriate source address Note In this test we verify that the  
networking software has chosen an an appropriate source address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message with destination  
        address set to AIface 0IP through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         Source IP Address field is set to DIface 0IP 
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 Source IP Address field is set to DIface 0IP 
Test Iterations   
Notes  Derived from RFC 1122 Section 4135 Page 79 UDP Multihoming MUST  

  
    
  375 UDPMULTI HOMING 02  UDP Multihoming  specific destination address  
Synopsis  A requestresponse application that uses UDP should use a source address for the 
response that is the same as the specific destination address of the request   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  UDPDefaultData  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on  DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field set to AIface 0IP 
         Destination IP Address field set to DIfac e0IP 
         Destination UDP Port field set to unusedUDPDstPort1  
4 TESTER Externally cause DUT to send a UDP Message with  
        UDPDefaultData as data through DIface 0 
5 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
6 DUT  Sends Message  
7 TESTER Verify that received UDP Message contains  
         Destination IP Address field is set to AIface 0IP 
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
6 DUT Sends Message  
7 TESTER Verify that receiv ed UDP Message contains  
 Destination IP Address field is set to AIface 0IP 
Test Iterations   
Notes  Derived from RFC 1122 Section 4135 Page 79 UDP Multihoming MUST  
 

  
    
  376 46511  Invalid Addresses  
UDPINVALID ADDRESSES 01  Invalid Addresses  multicast source address  
Synopsis  A UDP datagram received with an invalid IP source address eg a broadcast or multicast 
address must be discarded by UDP or by the IP layer see Section 3213 Note In this 
test we verify UDP Message with multicast address as source address   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  UDPDefaultData  
allSystemMCastAddr  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER  HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field se t to allSystemMCastAddr  
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP send data set to UDPDefaultData  
4 TESTER Verify using Upper Tester that application layer did not get  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that application layer did not get  
UDP Message containing  
 UDP data equal to UDPDefaultData  
Test Iterations   
Notes  Derived from RFC 1122 Section 4136 Page 79 Invalid Addresses MUST  

  
    
  377 UDP INVALID ADDRESSES 02  Invalid Addresses  broadcast source address  
Synopsis  A UDP datagram received with an invalid IP source address eg a broadcast or multicast 
addres s must be discarded by UDP or by the IP layer see Section 3213 Note In this 
test we verify UDP Message with broadcast address as source address   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  UDPDefaultData  
AIface 0BcastIP  
Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally cause DUT to listen on port unusedUDPDstPort1  
        on DIface 0 
2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
3 TESTER   HOST 1 Sends Message to DUT through DIface 0 
         containing  
         Source IP Address field set to AIface 0BcastIP  
         Destination UDP Port field set to unusedUDPDstPort1  
         UDP send data set to UDPDefaultData  
4 TESTER V erify using Upper Tester that application layer did not get  
        UDP Message containing  
         UDP data equal to UDPDefaultData  
Pass Criteria  2 DUT Listen on port unusedUDPDstPort1 on DIface 0 
4 TESTER Verify using Upper Tester  that appli cation layer did not get  
UDP Message containing  
 UDP data equal to UDPDefaultData  
Test Iterations   
Notes  Derived from RFC 1122 Section 4136 Page 79 Invalid Addresses MUST  
 

  
    
  378 46512  UDPApplication layer interface  
UDPAPP INTERFACE 01  UDPApplication layer interface  TTL  
Synopsis  An application layer program MUST be able to set the TTL and TOS values as well as IP 
options for sending a UDP datagram and these values must be passed transparently to the 
IP layer Note In this test we verify that UDP application on DUT can specify TTL value for 
IP header  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message with  
        defaultIPTTL as TTL through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         TTLHoplimit in IPIPv6 header is set to defaultIPTTL  
Pass Criteria  3 DUT S ends Message  
4 TESTER Verify that received UDP Message contains  
 TTLHoplimit in IPIPv6 header is set to defaultIPTTL  
Test Iterations   
Notes  Derived from RFC 1122 Section 414 Page 79 UDPAPPLICATION LAYER INTERFACE 
MUST  

  
    
  379 UDPAPP INTERFACE 02  UDPApplication layer interface  TOS  
Synopsis  An application layer program MUST be able to set the TTL and TOS values as well as IP 
options for sending a UDP datagram and these values must be passed transparently to the 
IP layer Note In this test  we verify that UDP application on DUT can specify TOS value for 
IP header  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message with  
        defaultIPTOS as TOS through DIface 0 
2 TESTER HOST 1 Listens up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
         TOS in IP header is set to defaultIPTOS  
Pass Criteria  3 DUT Sends Message  
4 TESTER Verify that received UDP Message contains  
 TOS in IP header is set to defaultIPTOS  
Test Iterations   
Notes  Derived from RFC 1122 Section 414 Page 79 UDPAPPLICATION LAYER INTERFACE 
MUST  
 

  
    
  380 46513  ICMP Messages  
UDPICMP MESSAGES 01  ICMP Messages  Error   
Synopsis  UDP MUST pass to the application layer all ICMP error messages that it receives from 
the IP layer  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  testerUDPPort2  
Check section general Input Parameters  
Test Procedure  1 TESTER Externally cause DUT to send a UDP Message with destination  
        port set to testerUDPPort2 through DIface 0 and reuse the socket  
2 TESTER HOST 1 Liste ns up toParamListenTime on DIface 0 
3 DUT Sends Message  
4 DUT CONFIGURE Externally cause DUT to listen on port testerUDPPort2 on  
        DIface 0 
5 DUT Listen on port testerUDPPort2 on DIface 0 
6 TESTER  HOST 1 Sends ICMP Dest Unrc hbl Message to DUT through  
         DIface 0 containing  
         Destination IP Address field set to DIface 0IP 
7 TESTER Verify using Upper Tester that DUT application layer  
        received ICMP Error Message containing  
         error code equ al to ICMP Dest Unrchbl  
Pass Criteria  3 DUT Sends Message  
5 DUT Listen on port testerUDPPort2 on DIface 0 
7 TESTER Verify using Upper Tester  that DUT application layer  
received ICMP Error Message containing  
 error code equal to ICMP Dest Unrchbl  
Test Iterations   
Notes  Derived from RFC 1122 Section 4133 Page 78 ICMP Messages MUST  

  
    
  381 47 Dynamic Host configuration Protocol Version 4 DHCPv4 Server   
DHCPv4 Server Tests are not relevant for Automotive Use Cases  

  
    
  382 48 Dynamic Host configuration Protocol Version 4 DHCPv4 Client  
481  General  
 
The scope of this chapter is to specify test cases for the Dynamic Host configuration Protocol Version 4 
DHCPv4 from the following standards  
 
 RFC 2131   Dynamic Host Configuration Protocol  
 
Though the focus of  conformance testing has been limited to the above mentioned specification 
document we have relied heavily upon the following document as specification for DHCP Message 
Options  
 RFC 2132  DHCP Options and BOOTP Vendor Extensions  
482  Simulated topologies  
 
The number of DUT interfaces required by the topologies described below are as follows  
 
        TOPOLOGY ID     Number of DUT Interfaces     Emulated Actors  
Topology 1 1 1 Server              
Topology 2 2 1 Server              
Topology 3 1 2 Server s 
Topology 4 1 1 Server  
1 Static IP assigned non DHCP Client  
 
In each test TESTER simulates a portion of exactly one of the 4 topologies shown below  Each  node 
shown in a topology is represented  with a unique identifier The test methods follow the same 
representation of these nodes  
 

  
    
  383  TOPOLOGY 1 
 
In this topology following is being emulated  
o DHCP Server SERVER 1 connected to DUT through DIface 0 belonging to network 
N0 
 
 
 
 TOPOLOGY 2 
 
In this topology following is being emulated  
o DHCP Server SERVER 1 connected to DUT through DIface 0 belonging to network 
N0 
o DHCP Server SERVER 1 connected to DUT through DIface 1 belonging to netwo rk 
N1 
 
 TIface 1 TIface 0 
DUT N0 N0 
N1 N1 
SERVER 1 DIface 0 
TOPOLOGY 2 DIface 1 ECU TIface 0 
TOPOLOGY 1 N0 N0 
SERVER 1 DIface 0 
DUT ECU 

  
    
  384  TOPOLOGY 3 
 
In this topology following is being emulated  
o DHCP Server SERVER 1 connected to DUT through DIface 0 belonging     to network 
N0 
o DHCP Server SERVER 2 connected to DUT through DIface 0 belonging     to network 
N0 
 
These two servers are connected to the same DUT interface DIface 0 through an emulated 
broadcast device eg HUB See below  
 
 TIface 0 
TIface 0 
N1 
TOPOLOGY 3 N0 
N0 TIface 0 DIface 0 SERVER 1 
SERVER 2 N0 
ECU 
 HUB  

  
    
  385  TOPOLOGY 4 
 
In this topology following is being emulated  
o DHCP Server SERVER 1 connected to DUT through DIface 0 belonging     to network N0  
o Non DHCP Client with Statically assigned IP Address These two objects are connected to 
the same DUT interface DIface 0 through an emulated broadcast device eg HUB See 
above  
 
 TIface 0 
TIface 0 
N1 
TOPOLOGY 4 N0 
N0 TIface 0 DIface 0 SERVER 1 
STATIC CLIENT 1 N0 
ECU 
 HUB  

  
    
  386 483  Required topology related configuration  
 
This suite expects to be running against any IP enabled network interface which supports acquisitiong of 
IP address using DHCP Most of the tests can be run against a single interface only a few tests  require 
that the TESTER be connected to 2 interfaces that are connected to the DUT  
 
 The highest number of DUT interfaces required in the DHCP Client Test Suite is 2 two  
 
 
The following information are obtained from the unu sed IP network configurations  
 IP Address of all the emulated servers  
 IP Address Pool to be offered by these emulated DHCP Servers  
 
484  Coverage  
 
Section 
No      Test Category                            Test Numbers  
 16 2        Design Goals and Protocol 
Summary   The Client Server Protocol             DHCPv4CLIENTSUMMARY01  to 
DHCPv4CLIENTSUMMARY04  
3 The Client Server Protocol                DHCPv4CLIENTPROTOCOL01  to 
DHCPv4CLIENTPROTOCOL0 6 
31 Client server interaction  allocating    
a network address   DHCPv4CLIENTALLOCATING01  to 
DHCPv4CLIENTALLOCATING 14 
32 Client server interaction  reusing a     
previously allocated network address      DHCPv4CLIENTREUSING01  to 
DHCPv4CLIENTREUS ING0 8 
34 35 Client parameters in DHCP  DHCPv4CLIENTPARAMETERS01  to 
DHCPv4CLIENTPARAMETERS0 6 
36 
37 444         DHCP Usage                DHCPv4CLIENTUSAGE01  to 
DHCPv4CLIENTUSAGE0 3 
41 Constructing and sending DHCP 
messages              DHCPv4CLIENTCONSTRUCTINGMESSAGES01  to 
DHCPv 4CLIENTCONSTRUCTINGMESSAGES14  
 432         DHCPREQUEST message                       DHCPv4CLIENTREQUEST01  to 
DHCPv4CLI ENTREQUEST12  
 441         Initialization and allocation of 
network address                       DHCPv4CLIENTINITIALIZATIONALLOCATION01  
to DHCPv4CL IENTINITIALIZATIONALLOCATION10  
 443         Initialization with an externally  
assigned network address        DHCPv4CLIENTINITIALIZATIONEXTERNAL01  to 
DHCPv4CLIENTINITIALIZATIONEXTERNAL0 3 
 445         Reacquisition and expiration              DHCPv4CLIENTREACQUISITION01  to 
DHCPv4CLIENTREACQUISITION10  
 TOTAL                                                    
 90 
                                               Negative  10 
 
 

  
    
  387 485  Parameters and constants used in the tests  
 
ParametersConstants  Description  
ParamLeaseTime  Value of DHCP IP Address Lease Time in seconds which will be offered 
to the DUT DHCP Client unless overridden by specific value in a 
particular test It is advised that a too small value less than 10 seconds 
can create some critical timeout related issues possibly leading to 
undesirable test results since other timers like T1 Renewal Time and 
T2 Rebinding Time are based on this entries Default  15 seconds   
ParamToleranceTime   The amount of tolerance to be provided so that we do not miss DUT 
packets Increasing the value of this entry too much will mean adding 
too muc h tolerance to DUT behaviour which can mean more tests 
passing but actually with not sufficient conformance with the 
specificationDefault  1 second   
ParamProcessTime   The amount of time TESTER  will usually wait for the DUT to process 
some PDU sent by TESTER  before continuing with the test The purpose 
of this entry also is to provide some amount of latency consideration 
for the DUT so that the DUT gets ample time to process some PDU and 
take ac tion in accordance to that Default  2 seconds   
ParamListenTime  When we listen for a packet from the DUT either as response to a 
packet we have senht or when the specification does not define any 
specific time to listen for this entry is used It is  also very important 
that it should have a large value since we start listening for a packet 
and in the background some automated script may be fired to trigger 
some event of the DUT which should cause the DUT to  send our 
desirable packet Default 10 se conds   
ParamFirstRetransmissionInterv
al  The number of seconds taken by the DUT to re send a DHCPDISCOVER 
after TESTER  acting as a DHCP Server did not send a DHCPOFFER 
corresponding to the first DHCPDISCOVER sent by the DUT This 
parameter is used to calculate the next retransmission interval by the 
TESTER  and is different in case of different DUTs The delay between 
retransmissions SHOULD be chosen to allow sufficient time for replies 
from the server to be delivered based on the characteristics of the 
internetwork between the client and the server For example in a 
10Mbsec Ethernet internetwork the delay before the fi rst 
retransmission SHOULD be 4 seconds randomized by the value of a 
uniform random number chosen from the range 1 to 1 RFC 
2131Sec 41 Pg 24 Default 4 seconds           
DHCP MAGIC COOKIE   The first 4 octets of DHCP Options which represent the value 99 130 
83 and 99 respectivelyRef RFC2131 Section 3 Page 13   
IPBROADCAST ADDRESS   The all 1 IP broadcast address to which if any IP packet is sent all the 
nodes within the physical LAN  and logical LAN is policy permits will 
receive the packet Ref RFC2131 Section 443 Page 39     
SERVERn IPADDRESS   IP Address of the emulate d nth DHCP Server  n  1 2  

  
    
  388 SERVERn IPPOOL LM  Mth IP Address in the pool of IP Address that the nth server has to 
offer to clients requesting IP address through associated Lth interface 
connection between DUT and TESTER  
SERVERn IPPOOL NETMASK   IP Subnet Mask for all the pools of IP Addresses as above associated 
globally with the nth emualated DHCP Server   
MAC UNUSED ADDRESS   A MAC Address Layer 2 address which is not of any of the interfaces 
of TESTER  nor DUT  
IPUNUSED ADDRESS   IP Address which is of a different subnet than all the emulated servers 
and all other objects within the simulated topologies  
IPUNUSED NETMASK   IP Subnet Mask of the above IP Unused Address which is basically the 
IP Netmask provided for the configuration entry IP Unused Net Mask  
HIGH LEASE TIME  In some tests which require the DUT to retransmit its DHCPREQUEST 
Message in Renewing state must h ave sufficiently high lease time so 
that the calculated value of T1 is such that half way through T2 from T1 
is greater than 60 seconds  Value  350 seconds  Ref RFC2131 
Section 445 Page 41  
VERY HIGH LEASE TIME   In some tests which require the DUT to retransmit its DHCPREQUEST 
Message in Rebinding state must have sufficiently high lease time so 
that the calculated value of T2 is such that half way through Lease Time 
from T2 is greater than 60 seconds  Value  1 000 seconds  Ref 
RFC2131 Section 445 Page 41  
REMOTE CLIENTn LEASE TIME  The nth remote DHCP Client DUT which is served by emulated DHCP 
Server if identified as REMOTE CLIENTn  then the lease time for 
which the client is expected to use the o ffered IP Address is identified 
by this entry  
REMOTE CLIENTn T1  The nth remote DHCP Client DUT which is served by emulated DHCP 
Server if identified as REMOTE CLIENTn   then the renewal time after 
which client is expected to attempt automated renewal of IP address 
as per RFC2131 Section 44 Page 35 is identified by this entry  
Expected value  05  Offered Lease Time  
REMOTE CLIENTn T2  The nth remote DHCP Client DUT which is served by emulated DHCP 
Server if identified as REMOTE CLIENTn  then the rebinding time 
after which client is expected to attempt broadcasting of 
DHCPREQUEST message after failing to get response in Renewing state 
as per RFC2131 Section 44 Page 35 is identified by this entry  
Expected value  0875  Offered Lease Time  
 
 

  
    
  389 486  Tests  

  
    
  390 5761 Summary  
DHCPv4CLIENTSUMMARY 01 Setup Verification DHCP Client Listens on UDP port 
68  
Synopsis  A DHCP Client Listens on UDP port 68  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
Test Iterations  
 
Notes  Derived from MUST  

  
    
  391 DHCPv4CLIENTSUMMARY 02 Discard DHCP Offsers whose xid is not the one of the 
latest DHCPDISCOVER sent   
Synopsis  A DHCP client must be prepared to receive multiple responses to a request for 
configuration parameters Note If the xid of an arriv ing DHCPOFFER message does not 
match the xid of the most recent DHCPDISCOVER message the DHCPOFFER message must 
be silently discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 3  
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDIS COVER Message  
5 TESTER Extracts the content of xid field to extractedXID  
6 TESTER DHCP Server SERVER 1 Sends DHCPOFFER Message to DUT  
        through DIface 0 containing   
         xid field set to extractedXID1  
7 TESTERDHCP Server SER VER2 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         xid field set to extractedXID  
8 TESTERDHCP Server SERVER 2 Listens upto ParamListenTime on  
       DIface 0 
9 DUT Sends DHCPREQUEST Message  
10 TESTER Veri fy that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 54 Server Identifier Option  
           Length field set to 4  
           Value set to SERVER2 IPADDRESS  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
9 DUT Sends DHCPREQUEST Message  
10 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 54 Server Identifier Option  
 Length field set to 4  
 Value set to SERVER2 IPADDRESS  

  
    
  392 Test Iterations  
 
Notes  Derived from MUST  
DHCPv4CLIE NTSUMMARY 03 Receive DHCP messages with an options field of at 
least length 312 octets   
Synopsis  A DHCP client must be prepared to receive DHCP messages with an options field of at 
least length 312 octets This requirement implies that a DHCP client must be prepared to 
receive a message of up to 576 octets  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 2 Page 10 Protocol Summary  MUST  

  
    
  393 DHCPv4CLIENTSUMMARY 04 The flags field must be set to zero by clients   
Synopsis  The remaining bits of the flags field are reserved for future use They MUST be set to 
zero by clients and ignored by servers and relay agents  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DH CPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Bits 2 to 16 of flags field  is set to  0  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Bits 2 to 16 of flags field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 2 Page 11 Protocol Summary  MUST  

  
    
  394 4861  The Client Server Protocol  
DHCPv4CLIENTPROTOCOL 01 First four octets of the options field of the DHCP 
message   
Synopsis  The first four octets of the options field of the DHCP message contain the decimal 
values 99 130 83 and 99 respectively this is the same magic cookie as is defined in RFC 
1497  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListen Time on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         First four octets of DHCP Options is set to  
           DHCP MAGIC COOKIE  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 First four octets of DHCP Options is set to  
DHCP MAGIC COOKIE  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 3 Page 13 The Client Server Protocol  MUST  

  
    
  395 DHCPv4CLIENTPROTOCOL 02 DHCP message type option present in 
DHCPDISCOVER Message   
Synopsis  One particular option  the DHCP message type  option  must be included in every 
DHCP message Note This test verifies the above statement for DHCPDISCOVE R 
Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Message Option containing  
           Type field set to 53 Message Type Option  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Message Option containing  
 Type field set to 53 Message Type Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 3 Page 13 The Client Server Protocol  MUST  

  
    
  396 DHCPv4CLIENTPROTOCOL 03 DHCP message type option present in 
DHCPREQUEST Message   
Synopsis  One particular option  the DHCP message type  option  must be included in ever y 
DHCP message Note This test verifies the above statement for DHCPREQUEST Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREQUESTING  
4 DUT Transit finite state to DHCPCLIENTSTATER EQUESTING  
5 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 53 Message Type Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEREQUESTING  
5 TESTER Verify  that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 53 Message Type Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 3 Page 13 The Client Server Protocol  MUST  
 

  
    
  397 DHCPv4CLIENTPROTOCOL 04 DHCP message type option present in 
DHCPRELEASE Message   
Synopsis  One particular option  the DHCP message type  option  must be included in every 
DHCP message Note This test verifies the above statement for DHCPRELEASE Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DH CP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to release DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamL istenTime on  
       DIface 0 
7 DUT Sends DHCPRELEASE Message  
8 TESTER Verify that received DHCPRELEASE Message contains  
         Message Option containing  
           Type field set to 53 Message Type Option  
Pass Criteria  4 DUT Transit fini te state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPRELEASE Message  
8 TESTER Verify that received DHCPRELEASE Message contains  
 Message Option containing  
 Type field set to 53 Message Type Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 3 Page 13 The Client Server Protocol  MUST  
 

  
    
  398 DHCPv4CLIENTPROTOCOL 05 DHCP message type option present in 
DHCPDECLINE Message   
Synopsis  One particular option  the DHCP message type  option  must be included in every 
DHCP message Note This test verifies the above statement for DHCPDECLINE Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message  contains  
         ARP Target IP Address field is set to SERVER1 IPPOOL 00 
8 TESTERDHCP Server SERVER 1 Sends ARP Response Message to DUT  
       through DIface 0 containing   
         ARP Sender MAC Address field set to MAC UNUSED ADDRESS  
         ARP Sender IP Address field set to  
           SERVER1 IPPOOL 00INVALID  
9 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
10 DUT Sends DHCPDECLINE Message  
11 TESTER Verify that received DHCPDECLINE Me ssage contains  
         Message Option containing  
           Type field set to 53 Message Type Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 ARP Target IP Address field is set to SERVER1 IPPOOL 00 
10 DUT Sends DHCPDECLINE Message  
11 TESTER Verify that received DHCPDECLINE Message contains  
 Message Option containing  
 Type field set to 53 Message Type Option  

  
    
  399  
DHCPv4C LIENTPROTOCOL 06 DHCP message type option present in 
DHCPINFORM Message   
Synopsis  One particular option  the DHCP message type  option  must be included in every 
DHCP message Note This test verifies the above statement for DHCPINFORM Me ssage  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address  SERVER1 IPPOOL 00 with mask  
        SERVER1 IPPOOL NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to send DHCPINFORM Message through  
        DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime  on  
       DIface 0 
5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
         Message Option containing  
           Type field set to 53 Message Type Option  
Pass Criteria  5 DUT Sends DHCPINFORM Messag e 
6 TESTER Verify that received DHCPINFORM Message contains  
 Message Option containing  
 Type field set to 53 Message Type Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 3 Page 13 The Client Server Protocol  MUST  

  
    
  400 4862  Client server int eraction  allocating a network address  
DHCPv4CLIENT ALLOCATING 01  Broadcast DHCPDISCOVER message on its local 
physical subnet  
Synopsis  The client broadcasts a DHCPDISCOVER message on its local physical subnet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Destination IP Address field is set to  
           IPBROADCAST ADDRESS  
Pass Criteria  4 DUT  Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Destination IP Address field is set to  
IPBROADCAST ADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 13 MUST  
 

  
    
  401 DHCPv4CLIENT ALLOCATING 02 Send DHCPDISCOVER may suggest a value for 
lease time  
Synopsis  The DHCPDISCOVER message MAY include options that suggest values for the network 
address and lease duration Note This test checks that DUT may suggest a value for lease 
time  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP opti on 51 IP Address Lease Time  
        Option  
        with value 60 for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPDISC OVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
         Message Option containing  
           Type field set to 51 IP Address Lease Time Option  
           Length field set to 4  
           Value set to 60  
Pass Criteria  5 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
 Message Option containing  
 Type field set to 51 IP Address Lease Time Option  
 Length field set to 4  
 Value set to 60  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 13 MAY  
 

  
    
  402 DHCPv4CLIENT ALLOCATING 03  Send DHCPREQUEST  must include the server 
identifier   
Synopsis  The client broadcasts a DHCPREQUEST message that MUST include the server identifier 
option to indicate which server it has selected  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISC OVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 54 Server Identifier Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 54 Server Identifier Option  
 Length field set to 4  
 Value set to SERVER1 IPADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 16 MUST  
 

  
    
  403 DHCPv4CLIENT ALLOCATING 04  Send DHCPREQUEST   header value secs field   
Synopsis  the DHCPREQUEST message MUST use the same value in the DHCP message headers 
secs field  as the original DHCP DISCOVER message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Extracts the content of secs field to extractedSeconds  
6 TESTERDHCP Server SERVER 1 Send s DHCPOFFER Message to DUT through  
       DIface 0 
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         secs fie ld is set to extractedSeconds  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
 secs field is set to extractedSeconds  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 16 MUST  
 

  
    
  404 DHCPv4CLIENT ALLOCATING 05  Send DHCPREQUEST to the same IP broadcast 
address   
Synopsis  the DHCPREQUEST message MUST  be sent to the same IP broadcast address as the 
original DHCPDISCOVER message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TEST ERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Destination IP Address field is set to  
           IPBROADCAST ADDR ESS  
6 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQU EST Message contains  
         Destination IP Address field is set to  
           IPBROADCAST ADDRESS  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Destination IP Address field is set to 
IPBROADCAST ADDRESS  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
 Destination IP Address field is set to  
IPBROADCAST ADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 16 MUST  
 

  
    
  405 DHCPv4CLIENT ALLOCATING 06  Send DHCPDISCOVER message  timeout and 
resend on no DHCPOFFER messages  
Synopsis  The client times out and retransmits the DHCPDISCOVER message if the client receives 
no DHCPOFFER messages  
Prerequisites  Check section  prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Serve r SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPDISCOVER Message  
Pass Criteria  4 DUT Sends DHC PDISCOVER Message  
6 DUT Sends DHCPDISCOVER Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 16 MUST  
 

  
    
  406 DHCPv4CLIENT ALLOCATING 07  Send DHCPDECLINE Message and restart 
configuration process   
Synopsis  If the client detects that the address is already in use eg through the use of ARP the 
client MUST send a DHCPDECLINE message to the server and restarts the configuration 
process Note In this test we check that the DUT does restart the configuratio n process 
after sending the DHCPDECLINE Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 4  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on  DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTERDHCP Client STATIC CLIENT 1 Listens upto  
       ParamListenTime on DIface 0 
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
         ARP Target IP Address field is set to SERVER1 IPPOOL 00 
8 TESTERDHCP Client STATIC CLIENT1 Sends ARP Response Message to  
       DUT through DIface 0 containing   
         ARP Sender MAC Address field set to MAC UNUSED ADDRESS  
         ARP Target MAC Address field set to DIface 0MAC ADDRESS  
         ARP Sender IP Address field se t to SERVER1 IPPOOL 00 
         ARP Target IP Address field set to SERVER1 IPPOOL 00 
9 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
10 DUT Sends DHCPDECLINE Message  
11 TESTERDHCP Server SERVER 1 Listen s upto 10   
       ParamToleranceTime second on DIface 0 
12 DUT Sends DHCPDISCOVER Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message  contains  
 ARP Target IP Address field is set to SERVER1 IPPOOL 00 
10 DUT Sends DHCPDECLINE Message  
12 DUT Sends DHCPDISCOVER Message  

  
    
  407 Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  
 

  
    
  408 DHCPv4CLIENT ALLOCATING 08  Wait minimum 10 seconds before restarting 
configuration   
Synopsis  The client SHOULD wait a minimum of ten seconds before restarting the configuration 
process to avoid excessive network traffic in case of looping  
Prerequisites  Check section prerequisites  
Test  setup  Topology 4  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTERDHCP Client STATIC CLIENT 1 Listens upto  
       ParamListenTime on DIface 0 
6 DUT Sends ARP Request Message  
7 TESTER Ver ify that received ARP Request Message contains  
         ARP Target IP Address field is set to SERVER1 IPPOOL 00 
8 TESTERDHCP Client STATIC CLIENT 1 Sends ARP Response Message to  
       DUT through DIface 0 containing   
         ARP Sender MAC Address field set to MAC UNUSED ADDRESS  
         ARP Target MAC Address field set to DIface 0MAC ADDRESS  
         ARP Sender IP Address field set to SERVER1 IPPOOL 00 
         ARP Target IP Address field set to SERVER1 IPPOOL 00 
9 TESTERD HCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
10 DUT Sends DHCPDECLINE Message  
11 TESTERDHCP Server SERVER 1 Listens upto 10   
       ParamToleranceTime second on DIface 0 
12 DUT Sends DHCPDISCOVER Message  
13 TESTER Verify that the time interval between  
        reception of last DHCPDECLINE Message and reception of last  
         DHCPDISCOVER Message  
         is greater than  
        10    ParamToleranceTime second  
Pass Criteria  4 DUT Transit finite sta te to DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
 ARP Target IP Address field is set to SERVER1 IPPOOL 00 
10 DUT Sends DHCPDECLINE Message  

  
    
  409 12 DUT Sends DHCPDISCOVER Messag e 
13 TESTER Verify that the time interval between  
reception of last DHCPDECLINE Message and reception of last  
DHCPDISCOVER Message  
is greater than  
10  ParamToleranceTime second  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 SHOULD  
 

  
    
  410 DHCPv4CLIENT ALLOCATING 09  Receive DHCPNAK  restart the configuration 
process  
Synopsis  If the client receives a DHCPNAK message the client restarts the configuration 
process  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit it s state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTERDHCP Server SERVER 1 Sends DHCPNAK Message to DUT through  
       DIface 0 
8 TESTERDHCP Server SERVER 1 Listens upto 10   
       ParamToleranceTime second on DIface 0 
9 DUT Sends DHCPDISCOVER Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTA TERENEWING  
6 DUT Sends DHCPREQUEST Message  
9 DUT Sends DHCPDISCOVER Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  
 

  
    
  411 DHCPv4CLIENT ALLOCATING1 0 Resend DHCPREQUEST message if timeout on no 
DHCPACK or a DHCPNAK message  
Synopsis  The client times out and retransmits the DHCPREQUEST message if the client receives 
neither a DHCPACK or a DHCPNAK message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER Initialize server1 to offer IP  Address Lease Time  
         of HIGH LEASE TIME seconds to the DUT  
4 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
5 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 TESTERDHCP Server SERV ER1 Listens upto REMOTE CLIENT1 T2  
       REMOTE CLIENT1 T1  ParamToleranceTime second on DIface 0 
7 DUT Sends 2 DHCPREQUEST Messages  
Pass Criteria  5 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
7 DUT Sends 2 DHCPREQUEST Messages  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  
 

  
    
  412 DHCPv4CLIENT ALLOCATING1 1 Notify the user that the initialization process has 
failed and is restarting  
Synopsis  The client SHOULD notify the user that the initialization process has failed and is 
restarting  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTS TATEBOUND  
5 TESTERDHCP Server SERVER 1 Listens upto  
       REMOTE CLIENT1 LEASE TIME  ParamToleranceTime second on DIface 
0 
6 DUT Sends DHCPDISCOVER Message  
7 TESTER Verify that the DUT has correctly logged that  
        initialization p rocess has failed and is restarting  
        for  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Sends DHCPDISCOVER Message  
7 TESTER Verify that the DUT has correctly logged that  
initialization process has failed and is rest arting  
for  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 SHOULD  
 

  
    
  413 DHCPv4CLIENT ALLOCATING1 2 Send DHCPRELEASE message   
Synopsis  The client may choose to relinquish its lease on a network address by sending a 
DHCPRELEASE message to the server  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite stat e to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to release DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPRELEASE Message  
8 TESTER Wait till ParamProcessTime for DU T to actually stop using  
        the released address  
9 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Dest ination IP Address field set to SERVER1 IPPOOL 00 
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Does not send ICMP Echo Reply Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOU ND 
7 DUT Sends DHCPRELEASE Message  
11 DUT Does not send ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MAY  
 

  
    
  414 DHCPv4CLIENT ALLOCATING1 3 Send DHCPRELEASE  client identifier  or chaddr 
fields and network address   
Synopsis  The client identifies the lease to be released with its client identifier or chaddr and 
network address in the DHCPRELEASE message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Extracts the content of chaddr field to extractedChaddr  
6 DUT CONFIGURE Externally cause DUT to release DIface 0 
7 TESTERDHCP Server SERVER 1 Li stens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPRELEASE Message  
9 TESTER Verify that received DHCPRELEASE Message contains  
         chaddr field is set to extractedChaddr  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENT STATEBOUND  
8 DUT Sends DHCPRELEASE Message  
9 TESTER Verify that received DHCPRELEASE Message contains  
 chaddr field is set to extractedChaddr  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  
 

  
    
  415 DHCPv4CLIENT ALLOCATING1 4 Consisent use of client identifier field   
Synopsis  If the client used a client identifier when it obtained the lease it MUST use the same 
client identifier in the DHCPRELEASE message If the client supplies a client identifier the 
client MUST u se the same client identifier in all subsequent messages  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP option 61 Client identifier Option  
        with value CONFORMANCE DUT 0 for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATESELECTING  
5 DUT Transit finite state to DHCPCLIENTSTATESELECTING  
6 TESTER Extracts the content of 61 Client identifier Option to  
        extractedClientID  
7 TESTER DHCP Server SERVER 1 Caus e DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
8 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
9 DUT CONFIGURE Externally cause DUT to release DIface 0 
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends DHCPRELEASE Message  
12 TESTER Verify that received DHCPRELEASE Message contains  
         Message Option containing extractedClientID  
Pass Criteria  5 DUT Transit finite state to DHCPCLIENTSTATESELECTING  
8 DUT Transit finit e state to DHCPCLIENTSTATEBOUND  
11 DUT Sends DHCPRELEASE Message  
12 TESTER Verify that received DHCPRELEASE Message contains  
 Message Option containing extractedClientID  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  

  
    
  416 4863  Client server interaction  reusing a previously allocated network 
address  
DHCPv4CLIENTREUSING 01 Restarts initialization process retransmission 
algorithm timeout   
Synopsis  If the client receives neither a DHCPACK or a DHCPNAK message after employing the 
retransmission algorithm the client reverts to INIT state and restarts the initialization 
process  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER Initialize server1 to offer IP Address Lease Time  
         of HIGH LEASE TIME seconds to the DUT  
4 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
5 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 TESTER Wait till ParamProcessTime for DUT to stabi lize in BOUND  
        state  
7 DUT CONFIGURE Externally cause DUT to renew DIface 0 
8 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
9 DUT Sends 2 DHCPREQUEST Messages  
10 TESTERDHCP Server SERVER 1 Listens up to 130  10   
       ParamToleranceTime second on DIface 0 
11 DUT Sends DHCPDISCOVER Message  
12 Note We have derived 130 seconds keeping in mind the total retransmission  
        time in RFC 2131 Section 41 Page 24  
Pass Criteria  5 DUT Trans it finite state to DHCPCLIENTSTATEBOUND  
9 DUT Sends 2 DHCPREQUEST Messages  
11 DUT Sends DHCPDISCOVER Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 31 Page 17 MUST  

  
    
  417  
DHCPv4CLIENTREUSING 02 Reusing a previously allocated network address   
Synopsis  If a client remembers and wishes to reuse a previously allocated network address a client 
may choose to omit some of the steps described in the previous section  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till ParamProcessTime for DUT to stabilize in BOUND  
        state  
6 DUT CONFIGURE Externally cause DUT to renew DIface 0 
7 TESTERDHCP Server  SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
8 DUT Sends DHCPREQUEST Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section  32 Page 17 MAY  
 

  
    
  418 DHCPv4CLIENTREUSING 03 Broadcast a DHCPREQUEST if reusing a previously 
allocated network address   
Synopsis  If a client remembers and wishes to reuse a previously allocated network address  The 
client broadcasts a DHCPREQUEST message on its local subnet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBO UND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to renew DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify  that received DHCPREQUEST Message contains  
         Destination IP Address field is set to SERVER1 IPADDRESS  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPR EQUEST Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 17 18 MUST  
 

  
    
  419 DHCPv4CLIENTREUSING 04 Reusing a previously allocated network address  
include requested IP address option  
Synopsis  If a client remembers and wishes to reuse a previously allocated network address  The 
message includes the clients network address in the requested IP a ddress option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT  to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to renew DIface 0 
6 TESTERDHCP Serv er SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 50 Requested IP Address Option  
           Length field set to 4  
           Value set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 50 Requested IP Address Option  
 Length field set to 4  
 Value set to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 18 MUST  

  
    
  420 DHCPv4CLIENTREUSING 05 If not received an adress do not fill in the ciaddr field  
Synopsis  As the client has not received its network address it MUST NOT fill in the ciaddr 
field  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check  section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENT STATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to renew DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTE R Verify that received DHCPREQUEST Message contains  
         ciaddr field is set to 0  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 ciaddr field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 18 MUST  

  
    
  421 DHCPv4CLIENTREUSING 06 Use same client identifier in all subsequent messages 
DHCPREQUEST message  
Synopsis  If the client used a client identifier to obtain its address the client MUST use the same 
client identifier in the If the client supplies a client identifier the client MUST use the 
same client identifier in all subsequent messages DHCPREQUEST me ssage  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP option 61 Client identifier Option  
        with value CONFORMANCE DUT 0 for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATE BOUND  
5 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 TESTER Extracts the content of 61 Client identifier Option to  
        extractedClientID  
7 DUT CONFIGURE Externally cause DUT to renew DIface 0 
8 TESTERDHCP Server SERVER 1 Listens  upto ParamListenTime on  
       DIface 0 
9 DUT Sends DHCPREQUEST Message  
10 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing extractedClientID  
Pass Criteria  5 DUT Transit finite state to DHCPCLIENT STATEBOUND  
9 DUT Sends DHCPREQUEST Message  
10 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing extractedClientID  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 18 MUST  

  
    
  422 DHCPv4CLIENTREUSING 07 Respond to ICMP Echo Request messages when 
reusing address   
Synopsis  the client may respond to ICMP Echo Request messages at this point  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Tr ansit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to renew DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received  DHCPREQUEST Message contains  
         Destination IP Address field is set to SERVER1 IPADDRESS  
9 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address field set to SERVER1 IPPOOL 00 
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Reply Message  
Pass Criteria  4 DUT Trans it finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
11 DUT Sends ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 18 MAY  

  
    
  423 DHCPv4CLIENTREUSING 08 On DHCPNAK fo not reuse network address and 
request new using non abbreviated process   
Synopsis  If the client receives a DHCPNAK message it cannot reuse its remembered netw ork 
address It must instead request a new address by restarting the configuration process this 
time using the non abbreviated procedure described in section 31  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPC LIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to renew DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTERDHCP Server SERVER 1 Sends DHCPNAK Message to DUT through  
       DIface 0 
9 TESTERDHCP Server SERVER 1 Listens upto 10   
       ParamToleranceTime second on DIface 0 
10 DUT Sends DHCPDISCOVER Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
10 DUT Sends DHCPDISCOVER Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 32 Page 19 MUST  

  
    
  424 4864  Client parameters in DHCP  
DHCPv4CLIENTPARAMETERS 01 Interpreration of  time values  
Synopsis  If a client has obtained a network address through some other means eg manual 
configuration it may use a DHCPINFORM request message to obtain other local 
configuration parameters  
Prerequisites  Check section prerequisites  
Test  setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address IP UNUSED ADDRESS with mask  
        IPUNUSED NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPINFORM Message  
Pass Criteria  5 DUT Sends DHCPINFO RM Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 34 Page 20 MAY  

  
    
  425 DHCPv4CLIENTPARAMETERS 02 Default value for TTL  
Synopsis  First most of the parameters have defaults defined in the Host Requirements RFCs if the 
client receives no parameters from the server that override the defaults a client uses those 
default values Note This test checks that if default value is not over ridden DUT uses the 
default value for Time To Live as per RFC1770 IANA Numbering  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till ParamProcessTime for DUT to perform necessary  
        verification of offered IP address  
6 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 
7 TESTERDHCP Server SERVER 1 Listens upto ParamL istenTime on  
       DIface 0 
8 DUT Sends ICMP Echo Reply Message  
9 TESTER Verify that received ICMP Echo Reply Message contains  
         Time to Live field is set to 64  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
8 DUT  Sends ICMP Echo Reply Message  
9 TESTER Verify that received ICMP Echo Reply Message contains  
 Time to Live field is set to 64  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 35 Page 21 Client parameters in DHCP  MUST  

  
    
  426 DHCPv4CLIENTPARAMETERS 03 Override value for TTL  
Synopsis  First most of the parameters have defaults defined in the Host Requirements RFCs if the 
client receives no parameters from the server that override the defaults a client uses those 
default val ues Note This test checks that if default value is overridden DUT uses the 
overridden value for Time To Live  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Message Option containing  
           Type field set to 51 IP Address Lease Time Option  
           Length field set to 4  
           Value set to ParamLeaseTime  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type  field set to 51 IP Address Lease Time Option  
           Length field set to 4  
           Value set to ParamLeaseTime  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Mess age contains  
 Message Option containing  
 Type field set to 51 IP Address Lease Time Option  
 Length field set to 4  
 Value set to ParamLeaseTime  
Notes  Derived from RFC 2131 Section 35 Page 21 Client parameters in DHCP  MAY  

  
    
  427 DHCPv4CLIENTPARAMETERS 04 Use same parameters in DHCPREQUEST message 
as in DHCPDISCOVER  
Synopsis  If the client includes a list of parameters in a DHCPDISCOVER message it MUST include 
that list in any subsequent DHCPREQUEST messages  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Extracts the content of 55 Parameter Request List Option  
        to extractedParamReq  
6 TESTERDHCP Server SERVER 1 Sen ds DHCPOFFER Message to DUT through  
       DIface 0 
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         Message O ption containing extractedParamReq  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing extractedParamReq  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 35 Page 21 Client parameters in DHCP  MUST  

  
    
  428 DHCPv4CLIENTPARAMETERS 05 Set maximum DHCP message size option  
Synopsis  The client SHOULD include the maximum DHCP message size option to let the server 
know how large the  server may make its DHCP messages  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP option 57 Maximum DHCP Size Option  
        with value 600 for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
         Message Option containing  
           Type field set to 57 Maximum DHCP Size Option  
Pass Criteria  5 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
 Message Option containing  
 Type field set to 57 Maximum DHCP Size Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 35 Page 21 Client parameters in DHCP  SHOULD  

  
    
  429 DHCPv4CLIENTPARAMETERS 06 Send DHCPDISCOVER message  include the IP 
address lease time option  
Synopsis  In addition the client may suggest values for the network address and lease time in the 
DHCPDISCOVER message The client may  include the IP a ddress lease time option to 
suggest the lease time it would like  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP option 51 IP Address Lease Time  
        Option  
        with value 60 for interface DIface 0 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTERDHCP Server SERVER 1 Listens  upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
         Message Option containing  
           Type field set to 51 IP Address Lease Time Option  
           Length field set to 4  
           Value set to 60  
Pass Criteria  5 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
 Message Option containing  
 Type field set to 51 IP Address Lease Time Option  
 Length  field set to 4  
 Value set to 60  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 35 Page 21 Client parameters in DHCP  MAY  

  
    
  430 4865  DHCP usage  
DHCPv4CLIENTUSAGE 01 Use of DHCP in clients with multiple interfaces  
Synopsis  A client with multiple network interfaces must use DHCP through each interface 
independently to obtain configuration information parameters for those separate 
interfaces  
Prerequisites  Check section prerequisites  
Test setup  Topology 2  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 DUT CONFIGURE Externally configure DHCP Client on DIface 1 
3 TESTER Externally cause DUT to bring up DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPDISCOVER Message  
6 TESTER Extracts the content of chaddr field to extractedChaddr  
7 TESTER Externally cause DUT to bring up DIface 1 
8 TESTERD HCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 1 
9 DUT Sends DHCPDISCOVER Message  
10 TESTER Verify that received DHCPDISCOVER Message contains  
         chaddr field is not set to extractedChaddr  
Pass Criteria  5 DUT Sen ds DHCPDISCOVER Message  
9 DUT Sends DHCPDISCOVER Message  
10 TESTER Verify that received DHCPDISCOVER Message contains  
 chaddr field is not set to extractedChaddr  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 36 Page 22 MUST  

  
    
  431 DHCPv4CLIENTUSAGE 02 Use DHCP at system boot time  
Synopsis  A client SHOULD use DHCP to reacquire or verify its IP address and network parameters 
whenever the local network parameters may have changed eg at system boot time  
Prerequisites  Check section prerequisites  
Test setup  Topology 3  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DH CP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to release DIface 0 
6 TESTER Externally cause DUT to bring up DIface 0 
7 TESTER DHCP Server SERVER 2 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREQUESTING  
8 DUT Transit finite state to DHCPCLIENTSTATEREQUESTING  
9 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option cont aining  
           Type field is not set to 50 Requested IP Address Option  
           Length field is not set to 4  
           Value is not set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
8 DUT Trans it finite state to DHCPCLIENTSTATEREQUESTING  
9 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field is not set to 50 Requested IP Address Option  
 Length field is not set to 4  
 Value is not set to SERV ER1IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 37 Page 22 When clients should use DHCP  SHOULD  

  
    
  432 DHCPv4CLIENTUSAGE 03 Revert from unicast to multicast on timeout  
Synopsis  If the client receives no response to DHCP messages sent to the IP address of a known 
DHCP server the DHCP client reverts to using the IP broadcast address Note In this test 
we check this feature for DHCPINFORM Message  
Prerequisites  Check section pre requisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address SERVER1 IPPOOL 00 with mask  
        SERVER1 IPPOOL NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to send DHCPINFORM Message through  
        DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DH CPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
         Destination IP Address field is set to SERVER1 IPADDRESS  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPINF ORM Message  
9 TESTER Verify that received DHCPINFORM Message contains  
         Destination IP Address field is set to 0xffffffff  
Pass Criteria  5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
8 DUT Sends DHCPINFORM Message  
9 TESTER Verify that received DHCPINFORM Message contains  
 Destination IP Address field is set to 0xffffffff  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 444 P age 40 Use of broadcast and unicast  MUST  

  
    
  433 4866  Constructing and sending DHCP messages  
DHCPv4CLIENT CONSTRUCTINGMESSAGES 01  The last option must always be the 
end option  
Synopsis  The last option must always be the end option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Message Option containing  
           255 End Option at posit ion Last  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Message Option containing  
 255 End Option at position Last  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 22 23 Constructing and sending DHCP 
messages  MUST  
 

  
    
  434 DHCPv4CLIENT CONSTRUCTINGMESSAGES 02  Use the IP address provided in the 
server identifier option for any unicast requests  
Synopsis  DHCP clients MUST use the IP address provided in the server identifi er option for any 
unicast requests to the DHCP server  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on  DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Destination IP Address field is set to SERVER1 IPADDRESS  
Pass Criteria  4 DUT Transit fin ite state to DHCPCLIENTSTATERENEWING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 23 Constructing and sending DHCP messages  
MUST  
 

  
    
  435 DHCPv4CLIENT CONSTRUCTINGMESSAGES 03  Source IP address field of 
DHCPDISCOVER Message is 0  
Synopsis  DHCP messages broadcast by a client prior to that client obtaining its IP address must have 
the source address field in the IP header set to 0 Note This test verifies source IP address 
field of DHCPDISCOVER Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test  Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         Source IP Address field is set to 0  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
 Source IP Address field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 23 Constructing and sending DHCP messages  
MUST  
 

  
    
  436 DHCPv4CLIENT CONSTRUCTINGMESSAGES 04 Source IP address field of 
DHCPREQUEST Message is 0  
Synopsis  DHCP messages broadcast by a client prior to that client obtaining its IP address must have 
the source address field in the IP header set to 0 Note This test verifies source IP address 
field of DHCPREQUEST Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Serve r SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREQUESTING  
4 DUT Transit finite state to DHCPCLIENTSTATEREQUESTING  
5 TESTER Verify that received DHCPREQUEST Message contains  
         Source IP Address field is set to 0  
Pass  Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEREQUESTING  
5 TESTER Verify that received DHCPREQUEST Message contains  
 Source IP Address field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 23 Constructing and sending DHCP messages  
MUST  
 

  
    
  437 DHCPv4CLIENT CONSTRUCTINGMESSAGES 05  Parse sname field when Option 
Overload is present  
Synopsis  If the options in a DHCP message extend into the sname and file fields the option 
overload option MUST appear in the  options field with value 1 2 or 3 Note Here we 
verify that DUT correctly parses sname field when Option Overload is present and set to 
sname contains options  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Opt ion 
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime  on 
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  

  
    
  438            Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DU T to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Mess age 
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 23 Constructing and sending DHCP messages  
MUST  
 

  
    
  439 DHCPv4CLIENT CONSTRUCTINGMESSAGES 06  Parse file field when Option 
Overload  is present  
Synopsis  If the options in a DHCP message extend into the sname and file fields the option 
overload option MUST appear in the options field with value 1 2 or 3 Note Here we 
verify that DUT correctly parses file fi eld when Option Overload is present and set to file 
contains options  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Mess age to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message  Option in file field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Mess age to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value  set to the file field is used to hold options  
         DHCP Message Option in file field containing  

  
    
  440            Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Messag e Option in file field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto Para mListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 23 Constructing and sending DHCP messages  
MUST  
 
DHCPv4CLIENT CONSTRUCTINGMESSAGES 07  Do not parse file field as Options 
when Option Overload is not present  
Synopsis  If the options in a DHCP message extend into the sname and file fields the op tion 
overload option MUST appear in the options field with value 1 2 or 3 Note Here we 
verify that DUT correctly does not parse file field as Options when Option Overload is not 
present  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   

  
    
  441          Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  
           Type field  set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens upt o ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  
           Type fiel d set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DUT to send ICMP  Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
12 TESTER Externally reset all client configurations  
        for all configured interfaces on the DUT  
13 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
14 TESTER Externally cause DUT to bring up DIface 0 
15 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload OptionINVALID  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  

  
    
  442            Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End Option  
18 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
19 DUT Sends DHCPREQUEST Message  
20 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload OptionINVALID  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  
           Type field set to 3 Rou ter Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End Option  
21 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
22 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
23 DUT Does not send ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DH CPREQUEST Message  
11 DUT Sends ICMP Echo Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends DHCPREQUEST Message  
23 DUT Does not send ICMP Echo Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  443 DHCPv4CLIENT CONSTRUCTINGMESSAGES 08  Check sname field when 1st octet 
is not the start of the option  
Synopsis  The options in the sname and file fields if in use as indicated by the options overload 
option MUST begin with the first octet of the field Note In this test we verify that the 
DUT correctly does not imbibe the Option present in sname field when 1st octet is not the 
start of the option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Value set to the sna me field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  

  
    
  444            Value set to SERVER1 IPADDRESS  
         DHCP Message Option in s name field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime  on 
       DIface 0 
11 DUT Sends ICMP Echo Message  
12 TESTER Externally reset all client configurations  
        for all configured interfaces on the DUT  
13 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
14 TESTER Externally cause DU T to bring up DIface 0 
15 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in snam e field containing  
           Type field set to 0 Pad OptionINVALID  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
18 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
19 DUT Sends DHCPREQUEST Message  
20 TESTER DHCP Se rver SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Value  set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 0 Pad OptionINVALID  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
21 TESTER Externally cause DUT to send ICMP Echo Req uest  

  
    
  445         through DIface 0 to IP address IP UNUSED ADDRESS  
22 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
23 DUT Does not send ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends DHCPREQUEST Message  
23 DUT Does not send ICMP Echo Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  446 DHCPv4CLIENT CONSTRUCTINGMESSAGES 09  Check sname field in absence of 
end option  
Synopsis  The options in the sname and file fields if in use as indicated  MUST be terminated by 
an end option Note In this test we verify that the DUT correctly does not imbibe the 
Option pres ent in sname field in absence of end option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on  DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT throu gh 
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the snam e field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sn ame field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT th rough  
        DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the  sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  

  
    
  447            Value set to SERVER1 IPADDRESS  
         DHCP Message Option in  sname field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTim e on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
12 TESTER Externally reset all client configurations  
        for all configured interfaces on the DUT  
13 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
14 TESTER Externally cause  DUT to bring up DIface 0 
15 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End OptionINVALID  
18 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
19 DUT Sends DHCPREQUEST Message  
20 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIfac e0 containing   
         Additional PAD Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the sname field is used  to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field conta ining  
           Type field set to 255 End OptionINVALID  
21 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
22 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  

  
    
  448        DIface 0 
23 DUT Does not send ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends DHCPREQUEST Message  
23 DUT D oes not send ICMP Echo Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  449 DHCPv4CLIENT CONSTRUCTINGMESSAGES1 0 Check file field in absence of end 
option  
Synopsis  The options in the sname and file fields if in use as indicated  MUST be terminated by 
an end option Note In this test we verify that the DUT correctly does not imbibe the 
Option present in file field in absence of end option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIf ace0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD  Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Opt ion in file field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End  Option  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PA D Options to make packet length set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Op tion in file field containing  
           Type field set to 3 Router Option  
           Length field set to 4  

  
    
  450            Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 En d Option  
9 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
10 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
12 TE STER Externally reset all client configurations  
        for all configured interfaces on the DUT  
13 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
14 TESTER Externally cause DUT to bring up DIface 0 
15 TESTERDHCP Server SERVER 1 Li stens upto ParamListenTime on  
       DIface 0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Additional PAD Options to make packet length set to 57 6 
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End OptionINVALID  
18 TESTERDHCP Serv er SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
19 DUT Sends DHCPREQUEST Message  
20 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Additional PAD Options to make packet l ength set to 576  
         Message Option containing  
           Type field set to 52 Overload Option  
           Length field set to 1  
           Value set to the file field is used to hold options  
         DHCP Message Option in file field conta ining  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in file field containing  
           Type field set to 255 End OptionINVALID  
21 T ESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
22 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  

  
    
  451        DIface 0 
23 DUT Does not send ICMP Echo Message  
Pass Criter ia 4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends DHCPREQUEST Message  
23 DUT Does not send ICMP Echo Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  452 DHCPv4CLIENT CONSTRUCTINGMESSAGES1 1 The sname field and pad options  
Synopsis  The options in the sname and file fields if in use as indicated  and MUST be followed 
by pad options to fill the remainder of the field Note This tes t is done using the sname 
field only  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Message Option containing  
           Type field set to 52 Overload Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type fiel d set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
6 TESTERDHCP Server SERVER 1 Listens u pto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Message Option containing  
           Type field set to 52 Over load Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
9 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  

  
    
  453 10 TESTERDHCP Serv er SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
11 DUT Sends ICMP Echo Message  
12 TESTER Externally reset all client configurations  
        for all configured interfaces on the DUT  
13 DUT CONFIGURE Externally configure DHCP Client  on DIface 0 
14 TESTER Externally cause DUT to bring up DIface 0 
15 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
16 DUT Sends DHCPDISCOVER Message  
17 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Message Option containing  
           Type field set to 52 Overload Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
         DHCP Messag e Option in sname field containing  
           Type field set to 0 Pad OptionINVALID  
         DHCP Message Option in sname field containing  
           Type field set to 255 End OptionINVALID  
18 TESTERDHCP Server SERVER 1 Listens up to ParamListenTime on  
       DIface 0 
19 DUT Sends DHCPREQUEST Message  
20 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Message Option containing  
           Type field set to 52 Ove rload Option  
           Value set to the sname field is used to hold options  
         DHCP Message Option in sname field containing  
           Type field set to 3 Router Option  
           Length field set to 4  
           Value set to SERVER1 IPADDRESS  
         DHCP Message Option in sname field containing  
           Type field set to 255 End Option  
         DHCP Message Option in sname field containing  
           Type field set to 0 Pad OptionINVALID  
         DHCP Message Option in sname field containing  
           Type field set to 255 End OptionINVALID  
21 TESTER Externally cause DUT to send ICMP Echo Request  
        through DIface 0 to IP address IP UNUSED ADDRESS  
22 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 

  
    
  454 23 DUT Does not send ICMP Echo Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
11 DUT Sends ICMP Echo Message  
16 DUT Sends DHCPDISCOVER Message  
19 DUT Sends D HCPREQUEST Message  
23 DUT Does not send ICMP Echo Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  455 DHCPv4CLIENT CONSTRUCTINGMESSAGES1 2 The retransmission delay should be 
doubled with subsequent retransmissions  
Synopsis  The retransmission delay SHOULD be doubled with subsequent retransmissions up to a 
maximum of 64 seconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT  CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto 64  32  16  8  4   
       2  1  ParamToleranceTime second on DIface 0 
4 DUT Send s  DHCPDISCOVER Messages  
5 TESTER Verify that the time interval between  
        reception of last two DHCPDISCOVER Messages  
         is less than  
        64    ParamToleranceTime second  
Pass Criteria  4 DUT Sends DHCPDISCOVER Messages  
5 TEST ER Verify that the time interval between  
reception of last two DHCPDISCOVER Messages  
is less than  
64  ParamToleranceTime second  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 24 Constructing and sending DHCP messages  
MUST  
 

  
    
  456 DHCPv4CLIENT CONSTRUCTINGMESSAGES1 3 Retransmission strategy using a 
randomized exponential backoff algorithm  
Synopsis  The client MUST adopt a retransmission strategy that incorporates a randomized 
exponential backoff algorithm to determine the delay be tween retransmissions  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Listen for upto 3   
        ParamFirstRetransmissionInterval  ParamToleranceTime seconds  
        on DIface 0 
4 DUT Send multiple DHCPDISCOVER Messages  
5 TESTER Verify that the time interval between  
        reception of 3rd last DHCPDISCOVER Message and second last  
         DHCPDISCOVER Message  
         is within the range of  
        ParamFirstRetransmissionInterval    1 to  
        ParamFirstRetransmissionInterval     1seconds  
6 TESTER Verify that the time interval between  
        reception of last two DHCPDISCOVER Messages  
         is within the range of  
        2ParamFirstRetransmissionInterval    1 to  
        2ParamFirstRetransmissionInterval    1 seconds  
Pass Criteria  4 DUT Send multiple DHCPDISCOVER Messages  
5 TESTER Verify that the time interval between  
reception of 3rd last DHCPDISCOVER Message and second last  
DHCPDISCOVER Message  
is within the range of  
ParamFirstRetransmissionInterval  1 to  
ParamFirstRetransmissionInterval  1seconds  
6 TESTER Verify that the time interval between  
reception of last two DHCPDISCOVER Messages  
is within the range of  
2ParamFirstRetransmissionInterval  1 to  
2ParamFirstRetransmissionInterva l  1seconds  

  
    
  457 Test Iterations  
 
Notes  Derived from RFC 2131 Section 41 Page 24 Constructing and sending DHCP messages  
SHOULD  
 
DHCPv4CLIENT CONSTRUCTINGMESSAGES1 4 A client may choose a different  
random initial xid after reboot  
Synopsis  For example a client may choose a different random initial xid each time the client 
is rebooted  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTS TATEBOUND  
5 TESTER Extracts the content of xid field to extractedXID  
6 DUT CONFIGURE Externally cause DUT to release DIface 0 
7 TESTER Externally cause DUT to bring up DIface 0 
8 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime  on 
       DIface 0 
9 DUT Sends DHCPDISCOVER Message  
10 TESTER Verify that received DHCPDISCOVER Message contains  
         xid field is not set to extractedXID  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
9 DUT Sends D HCPDISCOVER Message  
10 TESTER Verify that received DHCPDISCOVER Message contains  
 xid field is not set to extractedXID  
Notes  Derived from RFC 2131 Section 41 Page 24 Constructing and sending DHCP 
messages  
MAY  

  
    
  458 4867  DHCPREQUEST message  
DHCPv4CLIENTREQUEST 01 DHCPREQUEST message  the ciaddr option  
Synopsis  Client inserts   ciaddr MUST be zero  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREQUESTING  
4 DUT Transit finite  state to DHCPCLIENTSTATEREQUESTING  
5 TESTER Verify that received DHCPREQUEST Message contains  
         ciaddr field is set to 0  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEREQUESTING  
5 TESTER Verify that received DHCPREQUEST Message contains  
 ciaddr field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 31 DHCPREQUEST message  
MUST  

  
    
  459 DHCPv4CLIENTREQUEST 02 DHCPREQUEST message  requested IP address  
Synopsis  requested IP address MUST be filled in with the yiaddr value from the chosen 
DHCPOFFER  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         yiaddr field set to SERVER1 IPPOOL 01 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER  Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 50 Requested IP Address Option  
           Length field set to 4  
           Value set to SERVER1 IPPOOL 01 
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 50 Requested IP Address Option  
 Length field set to 4  
 Value set to SERVER1 IPPOOL 01 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 31 DHCPREQUEST message  
MUST  

  
    
  460 DHCPv4CLIENTREQUEST 03 DHCPREQUEST generated during INIT REBOOT state 
server identifier option  
Synopsis  o DHCPREQUEST generated during INIT REBOOT state server identifier MUST NOT 
be filled in  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to reboot DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Mes sage Option containing  
           Type field is not set to 54 Server Identifier Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field is not set to 54 Server Identifier Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 31 DHCPREQUEST message  
MUST  

  
    
  461 DHCPv4CLIENTREQUEST 04 DHCPREQUEST generated during INIT REBOOT state 
requested IP address option  
Synopsis  o DHCPREQUEST generated during INIT REBOOT state requested IP address option 
MUST be filled in with clients notion of its previously assigned address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to  transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 DUT CONFIGURE Externally cause DUT to reboot DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field set to 50 Requested IP Address Option  
           Length field set to 4  
           Value set to S ERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field set to 50 Requested IP Address Option  
 Length field set to 4  
 Value set to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 31 DHCPREQUEST message  
MUST  

  
    
  462 DHCPv4CLIENTREQUEST 05 DHCPREQUEST generated during INIT REBOOT state 
ciaddr option  
Synopsis  o DHCPREQUEST generated during INIT REBOOT state ciaddr MUST be zero  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTS TATEBOUND  
5 DUT CONFIGURE Externally cause DUT to reboot DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         ciaddr field is set to 0  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
 ciaddr field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 31 DHCPREQUEST message  
MUST  

  
    
  463 DHCPv4CLIENTREQUEST 06 DHCPREQUEST generated during RENEWING state 
server identifier option  
Synopsis  o DHCPREQUEST generated during RENEWING state server identifier MUST NOT  be 
filled in  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field is not set to 54 Server Identifier Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field is not set to 54 Server Identifier Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST message  
MUST  
 

  
    
  464 DHCPv4CLIENTREQUEST 07 DHCPREQUEST generated during RENEWING state 
requested IP address option  
Synopsis  o DHCPREQUEST generated during RENEWING state requested IP address option 
MUST NO T be filled in  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT  to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field is not set to 50 Requested IP Address Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field is not set to 50 Requested IP Address Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST message  
MUST  

  
    
  465 DHCPv4CLIENTREQUEST 08 DHCPREQUEST generated during RENEWING state 
ciaddr option  
Synopsis  o DHCPREQUEST generated during RENEWING state ciaddr MUST be filled in with 
clients IP addr ess  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTS TATERENEWING  
6 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         ciaddr field is set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPRE QUEST Message contains  
 ciaddr field is set to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST message  
MUST  

  
    
  466 DHCPv4CLIENTREQUEST 09 DHCPREQUEST generated during REBINDING state 
server identifier option  
Synopsis  o DHCPREQUEST generated during REBINDING state server identifier MUST NOT be 
filled in  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREBINDING  
4 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field is not set to 54 Server Identifier Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option co ntaining  
 Type field is not set to 54 Server Identifier Option  
Test Iterations  
 
Notes   
MUST  

  
    
  467 DHCPv4CLIENTREQUEST1 0 DHCPREQUEST generated during REBINDING state 
requested IP address  option  
Synopsis  o DHCPREQUEST generated during REBINDING state requested IP address option 
MUST NOT be filled in  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREBINDING  
4 DUT Transit finite state to DHCPCLIE NTSTATEREBINDING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Message Option containing  
           Type field is not set to 50 Requested IP Address Option  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Message Option containing  
 Type field is not set to 50 Requested IP Address Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST message  
MUST  

  
    
  468 DHCPv4CLIENTREQUEST1 1 DHCPREQUEST generated during REBINDING state 
ciaddr option  
Synopsis  o DHCPREQUEST generated during REBINDING state ciaddr MUST be filled in with 
clients IP address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTS TATEBOUND  
5 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREBINDING  
6 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         ciaddr field is set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
 ciaddr field is set to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST  message  
MUST  

  
    
  469 DHCPv4CLIENTREQUEST1 2 DHCPREQUEST generated during REBINDING state 
use IP broadcast address  
Synopsis  o DHCPREQUEST generated during REBINDING state This message MUST be broadcast 
to the 0xffffffff IP broadcast address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIf ace0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERE BINDING  
6 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         Destination IP Address field is set to 0xffffffff  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQ UEST Message contains  
 Destination IP Address field is set to 0xffffffff  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 432 Page 32 DHCPREQUEST message  
MUST  

  
    
  470 4868  Initialization and allocation of network address  
DHCPv4CLIENTINITIALIZATIONALLOCATION 01 Random time between to 
desynchronize the use of DHCP at startup  
Synopsis  The client SHOULD wait a random time between one and ten seconds to desynchronize 
the use of DHCP at startup  
Prerequisites  Check section  prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Serv er SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Mes sage  
7 TESTERDHCP Server SERVER 1 Sends DHCPNAK Message to DUT through  
       DIface 0 
8 TESTERDHCP Server SERVER 1 Listens upto 10   
       ParamToleranceTime second on DIface 0 
9 DUT Sends DHCPDISCOVER Message  
10 TESTER Verify that the time interval between  
        sending of last DHCPNAK Message and reception of last  
         DHCPDISCOVER Message  
         is greater than or equal to  
        1    ParamToleranceTime second  
11 TESTER Verify that the time interval between  
        sending of last DHCPNAK Message and reception of last  
         DHCPDISCOVER Message  
         is less than or equal to  
        10    ParamToleranceTime second  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 DUT Sends DHC PREQUEST Message  
9 DUT Sends DHCPDISCOVER Message  
10 TESTER Verify that the time interval between  
sending of last DHCPNAK Message and reception of last  

  
    
  471 DHCPDISCOVER Message  
is greater than or equal to  
1  ParamToleranceTime second  
11 TESTER Veri fy that the time interval between  
sending of last DHCPNAK Message and reception of last  
DHCPDISCOVER Message  
is less than or equal to  
10  ParamToleranceTime second  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 36 SHOULD  

  
    
  472 DHCPv4CL IENTINITIALIZATIONALLOCATION 02 INIT state and DHCPDISCOVER 
messages  
Synopsis  The client begins in INIT state and forms a DHCPDISCOVER message  The client sets 
ciaddr to 0x00000000  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received DHCPDISCOVER Message contains  
         ciaddr field is set to 0  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
5 TESTER Verify that received  DHCPDISCOVER Message contains  
 ciaddr field is set to 0  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 36 MUST  

  
    
  473 DHCPv4CL IENTINITIALIZATIONALLOCATION 03 INIT state and forms a 
DHCPDISCOVER message  the chaddr field  
Synopsis  The client begins in INIT state and forms a DHCPDISCOVER message  The client MUST 
include its hardware address in the chaddr field  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISC OVER Message  
5 TESTER Extracts the content of Source Harware Address field to  
        extractedSrcHwAddr  
6 TESTER Verify that received DHCPDISCOVER Message contains  
         chaddr field is set to extractedSrcHwAddr  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
6 TESTER Verify that received DHCPDISCOVER Message contains  
 chaddr field is set to extractedSrcHwAddr  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 36 MUST  

  
    
  474 DHCPv4CL IENTINITIALIZATIONALLOCATION 04 Verify xid of an arriving 
DHCPOFFER message  
Synopsis  If the xid of an arriving DHCPOFFER message does not match the xid of the most recent 
DHCPDISCOVER message the DHCPOFFER message must be silently discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server  SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Extracts the content of xid field to extractedXID  
6 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         xid field set to extractedXID1  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Does not send DHCPREQUEST Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
8 DUT Does not s end DHCPREQUEST Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 36 MUST  

  
    
  475 DHCPv4CLIENTINITIALIZATIONAL LOCATION 05 During Initialization discard 
arriving DHCPACK messages  
Synopsis  Any arriving DHCPACK messages must be silently discarded  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPACK Message to DUT throug h 
       DIface 0 
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Does not send DHCPREQUEST Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Does not send DHCPREQUEST Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 36 MUST  

  
    
  476 DHCPv4CL IENTINITIALIZATIONALLOCATION 06 The DHCPREQUEST message 
contains the same xid as the DHCPOFFER message  
Synopsis  The DHCPREQUEST message contains the same xid as the DHCPOFFER message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure  DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTER Extracts the content of xid field to e xtractedXID  
6 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         xid field set to extractedXID  
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Sen ds DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUEST Message contains  
         xid field is set to extractedXID  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
8 DUT Sends DHCPREQUEST Message  
9 TESTER Verify that received DHCPREQUES T Message contains  
 xid field is set to extractedXID  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 38 MUST  

  
    
  477 DHCPv4CL IENTINITIALIZATIONALLOCATION 07 Lease expiration time value  
Synopsis  The client records the lease expiration time as the sum of the time at which the original 
request was sent and the duration of the lease from the DHCPACK message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIfa ce0 
4 DUT Sends DHCPDISCOVER Message  
5 TESTERDHCP Server SERVER 1 Sends DHCPOFFER Message to DUT through  
       DIface 0 containing   
         Message Option containing  
           Type field set to 51 IP Address Lease Time Option  
           Length field set to 4  
           Value set to ParamLeaseTime  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Wait till ParamLeaseTime3 to keep DUT listening for  
        DHCPACK from TESTER  
9 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Message Option containing  
           Type field set to 51 IP Address Lease Time Option  
           Length field s et to 4  
           Value set to ParamLeaseTime  
10 TESTER Wait till ParamLeaseTimeParamLeaseTime4 for DUT to  
        transit past RENEWING and REBINDING state but not past lease expiration  
11 TESTERDHCP Server SERVER 1 Sends ICMP Echo Mes sage to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address field set to SERVER1 IPPOOL 00 
12 TESTERDHCP Server SERVER 1 Listens upto Par amListenTime on  
       DIface 0 
13 DUT Sends ICMP Echo Reply Message  
14 TESTER Wait till ParamLeaseTime4ParamToleranceTime for  
        DUT to transit past lease expiration  

  
    
  478 15 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT t hrough  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address field set to SERVER1 IPPOOL 00 
16 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime  on 
       DIface 0 
17 DUT Does not send ICMP Echo Reply Message  
Pass Criteria  4 DUT Sends DHCPDISCOVER Message  
7 DUT Sends DHCPREQUEST Message  
13 DUT Sends ICMP Echo Reply Message  
17 DUT Does not send ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 38 MUST  

  
    
  479 DHCPv4CL IENTINITIALIZATIONALLOCATION 08 Check the suggested address to 
ensure it is not in use  
Synopsis  The client SHOULD perform a check on the suggested address to ensure that the address i s 
not already in use the client must fill in its own hardware address as the senders 
hardware address and 0 as the senders IP address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains all of the  
        following  
         ARP Sender MAC Address field is set to  
           DIface 0MAC ADDRESS  
         ARP Sender IP Address field is set to 0  
         ARP Target IP Address field is set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit finite state to  DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains all of the  
following  
 ARP Sender MAC Address field is set to  
DIface 0MAC ADDRESS  
 ARP Sender IP Address field is set to 0  
 ARP Tar get IP Address field is set to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 38 MUST  

  
    
  480 DHCPv4CL IENTINITIALIZATIONALLOCATION 09 If address is in use send a 
DHCPDECLINE message to the server  
Synopsis  If the network address appears to be in use the client MUST send a DHCPDECLINE 
message to the server  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTS TATEBOUND  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Request Message contains  
         ARP Target IP Address field is set to SERVER1 IPPOOL00 
8 TESTERDHCP Server SERVER 1 Sends ARP Response Message to DUT  
       through DIface 0 containing   
         ARP Sender MAC Address field set to MAC UNUSED ADDRESS  
         ARP Sender IP Address field set to SERVER1 IPPOOL 00 
9 TESTE RDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
10 DUT Sends DHCPDECLINE Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Request Message  
7 TESTER Verify that received ARP Re quest Message contains  
 ARP Target IP Address field is set to SERVER1 IPPOOL 00 
10 DUT Sends DHCPDECLINE Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 39 MUST  
 

  
    
  481 DHCPv4CLIENTINITIALIZATIONALLOCATION1 0 Broadcast an ARP reply to 
announce the clients new IP  
Synopsis  The client SHOULD broadcast an ARP reply to announce the clients new IP address and 
clear any outdated ARP cache entries in hosts on the clients subnet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause D UT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends ARP Response Message  
7 TESTER Verify tha t received ARP Response Message contains all of  
        the following  
         ARP Sender MAC Address field is set to  
           DIface 0MAC ADDRESS  
         ARP Sender IP Address field is set to SERVER1 IPPOOL 00 
Pass Criteria  4 DUT Transit f inite state to DHCPCLIENTSTATEBOUND  
6 DUT Sends ARP Response Message  
7 TESTER Verify that received ARP Response Message contains all of  
the following  
 ARP Sender MAC Address field is set to  
DIface 0MAC ADDRESS  
 ARP Sender IP Address field is se t to SERVER1 IPPOOL 00 
Test Iterations  
 
Notes  Derived from RFC 2131 Section 441 Page 39 SHOULD  

  
    
  482 4869  Initialization with an externally assigned network address  
DHCPv4CLIENTINITIALIZATIONEXTERNAL 01 The client SHOULD NOT request 
lease time parameters  
Synopsis  The client SHOULD NOT request lease time parameters  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address SERVER1 IPPOOL 00 with mask  
        SERVER1 IPPOOL NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to send DHCPINFORM Message through  
        DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
         Message Option  containing  
           Type field is not set to 55 Parameter Request List  
             Option  
           Length field is not set to 3  
           Value is not set to 51 IP Address Lease Time Option  
Pass Criteria  5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
 Message Option containing  
 Type field is not set to 55 Parameter Request List  
Option  
 Length field is not set to 3  
 Value is not set to 51 IP Address Lease Time Option  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 443 Page 39 SHOULD  

  
    
  483 DHCPv4 CLIENTINITIALIZATIONEXTERNAL 02 Send DHCPINFORM to the DHCP 
server if it knows the servers address  
Synopsis  The client then unicasts the DHCPINFORM to the DHCP server if it knows the servers 
address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address SERVER1 IPPOOL 00 with mask  
        SERVER1 IPPOOL NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to send DHCPINFORM Message thro ugh 
        DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
         Destination IP Address field is set to SE RVER1 IPADDRESS  
Pass Criteria  5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 443 Page 39 SHOULD  

  
    
  484 DHCPv4 CLIENTINITIALIZATIONEXTERNAL 03 Broadcasts to the limited all 1s 
address  
Synopsis  otherwise it broadcasts the message to the limited all 1s broadcast address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally assign IP Address SERVER1 IPPOOL 00 with mask  
        SERVER1 IPPOOL NETMASK on DUT  
        for interface DIface 0 
3 TESTER Externally cause DUT to send DHCPINFORM Message through  
        DIface 0 
4 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
         Destination IP Address field is set to  
           IPBROADCAST ADDRESS  
Pass Criteria  5 DUT Sends DHCPINFORM Message  
6 TESTER Verify that received DHCPINFORM Message contains  
 Destination IP Addr ess field is set to  
IPBROADCAST ADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 443 Page 39 SHOULD  

  
    
  485 48610  Reacquisition and expiration  
DHCPv4CLIENT REACQUISITION 01  RENEWING state  send unicast DHCPREQUEST 
message  
Synopsis  At time T1 the client moves to RENEWING state and sends via unicast a DHCPREQUEST 
message to the server to extend its lease  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATERENEWING  
4 DUT Transit fin ite state to DHCPCLIENTSTATERENEWING  
5 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
         Destination IP Address f ield is set to SERVER1 IPADDRESS  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 DUT Sends DHCPREQUEST Message  
7 TESTER Verify that received DHCPREQUEST Message contains  
 Destination IP Address field is set to SERVER1 IPADDRESS  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 40 Reacquisition and expiration  
MUST  
 

  
    
  486 DHCPv4CLIENT REACQUISITION 02  On DHCPACK timeout move to REBINDING 
state and send DHCPREQUEST broadcast  
Synopsis  If no DHCPACK arrives before time T2 the client moves to REBINDING state and sends 
via broadcast a DHCPREQUEST message to extend its lease  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till REMOTE CLIENT1 T2ParamToleranceTime for DUT  
        to go to a state just before T2 expires  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that received DHCPREQUEST Message contains  
         Destination IP Address field is set to 0xffffffff  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Me ssage  
8 TESTER Verify that received DHCPREQUEST Message contains  
 Destination IP Address field is set to 0xffffffff  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
MUST  
 

  
    
  487 DHCPv4CLIENT REACQUISITION 03  Reacquisition and expiration T1 defaults to 
05  durationoflease  
Synopsis  T1 defaults to 05  durationoflease T2 defaults to 0875  durationoflease Times 
T1 and T2 SHOULD be chosen with some random fuzz  around a fixed value to av oid 
synchronization of client reacquisition Note This test verifies the value of T1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till REMOTE CLIENT1 T1ParamToleranceTime for DUT  
        to go to a state just before T1 expires  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Veri fy that the time interval between  
        sending of last DHCPACK Message and reception of last  
         DHCPREQUEST Message  
         is within the range of  
        REMOTE CLIENT1 T1    ParamToleranceTime to  
        REMOTE CLIENT1 T1    ParamT oleranceTime second  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that the time interval between  
sending of last DHCPACK Message and reception of last  
DHCPREQUEST Message  
is with in the range of  
REMOTE CLIENT1 T1  ParamToleranceTime to  
REMOTE CLIENT1 T1  ParamToleranceTime second  
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
SHOULD  
 

  
    
  488 DHCPv4CLIENT REACQUISITION 04  Reacquisition and expiration T2 defaults to 
0875  durationoflease  
Synopsis  T1 defaults to 05  durationoflease T2 defaults to 0875  durationoflease Times 
T1 and T2 SHOULD be chosen with some random fuzz  around a fixed value to avoid 
synchronizati on of client reacquisition Note This test verifies the value of T2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till REMOTE CLIENT1 T2ParamToleranceTime for DUT  
        to go to a state just before T2 expires  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that the time inte rval between  
        sending of last DHCPACK Message and reception of last  
         DHCPREQUEST Message  
         is within the range of  
        REMOTE CLIENT1 T2    ParamToleranceTime to  
        REMOTE CLIENT1 T2    ParamToleranceTime second  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPREQUEST Message  
8 TESTER Verify that the time interval between  
sending of last DHCPACK Message and reception of last  
DHCPREQUEST Message  
is within the range of  
RE MOTE CLIENT1 T2  ParamToleranceTime to  
REMOTE CLIENT1 T2  ParamToleranceTime second  
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
SHOULD  
 

  
    
  489 DHCPv4CLIENT REACQUISITION 05  Wait time for RENEWING state  
Synopsis  In both RENEWING and REBINDING states if the client receives no response to its 
DHCPREQUEST message the client SHOULD wait one half of the remaining time until T2 in 
RENEWING state and one half of the remaining lease time in REBINDING state  down to a 
minimum of 60 seconds before retransmitting the DHCPREQUEST message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally c onfigure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER Initialize server1 to offer IP Address Lease Time  
         of HIGH LEASE TIME seconds to the DUT  
4 TESTER DHCP Server SERVER 1 Cause DUT to transit i ts state  
        to DHCPCLIENTSTATERENEWING  
5 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
6 TESTERDHCP Server SERVER 1 Listens upto REMOTE CLIENT1 T2  
       REMOTE CLIENT1 T1  2  2  ParamToleranceTime second on  
       DIface 0 
7 DUT Sends 2 DHCPREQUEST Messages  
8 TESTER Verify that the time interval between  
        reception of last two DHCPREQUEST Messages  
         is within the range of  
        REMOTE CLIENT1 T2  REMOTE CLIENT1 T1  2    
         ParamToleranceTime to  
        REMOTE CLIENT1 T2  REMOTE CLIENT1 T1  2    
         ParamToleranceTime second  
Pass Criteria  5 DUT Transit finite state to DHCPCLIENTSTATERENEWING  
7 DUT Sends 2 DHCPREQUEST Messages  
8 TESTER Verify that  the time interval between  
reception of last two DHCPREQUEST Messages  
is within the range of  
REMOTE CLIENT1 T2  REMOTE CLIENT1 T1  2   
ParamToleranceTime to  
REMOTE CLIENT1 T2  REMOTE CLIENT1 T1  2   
ParamToleranceTime second  

  
    
  490 Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
SHOULD  
 
DHCPv4CLIENT REACQUISITION 06  Wait time for REBINDING state  
Synopsis  In both RENEWING and REBINDING states if the client receives no response to its 
DHCPREQUEST message the client SHOULD wait one half of the remaining time until T2 in 
RENEWING state and one half of the remaining lease time in REBINDING state down to a 
minimum of 60 seconds before retransmitting the DHCPREQUEST message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up  DIface 0 
3 TESTER Initialize server1 to offer IP Address Lease Time  
         of VERY HIGH LEASE TIME seconds to the DUT  
4 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEREBINDING  
5 DUT Transit finite state  to DHCPCLIENTSTATEREBINDING  
6 TESTERDHCP Server SERVER 1 Listens upto  
       REMOTE CLIENT1 LEASE TIME  REMOTE CLIENT1 T2  2   
       ParamToleranceTime second on DIface 0 
7 DUT Sends 2 DHCPREQUEST Messages  
8 TESTER Verify that  the time interval between  
        reception of last two DHCPREQUEST Messages  
         is within the range of  
        REMOTE CLIENT1 LEASE TIME  REMOTE CLIENT1 T2  2  
           ParamToleranceTime to  
        REMOTE CLIENT1 LEASE TIME  REMOTE CLIENT1 T2  2  
           ParamToleranceTime second  
Pass Criteria  5 DUT Transit finite state to DHCPCLIENTSTATEREBINDING  
7 DUT Sends 2 DHCPREQUEST Messages  
8 TESTER Verify that the time interval between  
reception of last two DHCPR EQUEST Messages  

  
    
  491 is within the range of  
REMOTE CLIENT1 LEASE TIME  REMOTE CLIENT1 T2  2  
 ParamToleranceTime to  
REMOTE CLIENT1 LEASE TIME  REMOTE CLIENT1 T2  2  
 ParamToleranceTime second  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
SHOULD  
 

  
    
  492 DHCPv4CLIENT REACQUISITION 07  Stop network processing after lease time 
expires  
Synopsis  If the lease expires before the client receives a DHCPACK the client moves to INIT state 
MUST immediately stop any other network processing and requests network initialization 
parameters as if the client were uninitialized Note In this test we verify t hat the DUT stops 
network processing after lease time expires  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till Par amLeaseTimeParamToleranceTime for the  
        lease on the DUT to expire INVALID  
6 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address field set to SERVER1 IPPOOL 00 
7 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
8 DUT Does not send ICMP Echo Reply Message  
Pass Criteria  4 DUT Transit fi nite state to DHCPCLIENTSTATEBOUND  
8 DUT Does not send ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from MUST  
 

  
    
  493 DHCPv4CLIENT REACQUISITION 08  Request network initialization parameters 
after lease time expires  
Synopsis  If the lease expires before the client receives a DHCPACK the client moves to INIT state 
MUST immediately stop any other network processing and requests network initialization 
parameters as if the client were uninitialized Note In this test we verify t hat the DUT 
requests network initialization parameters after lease time expires  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till ParamLeaseTimeParamToleranceTime for the  
        lease on the DUT to expire  
6 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
7 DUT Sends DHCPDISCOVER Message  
Pass Criteria  4 DUT Transit finite sta te to DHCPCLIENTSTATEBOUND  
7 DUT Sends DHCPDISCOVER Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
MUST  
 

  
    
  494 DHCPv4CLIENT REACQUISITION 09  Continue network processing on reallocating 
same address  
Synopsis  If the client then receives a DHCPACK allocating that client its previous network address 
the client SHOULD continue network processing  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till ParamLeaseTime for the lease on the DUT to expire  
6 TESTER DHCP Server SERVER 1 sends DHCPACK Message to DUT through  
        DIface 0 
7 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address field set to SERVER1 IPPOOL 00 
8 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
9 DUT Sends ICMP Echo Reply Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
9 DUT Sends ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from RFC 2131 Section 445 Page 41 Reacquisition and expiration  
SHOULD  
 

  
    
  495 DHCPv4CLIENTREACQUISITION1 0 Do not use old address if new address is given  
Synopsis  If the client is given a new network address it MUST NOT continue using the previ ous 
network address  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Externally configure DHCP Client on DIface 0 
2 TESTER Externally cause DUT to bring up DIface 0 
3 TESTER DHCP Server SERVER 1 Cause DUT to transit its state  
        to DHCPCLIENTSTATEBOUND  
4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
5 TESTER Wait till ParamLeaseTime ParamToleranceTime for the  
        lease on the DUT to almost expire  
6 TESTER DHCP Server SERVER 1 Sends DHCPACK Message to DUT through  
        DIface 0 containing   
         Destination IP Address field set to  
           SERVER1 IPPOOL 01INVALID  
         yiaddr fi eld set to SERVER1 IPPOOL 01 
7 TESTERDHCP Server SERVER 1 Sends ICMP Echo Message to DUT through  
       DIface 0 containing   
         Destination Harware Address field set to  
           DIface 0MAC ADDRESS  
         Destination IP Address fi eld set to SERVER1 IPPOOL 00 
8 TESTERDHCP Server SERVER 1 Listens upto ParamListenTime on  
       DIface 0 
9 DUT Does not send ICMP Echo Reply Message  
Pass Criteria  4 DUT Transit finite state to DHCPCLIENTSTATEBOUND  
9 DUT Does not sen d ICMP Echo Reply Message  
Test Iterations  
 
Notes  Derived from MUST  
 
  

  
    
  496 49 Transmisison Control Protocol TCP  
491  General  
 
The scope of this chapter is to specify test cases for the Transmisison Control Protocol TCP from the 
following standards  
   
 RFC 793  Transmission Control Protocol of DARPA Internet Program Protocol Specification  
 RFC 1122  Requirement for Internet Hosts  Communication Layers  
 RFC 2460  Internet Protocol Version 6 IPv6 Specification  
492  Simulated topologies  
 
 
493  Required topology related configuration  
 
 This test suite expects to be running against a TCP stack  
 This test suite runs over Ethernet  
 HOST 1 DIface 0 TIface 0 
ECU 
DUT 
TOPOLOGY 1 Control channel for the 
stub 

  
    
  497 494  Parameters used in the tests  
Parameters  Description  
nss   The number of data segments sent consecutively from tester side to DUT  
ssz  A data segment size that is much smaller than the effective send MSS nsc times ssz 
should be less than effective send MSS of DUT  
tmx  The maximum time within which DUT must  send a segment from its transmit buffer 
irrespective of its size or whether it contains PSH flag bit set  
tfn  Time within which the DUT is expected to send a FIN in an error situation  
wnp  A well known port on the DUT where some standard application like TELNET server is 
assumed to waiting in LISTEN state  
uopt  An unimplemented TCP option on DUT  
msl  Maximum segment lifetime MSL used by DUT  
Full window 
operation  The DUTs TCP has reached a state it is allowed to send data segments of size of testers 
entire receive without getting any acknowledgement from the tester  
Fullsized 
segment     Segment with size equal to the effective send MSS  
OTW                    Outside The Window of the receiver  
PORT1  The port number the Uper Tester UDP co mmunication is carried out through  
SEQ1  A sequence number used to compare the Sequence or Acknowledgement Numbers in 
the received or sent packets  
 
495  Upper Tester Procedures  
Several test cases within this test suite require another type of communication with the IUT that enables 
the tester to trigger some wished behaviors  on the IUT promt ing it to send certain types of messages 
or to check its state and the received messages  This communication is carried out through a separate 
UDP port Therefore some  procedures were conceived to fulfill the needs of such test cases  
openTCPSockettypeOfSocket prompts the IUT to open a TCP socket depending on the type  
  Passive opens a socket with a receiving call  
  Active opens a socket with a sending call  
openMultipleTCPSockettypeOfSocket numberOfSockets prompts the IUT to open 
numberOfSockets TCP scokets of typeOfSocket type  
closeTCPSocket Close the opened TCP sockets  
Confirmation a message sent by the IUT as a response to procedure call from the Tester through the 
Upper Tester channel This message confirms in case of the operation success by sending a Boolean 
back with some additional information depending on the type of operation required from the IUT  

  
    
  498 496  Tests  
4961  Connection Establishm ent and Basic Exercising of the State Machine  
TCPBASICS 01 listen SYN  SYNACK synrecv  
Synopsis  TCP MUST send a SYNACK in response to a SYN in LISTEN state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a SYN to DUT at wnp  
3 DUT Send SYNACK  
Pass Criteria  3 DUT Send SYNACK  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  499 TCPBASICS 02 synrecv ACK  established  
Synopsis  TCP MUST move on to ESTABLISHED state after receiving ACK in SYN RCVD state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check  section general Input Parameters  
Test Procedure  1 TESTER Send a SYN to DUT  
2 DUT Send a SYNACKthis will take DUT to the state SYN RCVD  
3 TESTER Send an ACK  
4 TESTER Verify that the DUT moves on to ESTABLISHED state  
Pass Criteria  2 DUT Send a SYNACKthis will take DUT to the state SYN RCVD  
4 TESTER Verify that the DUT moves on to ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  
TCPBASICS 03 established FIN  ACK closewait  
Synopsis  TCP MUST send an ACK in response to a FIN received in ESTABLISHED state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a FIN ACK  
3 DUT Send ACK  
Pass Criteria  3 DUT Send ACK  
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  500 TCPBASICS 04 closed datano ack no rst  RSTseq 0 closed   
Synopsis  TCP in CLOSED state MUST send a RST segment with zero SEQ number in response to 
an incoming segment not containing RST and ACK flags  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a TCP segment with a flag set  
2 DUT Send a RST control message with zero SEQ number  
 
Pass Criteria  2 DUT Send a RST control message with zero SEQ number  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  FIN  
3 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p65 Event Processing  
MUST  

  
    
  501 TCPBASICS 05 closed dataack no rst  RSTseq   ack closed   
Synopsis  TCP in CLOSED state MUST send a RST in response to an incoming segmen t containing 
ACK and not containing RST and SEQ number is taken from SEGACK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a segment with a flag set  
2 DUT Send a RST segment with SEQ number same as the ACK  
        number of the incoming segment  
 
Pass Criteria  2 DUT Send a RST segment with SEQ number same as the ACK  
number of the incoming segment  
Test Iterations  1 CASE flag set  SYNACK  
2 CASE flag set  ACK  
Notes  Derived from RFC 793 s39 p65 Event Processing  
MUST  

  
    
  502 TCPBASICS 06 closed open  syn  
Synopsis  TCP in CLOSED state MUST send a SYN on an active OPEN call  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an  
        active OPEN call  
2 DUT Send a SYN  
Pass Criteria  2 DUT Send a SYN  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  503 TCPBASICS 07 synsent SYNACK  ACK established  
Synopsis  TCP MUST be capable of progressing to ESTABLISHED state after receiving SYNACK in 
SYNSENT state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN SENT state  
2 TESTER Send a SYNACK  
3 DUT Send ACK  
4 TESTER Verify that the DUT moves on to ESTABLISHED sta te 
Pass Criteria  3 DUT Send ACK  
4 TESTER Verify that the DUT moves on to ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  504 TCP BASICS 08 established  synrcvd  closewait  close  FIN   
Synopsis  TCP MUST send a FIN on a CLOSE call in ESTABLISHED SYN RCVD or CLOSE WAIT 
state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Cause the application on the DUT side to issue a CLOSE call  
3 DUT Send a FIN  
 
Pass Criteria  3 DUT Send a FIN  
Test Iterations  1 CASE wst  ESTABLISHED  
2 CASE wst  SYN RCVD  
3 CASE wst  CLOSE WAIT  
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  505 TCPBASICS 09 lastack ACK of FIN  closed  
Synopsis  TCP MUST move on to CLOSED state after receiving an ACK of the sent FIN in LAST 
ACK state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LAST ACK state  
2 DUT Send FIN when moving into LAST ACK state  
3 TESTER Send ACK for the FIN just received from the DUT  
4 TE STER Send a segment without the RST flag set  
5 DUT Send a segment with the RST flag set this will verify  
        the the DUT has moved on to the CLOSED state  
Pass Criteria  2 DUT Send FIN when moving into LAST ACK state  
5 DUT Send a segment with t he RST flag set this will verify  
the the DUT has moved on to the CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  506 TCPBASICS10  finwait 1  finwait 2 FIN  ACK  
Synopsis  TCP MUST send an ACK after receiving a FIN in FINWAIT 1 or FINWAIT 2 state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a FIN  
3 DUT Send ACK  
 
Pass Criteria  3 DUT Send ACK  
Test Iterations  1 CASE wst  FINWAIT 1 
2 CASE wst  FINWAIT 2 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  507 TCP BASICS 11  finwait 2  timewait delay2MSL  closed  
Synopsis  TCP MUST move on to CLOSED state from TIME WAIT state after a timeout of 2MSL 
where TIME WAIT is reached through FINWAIT 2 state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to FINWAIT 2 state  
2 TESTER Send a FIN  
3 DUT Send ACK  
4 TESTER Send a FIN after 2MSL  20  
5 DUT Send a RST segmentthis will indicate DUT is in CLOSED  
        state  
Pass Criteria  3 DUT Send ACK  
5 DUT Send a RST segmentthis will indicate DUT is in CLOSED  
state  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  508 TCPBASICS12  closing  timewait delay2MSL  closed  
Synopsis  TCP MUST move on to CLOSED state from TIME WAIT state after a timeout of 2MSL 
where TIME WAIT is reached through CLOSING state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to CLOSING state  
2 TESTER Send ACK for the FIN just received from the DUT  
3 TESTER Send a FIN after 2MSL  20  
4 DUT Send a RST segmentthis will indicate DUT is in CLOSED  
        state  
Pass Criteria  4 DUT Send a RST segmentthis will indicate DUT is in CLOSED  
state  
Test Iterations  
 
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  509 TCPBASICS13  finwait 2  timewait delay2MSL  no change yet  
Synopsis  TCP MUST NOT move on to CLOSED state from TIME WAIT state 
before 2MSL time expires where TIME WAIT state is reached 
through FINWAIT 2 state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to FINWAIT 2 state  
2 TESTER Send a FIN  
3 DUT Send ACK DUT moves to TIME WAIT state  
4 TESTER Send a FIN within 2MSL time  
5 DUT Send ACK  
Pass Criteria  3 DUT Send ACK DUT moves to TIME WAIT state  
5 DUT Send ACK  
Test Iterations  
 
Notes  Derived from NEGATIVE RFC 793 s32 p23 Terminology  
MUST  
 

  
    
  510 TCPBASICS14 closing  timewait delay2MSL  no change yet  
Synopsis  TCP MUST NOT move on to CLOSED state from TIME WAIT state before 2MSL time 
expires where TIME WAIT state is reached through CLOSING state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to CLOSING state  
2 TESTER Send ACK for the FIN just received from the DUT  
        DUT moves to TIME WAIT state  
3 TESTER Send a FIN within 2MSL time  
4 DUT Send ACK  
Pass Criteria  4 DUT Send ACK  
Test Iterations  
 
Notes  Derived  from NEGATIVE RFC 793 s32 p23 Terminology  
MUST  

  
    
  511 TCPBASICS15  finwait 1  finwait 2 DATA  ACK MAY  
Synopsis  TCP MAY send an ACK after receiving a data segment in FINWAIT 1 or FINWAIT 2 
state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a data segment  
3 DUT Send ACK  
 
Pass Criteria  3 DUT Send ACK  
Test Iterations  1 CASE  wst  FINWAIT 1 
2 CASE wst  FINWAIT 2 
Notes  Derived from RFC 793 s32 p23 Terminology  
MAY  

  
    
  512 TCPBASICS16  syn sent  close wait  closing  last ack  time wait DATA  ignore  
Synopsis  TCP MUST ignore a data segment in SYN SENT CLOSE WAIT CLOS ING LAST ACK or 
TIME WAIT state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a data segment  
3 DUT Do not send any response  
 
Pass Criteria  3 DUT Do not send any response  
Test Iterations  1 CASE wst  SYN SENT  
2 CASE wst  CLOSE WAIT  
3 CASE wst  CLOSING  
4 CASE wst  LAST ACK 
5 CASE wst  TIME WAIT  
Notes  Derived from RFC 793 s32 p23 Terminology  
MUST  

  
    
  513 TCPBASICS17  Simultaneous Open Call  
Synopsis  TCP MUST support simultaneous OPEN attempts  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause application on the DUT side to issue an active OPEN call  
2 DUT Send a SYN  
3 TESTER Send a SYN simultaneously  
4 DUT Send SYNACK in reply  
5 TESTER Send SYNACK in reply to the SYN received from the DUT  
6 DUT Send ACK  
7 TESTER Verify that the DUT moves on to ESTABLISHED state  
Pass Criteria  2 DUT Send a SYN  
4 DUT Send SYNACK in reply  
6 DUT Send ACK  
7 TESTER Verify that the DUT moves on to ESTABLISHED state  
Test Iterations  
 
Notes  Derived from  RFC 1122 s42210 p87 Simultaneous Open Attempts  
MUST  

  
    
  514 4962  Processing and Generating TCP Checksums  
TCPCHECKSUM 01 Receiver Check checksum ok  
Synopsis  Receiver TCP MUST check the checksum in any incoming segment and MUST 
acknowledge in case of no error  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a data segment with correct  checksum  
3 DUT Send ACK  
Pass Criteria  3 DUT Send ACK  
Test Iterations  
 
Notes  Derived from RFC 1122 s4227 p86 TCP Checksum RFC 793 Section 31  
MUST  

  
    
  515 TCPCHECKSUM02 Receiver Check checksum not ok  
Synopsis  Receiver TCP MUST check the checksum in any incoming segment and MUST NOT 
acknowledge in case of an error  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a data segment with incorrect checksum  
3 DUT Do not send ACK  
Pass Criteria  3 DUT Do not send ACK  
Test Iterations  
 
Notes  Derived from RFC 1122 s4227 p86 TCP Checksum RFC 793 Section 31  
MUST  

  
    
  516 TCPCHECKSUM 03 Sender compute checksum  
Synopsis  Sender TCP MUST generate  correct  checksum  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test  Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND  
        request for a data segment  
3 DUT Send the data segment  
4 TESTER Verify that correct checksum is present in the inco ming  
        segment  
Pass Criteria  3 DUT Send the data segment  
4 TESTER Verify that correct checksum is present in the incoming  
segment  
Test Iterations  
 
Notes  Derived from RFC 1122 s4227 p86 TCP Checksum RFC 793 Section 31 p16 Header 
MUST  

  
    
  517 TCPCHECKSUM04  Use clock driven ISN selection  
Synopsis  An ISN generator MUST be employed for selecting a 32 bit ISN that increments roughly 
every 4 microseconds  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT side application to issue an active OPEN call  
2 DUT Send SYN  
3 TESTER Send RSTACK to take DUT to CLOSED state  
4 TESTER Cause the DUT side application to issue another ac tive OPEN  
        call 
5 DUT Send SYN  
6 TESTER Verify that sequence number of the recent SYN is more than  
        the sequence number of the previous SYN with the appropriate  
        checking of wrap around of counter at least by the  
        differe nce between the times of reception of two SYNsx250000  
Pass Criteria  2 DUT Send SYN  
5 DUT Send SYN  
6 TESTER Verify that sequence number of the recent SYN is more than  
the sequence number of the previous SYN with the appropriate  
checking of wrap aro und of counter at least by the  
difference between the times of reception of two SYNsx250000  
Test Iterations  
 
Notes  Derived from RFC 1122 s4229 p87 ISN Selection RFC 793 s33 p27 Sequence 
Numbers  
MUST  
 

  
    
  518 4963  Processing Unacceptable Acknowledgments and Out of Window 
Sequence Numbers  
TCPUNACCEPTABLE 01 syn recv RST  listen passive open  
Synopsis  TCP MUST return to LISTEN state on receiving an acceptable RST in SYN RCVD state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move to SYN RCVD state at a wnpi nitiated by passive  
        OPEN call  
2 TESTER Send RST segment as if SYNACK just received was unexpected  
3 DUT Do not send response  
4 TESTER Verify that the DUT moves on to LISTEN state  
Pass Criteria  3 DUT Do not send response  
4 TESTER Verify that the DUT moves on to LISTEN state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p33 Establishing a connection  
MUST  

  
    
  519 TCPUNACCEPTABLE 02 syn recv RST out ofwdw  syn recv  
Synopsis  TCP MUST NOT change state on receiving an unacceptable RST in SYN RCVD state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN RCVD state at a wnp  
2 TESTER Send a RST segment as if SYNACK just received was  
        unexpected with a SEQ number outside the receive wind ow of  
        the DUT  
3 DUT Ignore unacceptable RST  
4 TESTER Verify that the DUT remains in SYN RCVD state  
Pass Criteria  3 DUT Ignore unacceptable RST  
4 TESTER Verify that the DUT remains in SYN RCVD state  
Test Iterations  
 
Notes  Derived from RFC  793 s34 p33 Establishing a connection  
MUST  

  
    
  520 TCPUNACCEPTABLE 03 syn recv unacceptable ACK  RST syn recv  
Synopsis  TCP MUST send a RST after receiving an unacceptable ACK in SYN RCVD state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN RCVD state at a wnp  
2 TESTER Send a segment with an unacceptable ACK number  
3 DUT Send a RST segment  
Pass Criteria  3 DUT Send a RST segment  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p35 Establishing a Connection  
MUST  

  
    
  521 TCPUNACCEPTABLE 04 established out ofwdw SEQ  unacceptable ACK  empty 
msg w SEQ established  
Synopsis  TCP in ESTABLISHED state MUST return ACK with proper SEQ and ACK numbers after recv 
a seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in 
a synchronized state any unacceptable segment out of window sequence number or 
unaccept able acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Send a data segment satisfying one of the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTE R Verify that the DUT remains in the ESTABLISHED state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in the ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  522 TCPUNACCEPTABLE05 listen unacceptable ACK  RST listen  
Synopsis  TCP in LISTEN state MUST send a RST after receiving a segment that is carrying an 
unacceptable ACK and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a segment with a flag  set and with unacceptable ACK  
        number  
3 DUT Send a RST segment  
4 TESTER Verify that the DUT remains in LISTEN state  
 
Pass Criteria  3 DUT Send a RST segment  
4 TESTER Verify that the DUT remains in LISTEN state  
Test Iterations  1 CASE flag  set  SYNACK  
2 CASE flag set  ACK  
Notes  Derived from RFC 793 s34 p36 Establishing a Connection  
MUST  

  
    
  523 TCPUNACCEPTABLE 06 established out ofwdw SYN  ACK seq established  
Synopsis  TCP in ESTABLISHED state MUST send an ACK indicating the c orrect SEQ number it 
expects after receiving a SYN with a SEQ number that is OTW  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Send a SYN with a sequence number outside the window  
3 DUT Send an ACK indicating next expected SEQ number  
Pass Criteria  3 DUT Send an ACK indicating next expected SEQ number  
Test Iterations  
 
Notes  Derived from RFC  793 s34 p34 Establishing a Connection  
MUST  

  
    
  524 TCPUNACCEPTABLE 07 listen old SYNACK  RST listen  
Synopsis  TCP in LISTEN state MUST send a RST after receiving a spurious SYNACK that 
potentially corresponds to an old SYN  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state on a wnp  
2 TESTER Send a SYNACK  
3 DUT Send a RST  
Pass Criteria  3 DUT Send a  RST 
Test Iterations  
 
Notes  Derived from RFC 793 s34 p35 Establishing a Connection  
MUST  

  
    
  525 TCPUNACCEPTABLE 08 syn sent unacceptable ACK  RSTseq  
Synopsis  If the connection is in any non synchronized state LISTEN SYN SENT SYN RECEIVED and 
the incoming segment acknowledges something not yet sent the segment carries an 
unacceptable ACK or if an incoming segment has a security level or compartment which  
does not exactly match the level and compartment requested for the connection a reset is 
sent Note  This test checks for SYN SENT state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN SENT state  
2 TESTER Send a segment flag set and with unacceptable ACK number  
3 DUT Send a RST control message with SEQ number same as the ACK  
        number of the incoming segment  
 
Pass Criteria  3 DUT Send a RST control message with SEQ number same as the ACK  
number of the incoming segment  
Test Iterations  1 CASE flag set  SYNACK  
2 CASE flag set  ACK  
Notes  Derived from RFC 793 s34 p36 Establishing a Connection  
MUST  

  
    
  526 TCPUNACCEPTABLE 09 finwait 1 out ofwdw SEQ  unacceptable ACK  ACK seq 
ack finwait 1 
Synopsis  TCP in FINWAIT 1 state MUST return an ACK with proper SEQ and ACK numbers after recv 
a seg with OTW SEQ or unacc ACK number and remain in same stat e If the connection is in 
a synchronized state any unacceptable segment out of window sequence number or 
unaccept able acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgmen t indicating 
the next sequence number expected to be received and the connection remains in the 
same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to FINWAIT 1 state  
2 TESTER Send a data segment satisfying one of the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send a n ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in FINWAIT 1 state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ numbe r expected  
4 TESTER Verify that the DUT remains in FINWAIT 1 state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  527 TCPUNACCEPTABLE10  finwait 2 out ofwdw SEQ  unacceptable ACK  ACK seq 
ack finwait 2 
Synopsis  TCP in FINWAIT 2 state MUST return an ACK with proper SEQ and ACK numbers after recv 
a seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in 
a synchronized state any unacceptable segment out of window sequence number or 
unacceptible acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to FINWAIT 2 state  
2 TESTER Send a data segment satisfying one of  the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in FINWAIT 2 state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in FINWAIT 2 state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  528 TCPUNACCEPTABLE11  closing out ofwdw SEQ  unacceptable ACK  ACK seq 
ack closing  
Synopsis  TCP in CLOSING state MUST return an ACK with proper SEQ and ACK numbers after recv a 
seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in a 
synchronized state any unacceptable segment out of window sequence number or 
unacceptible acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to CLOSING state  
2 TESTER Send a data segment satisfying one of the followin g cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Verif y that the DUT remains in CLOSING state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in CLOSING state  
Test Iterations  
 
Notes  Derived from RFC 793  s34 p37 Establishing a Connection  
MUST  

  
    
  529 TCPUNACCEPTABLE12  last ack out ofwdw SEQ  unacceptable ACK  ACK seq 
ack last ack  
Synopsis  TCP in LAST ACK state MUST return an ACK with proper SEQ and ACK numbers after recv a 
seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in a 
synchronized state any unacceptable segment out of window sequence number or 
unacceptible acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LAST ACK state  
2 TESTER Send a data segment satisfying one of the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with  an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in LAST ACK state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number  and ACK number  
indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in LAST ACK state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  530 TCPUNACCEPTABLE13  time wait out ofwdw SEQ  unacceptable ACK  ACK seq 
ack time wait  
Synopsis  TCP in TIME WAIT state MUST return an ACK with proper SEQ and ACK numbers after recv 
a seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in 
a synchronized state an y unacceptable segment out of window sequence number or 
unacceptible acknowledgment number must elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to TIME WAIT state  
2 TESTER Send a data segment satisfying one of the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Verify that the DUT remains in TIME WAIT state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ number expected  
4 TESTER Verify that the DUT remains  in TIME WAIT state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  531 TCP UNACCEPTABLE 14 close wait out ofwdw SEQ  unacceptable ACK  ACK 
seq ack close wait  
Synopsis  TCP in CLOSE WAIT state MUST return A CK with proper SEQ and ACK numbers after recv a 
seg with OTW SEQ or unacc ACK number and remain in same state If the connection is in a 
synchronized state any unacceptable segment out of window sequence number or 
unacceptible acknowledgment number must  elicit only an empty acknowledgment 
segment containing the current send sequence number and an acknowledgment indicating 
the next sequence number expected to be received and the connection remains in the 
same state  
Prerequisites  Check section prerequi sites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to CLOSE WAIT state  
2 TESTER Send a data segment satisfying one of the following cases  
         CASE 1 Data segment with out of window SEQ number  
         CASE 2 Data segment with an unacceptable ACK number  
3 DUT Send an ACK with current send SEQ number and ACK number  
        indicating next SEQ number expected  
4 TESTER Sending a dat a packet to DUT  
5 DUT Does not send any response  
6TESTER  Verify that the DUT stays in CLOSE WAIT state  
Pass Criteria  3 DUT Send an ACK with current send SEQ number and ACK number  
indicating next SEQ number expected  
5 DUT Does not send any respon se  
6TESTER  Verify that the DUT stays in CLOSE WAIT state  
Test Iterations  
 
Notes  Derived from RFC 793 s34 p37 Establishing a Connection  
MUST  

  
    
  532 4964  Processing TCP OPEN Calls Received from the Application Layer  
TCPCALLOPEN 01 Open Active Open w unspec socket  error  
Synopsis  For an active OPEN call with unspecified foreign socket TCP MUST return error 
foreign socket unspecified  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call with unspecified foreign socket  
2 TESTER Cause the application on the DUT side to return the error code  
3 DUT Returns error foreign soc ket unspecified  
Pass Criteria  3 DUT Returns error foreign socket unspecified  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p56 Event Processing  
MUST  

  
    
  533 TCPCALLOPEN 02 Open Passive Open illegal for this process  
Synopsis  TCP MUST refuse a passive OPEN call on a wnp indicating error connection illegal 
for this process   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause an application on the DUT side to issue a passive  
        OPEN call on a wnp  
2 DUT Issue a passive open call  
3 TESTER Verify that the DUT refuses to create new connection  
        indicating error connection illegal for this process  
        to the application  
Pass Criteria  3 TESTER Verify that the DUT refuses to create new connection  
indicating error connection illegal for this process  
to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p54 OPEN Call  
MUST  

  
    
  534 TCPCALLOPEN 03 Open Connection already exists syn sent active open  
Synopsis  If an OPEN call arrives on state SYN SENT TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the SYN SENT state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  535 TCPCALLOPEN 04 Open Connection already exists syn rcvd passive open  
Synopsis  If an OPEN call arrives on state SYN RCVD TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the SYN RCVD state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that th e DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  536 TCPCALLOPEN 05 Open Connection already exists established  
Synopsis  If an OPEN call arrives on state ESTABLISHED TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify th at the DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  537 TCPCALLOPEN 06 Open  Connection already exists finwait 1 
Synopsis  If an OPEN call arrives on state FINWAIT 1 TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the FINWAIT 1 state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that th e DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  538 TCPCALLOPEN07  Open Connection already exists finwait 2 
Synopsis  If an OPEN call arrives on state FINWAIT 2 TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the FINWAIT 2 state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the  DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processi ng 
MUST  

  
    
  539 TCPCALLOPEN 08 Open Connection  already exists close wait  
Synopsis  If an OPEN call arrives on state CLOSE WAIT TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the CLOSE WAIT state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the DUT returns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  540 TCPCALLOPEN09  Open Connection already exists closing  
Synopsis  If an OPEN call arrives on state CLOSING TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the CLOSING state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the DUT r eturns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  541 TCPCALLOPEN10  Open Connection already exists last ack  
Synopsis  If an OPEN call arrives on state LAST ACK TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the LAST ACK state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the DUT return s error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  542 TCPCALLOPEN11  Open Connection already exists time wait  
Synopsis  If an OPEN call arrives on state TIME WAIT TCP MUST return error connection 
already exists   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the TIME WAIT state  
2 TESTER Cause the application on the DUT side to issue an OPEN call  
3 DUT Issues an OPEN call  
4 TESTER Verify that the DUT retur ns error connection already  
        exists  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection already  
exists  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p55 Event Processing  
MUST  

  
    
  543 4965  Processing TCP SEND Calls Received from the Application Layer  
 TCPCALL SEND 01 Send Connection does not exists closed  
Synopsis  If a SEND call arrives on CLOSED state and user has got proper access to such conn TCP 
MUST return error connection do es not exist   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue a SEND call  
2 DUT Issue a SEND call  
3 TESTER Verify that the DUT returns error connection does not  
        exist  to the application  
Pass Criteria  3 TESTER Verify that the DUT returns error connection does not  
exist  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p56 Event Processing  
MUST  

  
    
  544  TCPCALL SEND 02 Send Connection closing finwait 1 
Synopsis  If SEND call arrives on state FINWAIT 1 TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the FINWAIT 1 state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 DUT Issue a SEND call  
4 TESTER Verify that  the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p57 Event Processing  
MUST  

  
    
  545  TCPCALL SEND03  Send Connection closing finwait 2 
Synopsis  If SEND call arrives on state FINWAIT 2 TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the FINWAIT 2 state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 DUT Issue a SEND call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p57 Event Processing  
MUST  

  
    
  546  TCPCALL SEND04  Send Foreign socket unspecified  listen  
Synopsis  If SEND call arrives on LISTEN state and foreign socket was not specified TCP MUST 
return error foreign socket unspecified   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Inp ut 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LISTEN state  
2 TESTER Cause the application on the DUT side to issue SEND call  
        without specifying any foreign socket  
3 DUT Issues a SEND  call 
4 TESTER Verify that the DUT returns error foreign socket  
        unspecified  to the application  
Pass Criteria  4 TESTER Verify that the DUT returns error foreign socket  
unspecified  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p56 Event Processing  
 
MUST  

  
    
  547 TCPCALL SEND05  Send Connection closing closing  
Synopsis  If SEND call arrives on state CLOSING TCP MUST return error connection closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the CLOSING state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 DUT Issue a SEND call  
4 TESTER Ver ify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p57 Event Processing  
MUST  

  
    
  548  TCPCALLSEND06  Send Connection closing last ack  
Synopsis  If SEND call arrives on state LAST ACK TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the LAST ACK state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 DUT Issue a SEND call  
4 TESTER Verify that the DUT returns error conne ction closing  to 
        the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p57 Event Processing  
MUST  

  
    
  549  TCPCALL  SEND07  Send Queueing SEND syn sent MAY  
Synopsis  If a SEND call arrives on SYN SENT state TCP MAY queue the request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT to move on to SYN SENT state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 TESTER Send SYNACK  
4 DUT Send ACK  
5 DUT Send the data segment  
Pass Criteria  4 DUT Send ACK  
5 DUT Send the data segment  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p56 Event Processing  
MAY  
 TCPCALL  SEND08  Send Queueing SEND syn rcvd MAY  
Synopsis  If a SEND call arrives on SYN RCVD state TCP MAY queue the request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT to move on to SYN RCVD state  
2 TESTER Cause the application to issue a SEND call  
3 TES TER Send ACK  
4 DUT Send the data segment  
Pass Criteria  4 DUT Send the data segment  
Notes  Derived from RFC 793 s39 p56 Event Processing  
MAY  

  
    
  550  TCPCALLSEND09  Send Connection closing time wait  
Synopsis  If SEND call arrives on state TIME WAIT TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT  to move on to the TIME WAIT state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
3 DUT Issue a SEND call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Ver ify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p57 Event Processing  
MUST  

  
    
  551 4966  Processing TCP RECEIVE  Calls Received from the Application Layer  
TCPCALLRECEIVE 01 Receive Connection closing closing  
Synopsis  If RECEIVE call arrives on state CLOSING TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the CLOSING state  
2 TESTER Cause the application to issue a RECEIVE call  
3 DUT Issues a RECEIVE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass  Criteria  3 DUT Issues a RECEIVE call  
4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p59 Event Processing  
MUST  

  
    
  552 TCPCALLRECEIVE02  Receive Connection does not exist closed  
Synopsis  If RECEIVE call arrives on CLOSED state and the user has got access to such conn TCP 
MUST return error connection does not exist   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue a RECEIVE call  
2 DUT Issues a RECEIVE call  
3 TESTER Verify that the DUT returns error connection does not  
        exist  to the applica tion 
Pass Criteria  3 TESTER Verify that the DUT returns error connection does not  
exist  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p58 Event Processing  
MUST  

  
    
  553 TCP CALLRECEIVE03  Receive Queueing Receive syn sent  
Synopsis  If RECEIVE call arrives on SYN SENT state TCP MUST queue the request for processing 
after entering ESTABLISHED state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN SENT state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 DUT Queue the request  
4 TESTER Send SYNACK  
5 DUT Send ACK  
6 TESTER Send a data segment  
7 TESTER Veri fy that the DUT returns the data in response to the  
        queued RECEIVE call  
Pass Criteria  5 DUT Send ACK  
7 TESTER Verify that the DUT returns the data in response to the  
queued RECEIVE call  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p58 Event Processing  
MUST  

  
    
  554 TCPCALLRECEIVE04  Receive Reassemble queues incoming segments established 
 finwait 1  finwait 2 
Synopsis  If RECEIVE call arrives in ESTABLISHED FINWAIT 1 or FINWAIT 2 state TCP MUST 
reassemble queued incoming segments and  return to the application  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the wst state  
2 TESTER Send nss number of small sized ssz data segments  
3 TESTER Cause the application on the DUT side to issue a RECEIVE  
        call having more than nssssz buffer size  
4 DUT Issues a RECEIVE call  
5 TESTER Verify that the DUT returns the reassembled data to the  
        receiving application  
Pass Criteria  5 TESTER Verify that the DUT returns the reassembled data to the  
receiving application  
Test Iterations  1 CASE wst  ESTABLISHED  
2 CASE wst  FINWAIT 1 
3 CASE wst  FINWAIT 2 
Notes  Derived from RFC 793 s39 p58 Event Processing  
MUST  

  
    
  555 TCPCALLRECEIVE05  Receive Queued data close wait  
Synopsis  If RECEIVE call arrives on CLOSE WAIT state and there is data awaiting delivery TCP 
MUST return the data to the application  
Prerequisites  Check section  prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Send a data segment with FIN flag set  
3 TESTER Cause the application on the DUT side to issue a RECEIVE call  
4 DUT Issues a RECEIVE call  
5 TESTER Verify that the DUT returns the data to the receiving  
        application  
Pass Criteria  5 TESTER Verify that the DUT returns the data to the receiving  
application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p59 Event Processing  
MUST  

  
    
  556 TCPCALLRECEIVE06  Receive Connection closing on no queued data close wait  
Synopsis  If RECEIVE call arrives on CLOSE WAIT state and there is no data awaiting delivery TCP 
MUST respond error connection closing  to the application  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to CLOSE WAIT state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 DUT Issues a RECEIVE call  
4 TESTER Verify that the DUT responds error connection closing  
        to the receiving application  
Pass Criteria  4 TESTER Verify that th e DUT responds error connection closing  
to the receiving application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p59 Event Processing  
MUST  

  
    
  557 TCPCALLRECEIVE07  Receive Connection closing last ack  
Synopsis  If RECEIVE call arrives on state LAST ACK TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the LAST ACK state  
2 TESTER Cause the application to issue a RECEIVE call  
3 DUT Issues a RECEIVE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that th e DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p59 Event Processing  
MUST  

  
    
  558 TCPCALLRECEIVE08  Receive Connection closing time wait  
Synopsis  If RECEIVE call arrives on state TIME WAIT TCP MUST return error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to the TIME WAIT state  
2 TESTER Cause the application to issue a RECEIVE call  
3 DUT Issues a RECEIVE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that t he DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p59 Event Processing  
MUST  

  
    
  559 4967  Processing CLOSE calls Received from the Application Layer  
TCPCALLCLOSE 01 Close Connection does not exist closed  
Synopsis  For CLOSE call on CLOSED state if the user has got access to such a connection TCP 
MUST return error connection does not exist   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue a CLOSE call  
2 DUT Issues a CLOSE call  
3 TESTER Verify that the DUT returns error connection does not  
        exist  to the application  
Pass Criteri a 3 TESTER Verify that the DUT returns error connection does not  
exist  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p60 Event Processing  
MUST  

  
    
  560 TCPCALLCLOSE02  Close Connection closing closing  
Synopsis  For CLOSE call on state CLOSING TCP MUST return with error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to CLOSING state  
2 TESTER Cause the application on the DUT side to issue a CLOSE call  
3 DUT Issues a CLOSE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify tha t the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p61 Event Processing  
MUST  

  
    
  561 TCPCALLCLOSE03  Close Connection closing finwait 1 
Synopsis  For CLOSE call on state FINWAIT 1 TCP SHOULD return error connection closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move  on to FINWAIT 1 state  
2 TESTER Cause the application on the DUT side to issue a CLOSE call  
3 DUT Issues a CLOSE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p60 Event Processing  
SHOULD  

  
    
  562 TCPCALLCLOSE04  Close Connection closing time wait  
Synopsis  For CLOSE call on state TIME WAIT TCP MUST return with error connection 
closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to TIME WAIT state  
2 TESTER Cause the application on the DUT side to issue a CLOSE call  
3 DUT Issues a CLOSE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  4 TESTER Verify t hat the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p61 Event Processing  
MUST  

  
    
  563 TCPCALLCLOSE05  Close Connection closing finwait 2 
Synopsis  For CLOSE call on state FINWAIT 2 TCP SHOULD return error connection closing   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move  on to FINWAIT 2 state  
2 TESTER Cause the application on the DUT side to issue a CLOSE call  
3 DUT Issues a CLOSE call  
4 TESTER Verify that the DUT returns error connection closing  to 
        the application  
Pass Criteria  3 DUT Issues a CLOSE call 
4 TESTER Verify that the DUT returns error connection closing  to 
the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p60 Event Processing  
SHOULD  

  
    
  564 4968  Processing TCP ABORT Calls Received from the Application Layer  
TCPCALLABORT 01 Abort Connection does not exist closed  
Synopsis  For ABORT call on CLOSED state if user has got access to such connection TCP MUST 
return with error connection does not exist   
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an ABORT call  
2 DUT Issues an ABORT call  
3 TESTER Verify that DUT MUST return error connection does not  
        exist to the application  
Pass Criteria  3 TESTER Verify that DUT MUST return error connection does not  
exist  to the application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p62 Event Processing  
MUST  

  
    
  565 TCPCALLABORT02 Abort Closing connection established  closed  
Synopsis  For ABORT call in ESTABLISHED state TCP MUST enter CLOSED state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application to issue an ABORT call  
3 DUT Send a RST control message  
4 TESTER Verify that the DUT moves on to CLOSED state  
Pass Criteria  3 DUT Send a RST control message  
4 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p62 Event Processing  
MUST  

  
    
  566 TCPCALLABORT03  Abort  Closing connection closing  last ack  time wait  
closed  
Synopsis  For ABORT call on CLOSING LAST ACK or TIME WAIT state TCP MUST respond with 
ok and enter CLOSED state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to the wst state  
2 TESTER Cause the application on the DUT side to issue an ABORT call  
3 DUT Issues an ABORT call  
4 TESTER Verify that the DUT responds with ok to the application  
5 TESTER Verify that the DUT m oves on to CLOSED state  
 
Pass Criteria  4 TESTER Verify that the DUT responds with ok to the application  
5 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  1 CASE wst  CLOSING  
2 CASE wst  LAST ACK 
3 CASE wst  TIME WAIT  
Notes  Derived from RFC 793 s39 p62 Event Processing  
MUST  

  
    
  567 4969  TCP Packet Flag Generation in Response to Receiving Invalid Packets  
TCPFLAGSINVALID 01 listen RST  ignore  
Synopsis  TCP MUST ignore an incoming segment with RST flag in LISTEN st ate  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a segment with SYN and RST  
3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in the LISTEN state  
Pass Criteria  3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in the LISTEN state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p65 Event  Processing  
MUST  

  
    
  568 TCPFLAGSINVALID02  listen ACK  RSTseq   ack listen  
Synopsis  TCP in LISTEN state TCP MUST send RST in response to incoming segment with ACK and 
remain in the same state SEQ number of RST is taken from SEGACK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a segment with SYN and ACK  
3 DUT Send a RST contr ol message with SEQ number same as the ACK  number of the 
incoming segment  
4 TESTER Verify that the DUT remains in the LISTEN state  
Pass Criteria  3 DUT Send a RST control message with SEQ number same as the ACK  
number of the incoming segment  
4 TESTER  Verify that the DUT remains in the LISTEN state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p65 Event Processing  
MUST  

  
    
  569 TCPFLAGSINVALID03  syn sent ACKRST  ignore  
Synopsis  TCP in SYN SENT state MUST ignore a segment carrying an unacceptable ACK and RST  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN SENT state  
2 TESTER Send a segment having both ACK and RST flags with  unacceptable ACK 
number  
3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in SYN SENT state  
Pass Criteria  3 DUT Do not send any response  
4 TESTER V erify that the DUT remains in SYN SENT state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p66 Event Processing  
MUST  

  
    
  570 TCPFLAGSINVALID04  syn sent RST  ignore  
Synopsis  TCP in SYN SENT state MUST ignore a RST control message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN SENT state  
2 TESTER Send a RST control message  
3 DUT Do not send any response  
4 TES TER Verify that the DUT remains in SYN SENT state  
Pass Criteria  3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in SYN SENT state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p67 Event Processing  
MUST  

  
    
  571 TCPFLAGSINVALID05  syn sent ACKRST  CLOSED  
Synopsis  TCP in SYN SENT state MUST move on to CLOSED state after receiving a segment with 
ACK and RST and acceptable ACK number  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN SENT state  
2 TESTER Send a segment a flag set along with RST flag with  acceptable ACK number  
3 DUT Goes to CLOSED state  
4 TESTER Verify tha t the DUT moves on to CLOSED state  
Pass Criteria  3 DUT Goes to CLOSED state  
4 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  1 CASE flag set  SYNACK  
2 CASE flag set  ACK  
Notes  Derived from RFC 793 s39 p67 Event Processing  
MUST  

  
    
  572 TCPFLAGSINVALID06  syn sent no synno rst  do nothing  
Synopsis  TCP in SYN SENT state MUST drop the packet and remain in the same state after 
receiving a segment with neither SYN nor RST flag set  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN SENT state  
2 TESTER Send a segment of type stp along with ACK flag with acceptable ACK 
number  
3 DUT DUT does not change state  
4 TESTER Verify that the DUT  does not send a SYN ACK and  remains in SYN SENT state  
Pass Criteria  3 DUT DUT does not change state  
4 TESTER Verify that the DUT does not send a SYN ACK and remains in SYN SENT state  
Test Iterations  1 CASE stp  no data  
2 CASE stp  data  
Notes  Derived from RFC 793 s39 p68 Event Processing  
MUST  

  
    
  573 TCPFLAGSINVALID07  syn rcvd RSTotw SEQ  ACKSEQ  
Synopsis  TCP in SYN RCVD state MUST send ACK with next expected SEQ num on receiving any 
segment without RST with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN RCVD state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the correct expected next SEQ nu mber  
4 TESTER Verify that th e DUT remains in SYN RCVD state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in SYN RCVD state  
Test Iterations  1 CASE flag set  SYN 
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  574 TCPFLAGSINVALID08  established otw SEQ  ACKseq established  
Synopsis  TCP in ESTABLISHED state MUST send an ACK with next expected SEQ number after 
recv any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general  Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number  indicating the correct expected  next SEQ num ber 
4 TESTER Verify that the D UT remains in ESTABLISHED state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the D UT remains in ESTABLISHED state  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  575 TCPFLAGSINVALID09  finwait 1 otw SEQ  ACKseq finwait 1 
Synopsis  TCP in FINWAIT 1 state MUST send ACK with next expected SEQ number after receiving 
any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to FINWAIT 1 state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the correct expected next SE Q number  
4 TESTER Verify that the  DUT remains in FINWAIT 1 state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in FINWAIT 1 state  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
Control Protocol TCP  
MUST  

  
    
  576 TCPFLAGSINVALID10  finwait 2 otw SEQ  ACKse q finwait 2 
Synopsis  TCP in FINWAIT 2 state MUST send ACK with next expected SEQ number after receiving 
any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Paramet ers Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to FINWAIT 2 state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the correct expected  next SEQ number  
4 TESTER Verify that the  DUT remains in FINWAIT 2 state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in FINWAIT 2 state  
Test It erations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  577 TCPFLAGSINVALID1 1 close wait otw SEQ  ACKs eq close wait  
Synopsis  TCP in CLOSE WAIT state MUST send an ACK with next expected SEQ number after recv 
any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to CLOSE WAIT state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the correct expected  next SEQ number  
4 TESTER Verify that the DUT remains in CLOSE WAIT state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in CLOSE WAIT state  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  578 TCPFLAGSINVALID1 2 closing otw SEQ  ACKseq closing  
Synopsis  TCP in CLOSING state MUST send an ACK with next expected SEQ number after 
receiving any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to CLOSING state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the c orrect expected  next SEQ number  
4 TESTER Verify that t he DUT remains in CLOSING state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in CLOSING state  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  579 TCPFLAGSINVALID1 3 last ack otw SEQ  ACKs eq last ack  
Synopsis  TCP in LAST ACK state MUST send an ACK with next expected SEQ number after 
receiving any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LAST ACK state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the correct expected  next SEQ number  
4 TESTER Verify that th e DUT remains in LAST ACK state  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify that the DUT remains in LAST ACK state  
Test Iterations  1 CASE flag set  SYN  
2 CASE flag set  SYNACK  
3 CASE flag set  ACK  
4 CASE flag set  FIN  
5 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  580 TCPFLAGSINVALID1 4 time wait otw SEQ  ACK seq time wait  
Synopsis  TCP in TIME WAIT state MUST send an ACK with next expected SEQ number after recv 
any segment with OTW SEQ number and remain in the same state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to TIME WAIT state  
2 TESTER Send a segment with a flag set RST0 and with an unacceptable SEQ number  
3 DUT Send an ACK with ACK number indicating the  correct expected  next SEQ number  
4 TESTER Verify DUT remains in TIME WAIT state for other cases  
Pass Criteria  3 DUT Send an ACK with ACK number indicating the correct expected  
next SEQ number  
4 TESTER Verify DUT remains in TIME WAIT state for other  cases  
Test Iterations  1 CASE flag set  FIN  
2 CASE flag set  Data segment  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  581 TCPFLAGSINVALID1 5 closed  syn sent  listen RSTotw SEQ  ignore  
Synopsis  TCP in any state other than CLOSED SYN SENT and LISTEN states MUST ignore a RST 
segment with OTW SEQ number  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a RST segment with an unacceptable SEQ number  
3 DUT Do not send any response  
4 TESTER Verify that  the DUT remains in wst state  
Pass Criteria  3 DUT Do not send any response  
4 TESTE R Verify that the DUT remains in wst state  
Test Iterations  1 CASE wst  SYN RECEIVED  
2 CASE wst  ESTABLISHED  
3 CASE wst  FINWAIT 1 
4 CASE wst  FINWAIT 2 
5 CASE wst  CLOSE WAIT  
6 CASE wst  CLOSING  
7 CASE wst  LAST ACK 
8 CASE wst  TIME WAIT  
Notes  Derived from RFC 793 s39 p69 Event Processing  
MUST  

  
    
  582 49610  Processing TCP Flag s 
TCPFLAGSPROCESSING 01 syn rcvd RST  connection refused active open  
Synopsis  TCP in SYN RCVD state reached through active OPEN MUST inform connection 
refused  to application on recv a RST  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to SYN RCVD state initiated by active  
        OPEN call  
2 TESTER Send a RESET segment  
3 TESTER Cause DUT side app to issue a receive call  
4 DUT Returns error  
5 TESTER Verify that the DUT informs connectio n refused  to the  
        receiving application  
Pass Criteria  4 DUT Returns error  
5 TESTER Verify that the DUT informs connection refused  to the  
receiving application  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p70 Event Processing  
MUST  

  
    
  583 TCPFLAGSPROCESSING02  established  FinWait 1  FinWait 2  Close Wait RST  
closed  
Synopsis  TCP in SYNC RCVD ESTABLISHED   FINWAIT 1 FINWAIT 2 CLOSE WAIT state s MUST 
return to CLOSED state on RESET  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a RST segment  
3 DUT Moves to CLOSED state  
4 TESTER Verify that the DUT moves on to C LOSED state  
 
Pass Criteria  3 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  1 CASE  wst   SYNRCVD  
2 CASE  wst   ESTABLISHED  
3 CASE wst  FINWAIT 1 
4 CASE wst  FINWAIT 2 
5 CASE  wst   CLOSEWAIT 
Notes  Derived from RFC 793 s39 p70 Event Processing  
MUST  

  
    
  584 TCPFLAGSPROCESSING03 closing  last ack RST  closed  
Synopsis  TCP in CLOSING LAST ACK state MUST return to CLOSED state on receiving a RST  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a RST segment  
3 DUT Goes to CLOSED state  
4 TESTER Verify that t he DUT moves on to CLOSED state  
Pass Criteria  4 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  1 CASE wst  CLOSING  
2 CASE wst  LAST ACK 
Notes  Derived from RFC 793 s39 p70 Event Processing  
 

  
    
  585 TCPFLAGSPROCESSING04 time wait RST  closed  
Synopsis  TCP in TIME WAIT state  MUST return to CLOSED state on receiving a RST  
Note Test case will be executes only if DUT does not  
       support RFC 1337 based Time Wait Assassination Avoidance  
Prerequisites  Check section prerequisites  
Test setup  Topology  1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER C ause the DUT to move on to TIME WAIT state  
2 TESTER Send a RST segment  
3 DUT Goes to CLOSED state  
4 TESTER Verify that the DUT moves on to CLOSED state  
Pass  Criteria  4 TESTER Verify that the DUT moves on to CLOSED state  
Test Iterations  
 
Notes  Derived from RF C 793 s39 p70 Event Processing  

  
    
  586 TCPFLAGSPROCESSING05  syn rcvd SYN  closed  
Synopsis  TCP in SYN RCVD state MUST send a reset and go to CLOSED  state  on recv a seg with 
SYN in window  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN RCVD state  
2 TESTER  Send a segment of type Stp  
3 DUT Send a RST segment  
4TESTER Verify that the receiving application receives the signal  
that connection reset  has occurred from the remote site and the DUT moves on to 
CLOSED state  
Pass Criteria  3 DUT Send a RST segment  
4TESTER Verify that the receiving application receives the signal  
that connection reset  has occurred from the remote site and the DUT moves on to 
CLOSED state  
Test Iterations  1 CASE stp  SYN in window  
2 CASE stp  SYNACK in window  
Notes  Derived from RFC 793 s39 p71 Event Processing  
MUST  

  
    
  587 TCPFLAGSPROCESSING06  time wait FIN  FINACK  
Synopsis  TCP in TIME WAIT state MUST acknowledge a retransmitted FIN and restart the 
2MSL time out  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to TIME WAIT state  
2 TESTER Send the last FIN once more  
3 DUT Send ACK for the retransmitted FIN  
4 TESTER Wait for 15MSL time  
5 TESTER Verify that the DUT remains in TIME WAIT state  
Pass Criteria  3 DUT Send ACK for the retransmitted FIN  
5 TESTER Verify that the DUT remains in TIME WAIT state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p73 Event Processing  
MUST  

  
    
  588 TCPFLAGSPROCESSING07  close wait  closing  last ack  time wait URG  ignore  
Synopsis  TCP in CLOSE WAIT CLOSING LAST ACK or TIME WAIT state MUST ignore any 
segment with only URG flag set  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a data segment with only URG flag set  
3 DUT Do not send any resp onse  
 
Pass Criteria  3 DUT Do not send any response  
Test Iterations  1 CASE wst  CLOSE WAIT  
2 CASE wst  CLOSING  
3 CASE wst  LAST ACK 
4 CASE wst  TIME WAIT  
Notes  Derived from RFC 793 s39 p74 Event Processing  
MUST  

  
    
  589 TCPFLAGSPROCESSING08  closed listen  syn sent FIN  ignore   
Synopsis  TCP in CLOSED LISTEN or SYN SENT state MUST not process a FIN  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a FIN  
3 DUT  
in SYN SENT or LISTEN state  Do not send any response or retransmit SYN         
In CLOSED state  send a RST segment  
4 TESTER Verify that  the DUT remains in wst state  
Pass Criteria  1 DUT  
in SYN SENT or LISTEN state  Do not send any response or retransmit SYN         
In CLOSED state  send a RST segment  
4 TESTER Verify that the DUT remains in wst state  
Test Iterations  1 CASE wst   CLOSED  
2 CASE wst  LISTEN  
3 CASE wst  SYN SENT  
Notes  Derived from RFC 793 s39 p75 Event Processing  
MUST  

  
    
  590 TCPFLAGSPROCESSING09  close wait closing  last ack FIN  ignore  
Synopsis  TCP in CLOSE WAIT CLOSING or LAST ACK state MUST not change state after 
receiving a FIN  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the  DUT to move on to wst state  
2 TESTER Send a FIN  
3 DUT Do not change state  
4 TESTER Verify that  the DUT remains in wst state  
Pass Criteria  4 TESTER Verify that the DUT remains in wst state  
Test Iterations  1 CASE wst  CLOSE WAIT  
2 CASE wst  CLOSING  
3 CASE wst  LAST ACK 
Notes  Derived from RFC 793 s39 p75 Event Processing  
MUST  

  
    
  591 TCPFLAGSPROCESSING1 0 established piggybacking  
Synopsis  TCP in ESTABLISHED state SHOULD piggyback acknowledgement with a segment being 
transmitted whenever possible without incurring undue delay  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move to ESTABLISHED state  
2 TESTER Send the last ACK once more  
3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in ESTABLISHED state  
Pass Criteria  3 DUT Send the data segment  
5 DUT Do not send this data segment  
7 DUT Send the pending data segment piggyb acking the  
acknowledgement within 05 sec  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p74 Event Processing  
SHOULD  

  
    
  592 TCPFLAGSPROCESSING1 1 established duplicate ACK  ignore   
Synopsis  TCP in ESTABLISHED state MUST ignore a duplicate ACK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move to ESTABLISHED state  
2 TESTER Send the last ACK once more  
3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in ESTABLISHED state  
Pass Criteria  3 DUT Do not send any response  
4 TESTER Verify that the DUT remains in ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p72 Event Processing  
MUST  

  
    
  593 49611  Closing a TCP Connection  
TCPCLOSING 01 syn rvcd RST  closed active open  
Synopsis  TCP if starts as an active connection and reaches SYN RCVD state MUST go to CLOSED 
state on RESET  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT Move on to SYN RCVD state starting with an active OPEN call  
2 TESTER Send a RST  
3 DUT Go to CLOSED state  
4 TESTER Verify that DUT goes to CLOSED state  
Pass Criteria  4 TESTER Verify that DUT goes to CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 1122 s42213 p88 Closing a connection RFC 793 Section 35  
MUST  

  
    
  594 TCPCLOSING02  established RST  closed inform upper layer  
Synopsis  TCP in ESTABLISHED state MUST inform the application in case of aborting from 
remote site  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT Move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 TESTER Send a RST  
4 TESTER Verify that the receiving application receives the signal  
        that connection reset  has occurred from the remote site  
Pass Criteria  4 TESTER Verify that the receiving application receives the signal  
that connection reset  has occurred from the remote site  
Test Iterations  
 
Notes  Derived from RFC 1122 s42213 p87 Closing a connection RFC 793 Section 35  
MUST  

  
    
  595 TCPCLOSING 03 RST with DATA  
Synopsis  TCP SHOULD allow a received RST segment to include data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause  the DUT to move on to ESTABLISHED state  
2 TESTER Send a RS T segment containing some data  
3 DUT Do not send any response  
4 TESTER Verify that the DUT is in CLOSED state  
Pass Criteria  3 DUT Do not send any response  
4 TESTER Verify that the DUT is  in CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 1122 s42212 p87 RST Segment RFC 793 Section 34  
MUST  

  
    
  596 TCPCLOSING04 finwait 1  finwait 2 DATA half duplex closing  
Synopsis  TCP MAY implement a half duplex TCP close sequence so that an application after 
closing cannot continue to read data from the connection  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to wst state  
2 TESTER Send a data segment  
3 DUT Send a RST control message  
4 TESTER Verify that the receiving application does not  
        receive the data  
 
Pass Criteria  3 DUT Send a RST control message  
4 TESTER Verify that the receiving application does not  
receive the data  
Test Iterations  1 CASE wst  FINWAIT 1 
2 CASE wst  FINWAIT 2 
Notes  Derived from RFC 1122 s42213 p88 Closing a connection RFC 793 Section 35  
MAY  

  
    
  597 TCPCLOSING05  time wait SYN  SYNACK  
Synopsis  TCP MAY accept a new SYN from the remote TCP in TIME WAIT state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to TIME WAIT state through wst  
        state  
2 TESTER Send a SYN  
3 DUT Send SYNACK  
4 TESTER Send ACK and verify that the DUT moves on to  
        ESTABLISHED state  
Pass Criteria  3 DUT Send SYNACK  
4 TESTER  Verify that the DUT moves on to ESTABLISHED state  
Test Iterations  1 CASE wst  FINWAIT 2 
2 CASE wst  CLOSING  
Notes  Derived from RFC 1122 s42213 p88 Closing a connection RFC 793 Section 35  
MAY  

  
    
  598 TCPCLOSING06  establi shed CLOSE   FIN 
Synopsis  Local user initiates the close a FIN segment can be constructed and placed on the 
outgoing segment queue  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state  
2 TESTER Cause DUT side application to issue a CLOSE call  
3 DUT Send a FIN  
Pass Criteria  3 DUT Send a FIN  
Test Iterations  
 
Notes  Derived from RFC 793 s35 p38 Closing a Connection  
MUST  

  
    
  599 TCPCLOSING07  established CLOSE  FIN  finwait 1 RECEIVE  DATA  ACK 
finwait 1 
Synopsis  Local user initiates the close TCP enters the FIN WAIT 1 state RECEIVEs are allowed 
in this state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state  
2 TESTER Cause DUT side application to issue a CLOSE call  
3 DUT DUT sends a FIN and Reaches FIN WAIT 1 State  
4 TESTER Cause DUT side application to issue a RECEIVE call  
5 DUT Issue a RECEIVE call  
6 TESTER Send some data to DUT  
7 DUT Send ACK of the received data  
8 TESTER Check that DUT receives proper data  
9 TESTER Check that DUT remains in FIN WAIT 1 state  
Pass Criteria  3 DUT DUT sends a FIN  
7 DUT Send ACK of the received data  
9 TESTER Check that DUT remains in FIN WAIT 1 state  
Test Iterations  
 
Notes  Derived from RFC 793 s35 p38 Closing a Connection  
MUST  

  
    
  600 TCPCLOSING08  finwait 2 RECEIVE  DATA   ACK finwait 2  
Synopsis  TCP enters the FIN WAIT 2 state RECEIVEs are allowed in this state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to FIN WAIT 2 state  
2 TESTER Cause DUT side application to issue a RECEIVE call  
3 DUT Issue a RECEIVE call  
4 TESTER Send some data to DUT  
5 DUT Send ACK of the received data  
6 TESTER Check that DUT receives prop er data  
7 TESTER Check that DUT remains in FIN WAIT 2 state  
Pass Criteria  3 DUT Issue a RECEIVE call  
5 DUT Send ACK of the received data  
6 TESTER Check that DUT receives proper data  
7 TESTER Check that DUT remains in FIN WAIT 2 state  
Test Iterations  
 
Notes  Derived from RFC 793 s35 p38 Closing a Connection  
MUST  

  
    
  601 TCPCLOSING09  established FIN  closewait  
Synopsis  If an unsolicited FIN arrives from the network TCP enters the CLOSEWAIT state TCP 
can send any remaining data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state  
2 TESTER Send a FIN  
3 DUT Send ACK for the received FIN  
4 TESTER C ause the DUT side application to send some data  
5 DUT Send data  
6 TESTER Check that DUT sent proper data  
7 TESTER Check that DUT remains in CLOSEWAIT state  
Pass Criteria  3 DUT Send ACK for the received FIN  
6 TESTER Check that DUT sent proper data  
7 TESTER Check that DUT remains in CLOSEWAIT state  
Test Iterations  
 
Notes  Derived from RFC 793 s35 p38 Closing a Connection  
MUST  

  
    
  602 TCPCLOSING1 0 finwait 1 RECEIVE  RST  connection reset  
Synopsis  TCP FINWAIT 1 state MUST inform the application in case of aborting from remote site  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT Move on to FINWAIT 1 state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 TESTER Send a RST  
4 TESTER Verify that the receiving application receives the signal  
        that connection reset  has occurred from the remote site  
Pass Cr iteria  4 TESTER Verify that the receiving application receives the signal  that connection 
reset  has occurred from the remote site  
Test Iterations  
 
Notes  Derived from RFC 1122 s42213 p87 Closing a connection RFC 793 Section 35  
MUST  

  
    
  603 TCPCLOSING1 1 finwait 2 RECEIVE  RST  connection reset  
Synopsis  TCP FINWAIT 2 state MUST inform the application in case of aborting from remote site  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT Move on to FINWAIT 2 state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 TESTER Send a RST  
4 TESTER Verify that the receiving application receives the signal  
        that connection reset  has occurred from the remote site  
Pass Criteria  4 TESTER Verify that the receiving application receives the signal  that connection 
reset  has occurred from the remote site  
Test Iterations  
 
Notes  Derived from RFC 1122 s42213 p87 Closing a connection RFC 793 Section 35  
MUST  

  
    
  604 TCPCLOSING1 2 close wait RECEIVE  RST  connection reset  
Synopsis  TCP in CLOSE WAIT state MUST inform the application in case of aborting from 
remote site  
Prerequisites  Check section  prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT Move on to CLOSE WAIT state  
2 TESTER Cause the application on the DUT side to issue a RECEIVE call  
3 TESTER Send a RST  
4 TESTER  Verify that the receiving application receives the signal  
        that connection reset  has occurred from the remote site  
Pass Criteria  4 TESTER Verify that the receiving application receives the signal  
that connection reset  has occurred from the remote site  
Test Iterations  
 
Notes  Derived from RFC 1122 s42213 p87 Closing a connection RFC 793 Section 35  
 
MUST  

  
    
  605 TCPCLOSING1 3 closed RST  closed  
Synopsis  TCP in a CLOSED state MUST ignore a RST control message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a RST control message  
2 DUT Do not send any response  
3 TESTER Verify that the DUT remains in CLOSED state  
Pass Criteria  2 DUT Do not send any response  
3 TESTER Verify that the DUT remains in CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 793 s39 p65 Event Processing  
MUST  

  
    
  606 49612  Processing of TCP MSS End of Option List and No Operation 
Options  
TCPMSSOPTIONS 01 Illegal option length for MSS  in a SYN segment  
Synopsis  TCP MUST be prepared to handle an illegal option length for MSS in a SYN segment 
without crashing  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a SYN with MSS option having illegal length ilen  
3 DUT Send a TCP Packet indicating DUT has NOT crashed  
4 TESTER Verify that the DUT remains in the LISTEN state  
 
Pass Criteria  3 DUT Send a TCP Packet indicating DUT has NOT crashed  
4 TESTER Verify that the DUT remains in the LISTEN state  
Test Iterations  1 CASE ilen  0 less than actual  
2 CASE ilen  5 more than actual  
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MUST  

  
    
  607 TCPMSSOPTIONS02  No Operation and End of Options List options in SYN segment  
Synopsis  TCP MUST be able to receive No Operation and End of Op tions List options in SYN 
segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a SYN with three No Operation options followed  
        by an End of Options list option  
3 DUT Send SYNACK  
4 TESTER Send ACK  
5 TESTER Verify that the DUT is in ESTABLISHED state  
Pass Criteria  3 DUT Send SYNACK  
5 TESTER Verify that the DUT is in E STABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MUST  

  
    
  608 TCPMSSOPTIONS03  Unimplemented TCP Option  
Synopsis  TCP MUST ignore without error any TCP option it does not implement  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LISTEN state on a wnp  
2 TESTER Send a SYN with an unimplemented TCP option uopt  
3 DUT Send SYNACK  
4 TESTER Send ACK  
5 TESTER Verify that the DUT is in ESTABLISHED state  
Pass Criteria  3 DUT Send SYNACK  
5 TESTER Verify that the DUT is in ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MUST  

  
    
  609 TCPMSSOPTIONS04  Illegal option length for MSS  in a SYN segment  
Synopsis  TCP MUST be prepared to handle an illegal option length for MSS in a SYN segment a 
suggested procedure is to reset the connection  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state at a wnp  
2 TESTER Send a SYN with MSS option having illegal l ength ilen  
3 DUT Send a RST  
4 TESTER Verify that the DUT remains in the LISTEN state  
 
Pass Criteria  3 DUT Send a RST  
4 TESTER Verify that the DUT remains in the LISTEN state  
Test Iterations  1 CASE ilen  0 less than actual  
2 CASE ilen  5 more than actual  
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MAY  

  
    
  610 TCPMSSOPTIONS05  Illegal option length for MSS  in a SYN ACK segment  
Synopsis  TCP MUST be prepared to handle an illegal option length for MSS in a SY NACK 
segment without crashing  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN  
3 TESTER Send SYNACK with MSS option having illegal length ilen  
4 DUT Send a TCP  Packet indicating DUT has NOT crashed  
 
Pass Criteria  2 DUT Send a SYN  
4 DUT Send a TCP Packet indicating DUT has NOT crashe d 
Test Iterations  1 CASE ilen  0 less than actual  
2 CASE ilen  5 more than actual  
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MUST  

  
    
  611 TCPMSSOPTIONS06  MSS option in SYN segment  
Synopsis  TCP MUST be able to receive MSS option in SYN segment and calculate the effective 
send segment size appropriately  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LISTEN state  
2 TESTER Send a SYN with MSS option having a value Mv  
3 DUT Send SYNACK  
4 TESTER Send ACK  
5 TESTER Cause the application to issue a SEND request for data with  
size at least max MSS  
6 DUT Send data segments  
7 TESTER Verify that the first received segment has size that is  min MSS  
Pass Criteria  3 DUT Send SYNACK  
6 DUT Send data segments  
7 TESTER Verify that the first received segment has size that is minMSS  
Test Iterations  1 CASE Mv is smaller than MSS of DUT  
2 CASE Mv is larger than MSS of DUT  
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 
31 
 
MUST  

  
    
  612 TCPMSSOPTIONS07  Default send MSS of 536  
Synopsis  TCP MUST assume a default send MSS of 536 if MSS option is not received at 
connection setup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send SYNACK  
4 TESTER Send ACK with MSS option having a value smaller than  
        mintransportlayermaxsendmsgsize 20 536  
5 TESTER Cause the application to issue a SEND request fo r  
        data with size just higher than  
        mintransportlayermaxsendmsgsize 20 536  
6 DUT Send a data segment  
7 TESTER Verify that the received segment has size equal to  
        mintransportlayermaxsendmsgsize 20 536  
Pass Criter ia 3 DUT Send SYNACK  
6 DUT Send a data segment  
7 TESTER Verify that the received segment has size equal to  
mintransportlayermaxsendmsgsize 20 536  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 
31 
 
MUST  

  
    
  613 TCPMSSOPTIONS08  MSS value default and changing  
Synopsis  SendMSS is the MSS value received from the remote host or the default 536 if no MSS 
option is received  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure   
1 TESTER Cause the DUT to m ove to ESTABLISHED state  
2 TESTER Send a data segment with MSS option having a value smaller  
        than the mintransportlayermaxs endmsgsize 20 536  
3 TESTER Cause the application to issue a SEND request for data with  
        size mintransportlayermaxsendmsgsize 20 536  
4 DUT Send a data segment  
5 TESTER Verify that the received segment has size equal to          
mint ransportlayermaxsendmsgsize 20 536  
Pass Criteria  4 DUT Send a data segment  
5 TESTER Verify that the received segment has size equal to  
mintransportlayermaxsendmsgsize 20 536  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 
31 
 
MUST  

  
    
  614 TCPMSSOPTIONS09  MSS option in SYN ACK segment  
Synopsis  TCP MUST be able to receive MSS option in SYNACK segment and calculate the effective 
send segment size appropriately  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an OPEN call  
2 DUT Send a SYN  
3 TESTER Send SYNACK with MSS opti on having a value Mv  
4 DUT Send ACK  
5 TESTER Cause the application to issue a send request for data with  
        size at least maxtransportlayermaxsendmsgsize 20 MSS  
6 DUT Send data segments  
7 TESTER Verify that the first received segment  has size that is  
        mintransportlayermaxsendmsgsize 20 MSS  
 
Pass Criteria  2 DUT Send a SYN  
4 DUT Send ACK  
6 DUT Send data segments  
7 TESTER Verify that the first received segment has size that is  
mintransportlayermaxsendmsgsi ze20 MSS  
Test Iterations  1 CASE Mv is smaller than transportlayermaxsendmsgsize 20 of DUT  
2 CASE Mv is larger than transportlayermaxsendmsgsize 20 of DUT  
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MUST  

  
    
  615 TCPMSSOPTIONS1 0 MSS option is not received  
Synopsis  If an MSS option is not received at connection setup TCP MUST assume a default send MSS 
of 536  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a SYN without MSS option  
2 DUT Send SYNACK  
3 TESTER Send ACK  
4 TESTER Cause the application on the DUT side to issue a send  
        request for data of size more than 536 bytes  
5 DUT  Send data segments  
6 TESTER Verify that the first received data segment has 536 bytes  
Note It may happen that the send mss of DUT is also 536 bytes In order to verify that DUT 
is actually dividing the data into segments based on the default mss valu e of TESTER     
Transport Layer Maximum Send Segment Size of DUT must be  greater than 556 Therefore 
Transport Layer Maximum Send  Segment Size of DUT is compared with a value 600greater  
than 556 in this test caseThe value 600 includes max ipoptions sizeif any             
Pass Criteria  2 DUT Send SYNACK  
5 DUT Send data segments  
6 TESTER Verify that the first received data segment has 536 bytes  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 31  
 
MUST  

  
    
  616 TCPMSSOPTIONS1 1 Sending the MSS option  
Synopsis  TCP MUST implement sending the MSS option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause an application on the DUT side to issue an OPEN call  
2 DUT Send a SYN  
3 TESTER Verify that received SYN contains MSS option  
Pass Criteria  2 DUT Send a SYN  
3 TESTER Verify that received SYN contains MSS option  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 
Section 31  
Control Protocol TCP  
MUST  

  
    
  617 TCPMSSOPTIONS1 2 MSS option in every SYN segment  differs default  
Synopsis  TCP SHOULD send MSS option in every SYN segm ent when its receive MSS differs 
from the default 536  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Receive MSS of the DUT is different from the default  
2 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
3 DUT Send a SYN with an MSS different from the default 536  
Pass Criteria  3 DUT Send a SYN with an MSS different from the default 536  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 
31 
 
SHOULD  

  
    
  618 TCPMSSOPTIONS1 3 MSS option in every SYN segment  same default  
Synopsis  TCP MAY send MSS option in every SYN segment even when its receive MSS value is 
same as the default 536  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN which may contain MSS option having a value of 536  
Pass Criteria  2 DUT Send a SYN which may contain MSS option having a value of 536  
Test Iterations  
 
Notes  Derived from RFC 1122 s4226 p85 Maximum Segment Size Option RFC 793 Section 
31 
 
MAY  

  
    
  619 TCPMSSOPTIONS14  Handle an illegal option length for MSS  in a SYN ACK segment  
Synopsis  TCP MUST be prepared to handle an illegal option length for MSS in a SYNACK 
segment a suggested procedure is to reset the con nection  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN 
3 TESTER Send SYNACK with MSS option having illegal length ilen  
4 DUT Send a RST  
 
Pass Criteria  2 DUT Send a SYN  
4 DUT Send a RST  
Test Iterations  1 CASE ilen  0 less than actual  
2 CASE ilen  5 more than actual  
Notes  Derived from RFC 1122 s4225 p85 TCP Options RFC 793 Section 31  
 
MAY  
 

  
    
  620 49613  Processing Out of Order Segments and Delayed ACKs  
TCPOUTOFORDER 01 Timing full sized segment  
Synopsis  A full sized segment MUST be acknowledged within a time of 05 sec  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a full sized segment  
3 DUT Send an ACK af ter some time  
4 TESTER Verify that the delay in receiving the ACK subtracting the  
        average round triptime is less than 05 sec  
Pass Criteria  3 DUT Send an ACK after some time  
4 TESTER Verify that the delay in receiving the ACK subtracting  the 
average round triptime is less than 05 sec  
Test Iterations  
 
Notes  Derived from RFC 1122 s4232 p96 When to Send an ACK Segment  
 
MUST  

  
    
  621 TCPOUTOFORDER02  Timing delayed ACK  
Synopsis  TCP SHOULD implement a delayed ACK but the delay MUST be less than 05 sec  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on  to full window operation in  
        ESTABLISHED state at a wnp  
2 TESTER Send two data segments consecutively without any delay  
3 DUT Send a single ACK for the data segments after a delay  
4 TESTER Verify that the delay subtracting the average roun d trip  
        time is less than 05 sec  
Pass Criteria  3 DUT Send a single ACK for the data segments after a delay  
4 TESTER Verify that the delay subtracting the average round trip  
time is less than 05 sec  
Test Iterations  
 
Notes  Derived from RFC  1122 s4232 p96 When to Send an ACK Segment  
 
MUST  

  
    
  622 TCPOUTOFORDER03 Q ueuing out oforder segments  
Synopsis  TCP SHOULD be capable of queuing out oforder segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a data segment  
3 DUT Send the ACK for the data segment  
4 TESTER Send nss number of data segments lea ving a gap in SEQ  
        numbers as if a segment is skipped at the beginning  
5 DUT Do not send ACKs for these segments  
6 TESTER Send a segment having data for the missing SEQ numbers  
7 DUT Send ACK for all queued data segs including the latest o ne 
Pass Criteria  3 DUT Send the ACK for the data segment  
5 DUT Do not send ACKs for these segments  
7 DUT Send ACK for all queued data segs including the latest one  
Test Iterations  
 
Notes  Derived from RFC 1122 s42220 p93 Event Processing RFC 793 Section 39 
SHOULD  

  
    
  623 TCPOUTOFORDER04  Acknowledging RCVNXT for valid out oforder data 
segments  
Synopsis  TCP MAY send an ACK segment acknowledging RCVNXT for valid out oforder data 
segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state at a wnp  
2 TESTER Send a data segment  
3 DUT Send the ACK for the segment  
4 TESTER Send a da ta segment that is in the receive window of DUT but  
        not at left window edge  
5 DUT Send an ACK acknowledging RCVNXT  
Pass Criteria  3 DUT Send the ACK for the segment  
5 DUT Send an ACK acknowledging RCVNXT  
Test Iterations  
 
Notes  Derived from RFC 1122 s42221 p94 Acknowledging Queued Segments RFC 
793Section 39 MAY  

  
    
  624 TCPOUTOFORDER05  Stream of full sized segments  
Synopsis  In a stream of full sized segments there SHOULD be an ACK for at least every second 
segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to full window operation in  
        ESTABLISHED state  
2 TESTER Send some number of full sized segments to fill the DUTs  
        receive window buffer  
3 DUT Send ACKs for all the data segments  
4 TESTER Verify that for every even number of data segments sent the  
        number of ACKs received is at least half of that number  
Pass Criteria  3 DUT Send ACKs for all the data segments  
4 TESTER Verify that for every even number of data segments sent the  
number of ACKs received is at least half of that number  
Test Iterations  
 
Notes  Derived from RFC 1122 s4232 p96 When to Send an ACK Segment  
 
SHOULD  

  
    
  625 TCPOUTOFORDER08  Queuing out oforder segments  
Synopsis  TCP SHOULD be capable of queuing out oforder segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Send a data segment  
3 DUT Send the ACK for the data segment  
4 TESTER Send nss number of data segments leaving a gap in SEQ  
        numbers as if a segment is skipped at the beginning  
5 DUT Do not send ACKs for these segments  
6 TESTER Send a segment having data for the missing SEQ numbers  
7 DUT Send ACK for all queued data segs including the latest one  
Pass Criteria  3 DUT Send the ACK for the data segment  
5 DUT Do not send ACKs for these segments  
7 DUT Send ACK for all queued data segs including the latest one  
Test Iterations  
 
Notes  Derived from RFC 1122 s42220 p93 Event Processing RFC 793 Section 39 
SHOULD  

  
    
  626 49614  SWS Avoidance Algorithm  
TCPAVOIDANCE1 SWS Avoidance Algorithm less MSS  
Synopsis  TCP MUST include an SWS avoidance algorithm in the receiver Note read some data 
of size less than MSS  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Continue sending data until DUT sends ACK with window 0  
3 TESTER Cause DUT to read some data of s ize less than MSS  
4 TESTER Send 0 window probe  
5 DUT Send ACK containing zero window  
Pass Criteria  5 DUT Send ACK containing zero window  
Test Iterations  
 
Notes  Derived from RFC 1122 s4233 p97 When to Send a Window Update MUST  

  
    
  627 TCPAVOIDANCE2  SWS Avoidance Algorithm greater MSS  
Synopsis  TCP MUST include an SWS avoidance algorithm in the receiver Noteread some data of 
size greater or equal to MSS TESTER follow the third step in a sequence TESTER cause 
DUT to receive data unt il DUT read data of size greater or equal to MSS  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Continue sending data until DUT sends ACK with window 0  
3 TESTER Cause DUT to read some data of size greater or equal to MSS  
4 TESTER Send 0 window probe  
5 DUT Send ACK containing non zero window  
6 TESTER Verify that non zero window size is  greater or equal to MSS  
Pass Criteria  5 DUT Send ACK containing non zero window  
6 TESTER Verify that non zero window size is greater or equal to MSS  
Test Iterations  
 
Notes  Derived from RFC 1122 s4233 p97 When to Send a Window Update MUST  
 

  
    
  628 49615  Retransmission Timeout  
TCPRETRANSMISSIONTO 01 Retransmitted packet differs from the original 
packet  
Synopsis  If a retransmitted packet differs from the original packet in the window value then the 
same IP identification field MUST NOT be used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause an application on the DUT side to issue  a data SEND  
        call 
3 DUT Send the data segment  
4 TESTER Send data packet of size MSS to DUT  
5 TESTER Do not send ACK for the received data and cause the  
        retransmission timer on the DUT side to expire  
6 DUT Retransmit the data segmen t with changed window value  
7 TESTER Verify that the IP identification fields in the two received  
        packets are different  
Pass Criteria  3 DUT Send the data segment  
6 DUT Retransmit the data segment with changed window value  
7 TESTER Verify t hat the IP identification fields in the two received  
packets are different  
Test Iterations  
 
Notes  Derived from RFC 1122 s42215 p90 Retransmission Timeout RFC 793 Section 37 
page 41  
 
MUST  

  
    
  629 TCPRETRANSMISSIONTO02  Retransmitted packet differs from the original 
packet in ack field  
Synopsis  If a retransmitted packet differs from the original packet in the acknowledgement field 
the same IP identification field MUST NOT be used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause an application on the DUT side to issue a data SEND  
        request  
3 DUT Send the data segment  
4 TESTER Do not send the ACK  
5 TESTER Send a data segment so that it reaches on the DUT side just  
        before the retransmission timer expires on the DUT side 
6 DUT Retransmit the data segment with ACK for the data s egment  
        received from the tester  
7 TESTER Verify that the IP identification fields in the two received  
        packets are different  
Pass Criteria  3 DUT Send the data segment  
6 DUT Retransmit the data segment with ACK for the data segment  
received from the tester  
7 TESTER Verify that the IP identification fields in the two received  
packets are different  
Test Iterations  
 
Notes  Derived from RFC 1122 s42215 p90 Retransmission Timeout RFC 793 Section 37 
page 41  
 
MUST  

  
    
  630 TCPRETRANSMISSIONTO 03 Karns algorithm  
Synopsis  TCP MUST follow the Karns algorithm  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause an application on the DUT side to issue a  
        data SEND request  
3 DUT Send the data segment  
4 TESTER Do not send the ACK and cause the retransmission  
        timer on the DUT side to expire  
5 DU T Send the data segment once more  
6 TESTER Note the retransmission time RTO  
7 TESTER Send an ACK just before the RTO occurs on DUT  
8 TESTER Cause the application to issue SEND request for  
        one more data segment  
9 DUT Send the data segment  
10 TESTER Do not send ACK  
11 DUT Retransmit the data segment  
12 TESTER Verify that the retransmission timer value is twice  
        the value of RTO noted earlierexponential backoff only  
Pass Criteria  3 DUT Send the data segment  
5 DUT Send the  data segment once more  
9 DUT Send the data segment  
11 DUT Retransmit the data segment  
12 TESTER Verify that the retransmission timer value is twice  
the value of RTO noted earlierexponential backoff only  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p95 Retransmission Timeout Calculation MUST  

  
    
  631 TCPRETRANSMISSIONTO04  Exponential backoff RTO Data  
Synopsis  TCP MUST include exponential backoff  check that it increases for successive RTO 
values for sending data segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause an application on the DUT side to issue  a data SEND  
        request  
3 DUT Send the data segment  
4 TESTER Do not send ACK  
5 DUT Retransmit the data segment after a timeout  
6 TESTER Do not send ACK and verify that RTO retransmission interval  
        is increasing at a fast at least more than linear rate  
Pass Criteria  2 DUT Send a SYN  
4 DUT Retransmit the SYN segment after a timeout  
5 TESTER Verify that RTO retransmission  interval is increasing at a fast at least more 
than linear rate  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p95 Retransmission Timeout Calculation MUST  

  
    
  632 TCPRETRANSMISSIONTO 05 Exponential backoff RTO SYN  
Synopsis  TCP MUST include exponential backoff  check that it increases for successive RTO 
values for sending SYN segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active OPEN  
        call 
2 DUT Send a SYN  
3 TESTE R Do not send SYNACK  
4 DUT Retransmit the SYN segment after a timeout  
5 TESTER Do not send SYNACK and verify that RTO retransmission  
        interval is increasing at a fast at least more than linear  
        rate 
Pass Criteria  2 DUT Send a SYN  
4 DUT Retransmit the SYN segment after a timeout  
5 TESTER Verify that RTO retransmission interval is increasing at a fast at least more 
than linear rate  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p95 Retransmission Timeout Calculation M UST  

  
    
  633 TCPRETRANSMISSIONTO 06 Initial RTO 3  
Synopsis  TCP SHOULD use RTO  3 sec initially  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN  
3 TESTER Do not send SYNACK  
4 DUT Retransmit the SYN segment after a timeout  
5 TESTER Verify that the DUT used a timeout of 3 sec  
Pass Criteria  2 DUT Send a S YN 
4 DUT Retransmit the SYN segment after a timeout  
5 TESTER Verify that the DUT used a timeout of 3 sec  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p96 Retransmission Timeout Calculation SHOULD  

  
    
  634 TCPRETRANSMISSIONTO07  Initial RTT 0  
Synopsis  TCP SHOULD use RTT  zero sec initially  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
        for some data  
3 DUT Send the data segment  
4 TESTER Do not send ACK  
5 DUT Retransmit the data segment  
6 TESTER Verify that the RTO used has considered RTT  zero sec with  
        some pre defined alpha beta LBOUND and UBOUND values  
Pass Criteria  3 DUT Send the data segment  
5 DUT Retransmit the data segment  
6 TESTER Verify that the RTO used has considered RTT  zero sec with  
some pre defined alpha beta LBOUND and UBO UND values  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p96 Retransmission Timeout Calculation SHOULD  

  
    
  635 TCPRETRANSMISSIONTO08  2MSL of RTO for data  
Synopsis  TCP SHOULD use an upper bound of 2MSL of RTO for data segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND call call some data  
3 DUT  Send the data segment  
4 TESTER Do not send ACK  
5 DUT Retransmit the data segment  
6 TESTER Do not send any ACK and verify that the DUT repeatedly  retransmits with 
increasing delays till the retransmit  timeout reaches 2MSL after which the RTO gets 
fixed at  that value  
Pass Criteria  3 DUT  Send the data segment  
5 DUT Retransmit the data segment  
6 TESTER Verify that the DUT repeatedly retransmits with increasing delays till the 
retransmit  timeout reaches 2MSL after whi ch the RTO gets fixed at that value  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p96 Retransmission Timeout Calculation SHOULD  

  
    
  636 TCPRETRANSMISSIONTO09  2MSL of RTO for SYN  
Synopsis  TCP SHOULD use an upper bound of 2MSL of RTO for SYN segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN  
3 TESTER Do not send SYNACK  
4 DUT Retransmit the SYN segment  
5 TESTER Do not send any SYNACK and verify that the DUT repeatedly  
        retransmits with increasing delays till the retransmit  
        timeout reaches 2MSL after which the RTO gets fixed at  
        that value  
Pass Criteria  4 DUT Send only cwnd ini segments  
Test Iterations  
 
Notes  Derived from RFC 1122 s4231 p96 Retransmission Timeout Calculation SHOULD  

  
    
  637 TCPRETRANSMISSIONTO10  Same IP identification field  
Synopsis  If a retransmitted packet is identical to the original packet then the same IP 
identification field MAY be used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause an application on the DUT side to issue a SEND call  
3 DUT Send the data segment  
4 TESTER Do not send ACK and all ow the retransmit timer on the  
        DUT side to expire  
5 DUT Send the data segment once more  
6 TESTER Verify that the IP identification fields in the two received  
        packets are the same  
Pass Criteria  3 DUT Send the data segment  
5 DUT Send  the data segment once more  
6 TESTER Verify that the IP identification fields in the two received  
packets are the same  
Test Iterations  
 
Notes  Derived from RFC 1122 s42215 p90 Retransmission Timeout RFC 793 Section 37 
page 41  
 
MAY  
 

  
    
  638 49616  Generation of Zero Window Probes  
TCPPROBINGWINDOWS 01 Indefinitely  closed window  
Synopsis  A TCP MAY keep its offered receive window closed indefinitely  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Send enough data segments to fill the receiver window of DUT  
        where the receiving application is not asked to extract any  
        data  
3 DUT Send ACKs  with the last window update shown to be zero  
4 TESTER Verify that even after a long time 2MSL the DUT remains  
        in the ESTABLISHED state  
Pass Criteria  3 DUT Send ACKs with the last window update shown to be zero  
4 TESTER Verify that even after a long time 2MSL the DUT remains  
in the ESTABLISHED state  
Test Iterations  
 
Notes  Derived from RFC 1122 s42217 p92 Probing Zero Windows RFC 793 Section 37 
page 42  
 
MAY  

  
    
  639 TCPPROBINGWINDOWS02  windows size  unsigned number  
Synopsis  The windows size MUST be treated as an unsigned number  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to SYN RCVD state  
2 TESTER Send ACK segment with a window size having the MSB set  
3 TESTER Cause the application on the DUT side to issue a SEND  
        request for a data segment  
4 DUT Send the data segment  
Pass Criteria  4 DUT Send the data segment  
Test Iterations  
 
Notes  Derived from RFC 1122 s4223 p83 Window Size RFC 793 Section 31  
 
MUST  

  
    
  640 TCPPROBINGWINDOWS03  Window shrinking  
Synopsis  A sending TCP MUST be robust against window shrinking which may cause the 
useable window  to become negative  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issu e one data SEND  
        request  
3 DUT Send the data segment  
4 TESTER Send the ACK  
5 TESTER Cause the application on the DUT side to issue two more SEND  
        calls for data segments  
6 DUT Send the data segments  
7 TESTER Send ACK for the first s egment with an updated window value  
        of zero  
8 TESTER Cause the application on the DUT side to issue a SEND request  
        for a data segment  
9 DUT Do not send the segment as the useable window  is negative  
Pass Criteria  3 DUT Send the da ta segment  
6 DUT Send the data segments  
9 DUT Do not send the segment as the useable window  is negative  
Test Iterations  
 
Notes  Derived from RFC 1122 s42216 p91 Managing the Window RFC 793 Section 37 page 
41 
 
MUST  

  
    
  641 TCPPROBINGWINDOWS04  Open connection probes ACK  
Synopsis  Even if the receive window is closed indefinitely the sending TCP MUST allow the 
connection to stay open as long as probes are acknowledged  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input  
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND  
        request for data segment  
3 DUT Send the data segment  
4 TESTE R Send ACK declaring a zero receive window  
5 TESTER Cause the application on the DUT side to issue another SEND  
        request for data segment  
6 DUT Send a zero window probe  
7 TESTER Acknowledge the probe maintaining zero window  
8 DUT Keep on se nding the zero window probes staying in the  
        ESTABLISHED state as long as the tester acknowledges each  
        of them at every reception  
Pass Criteria  3 DUT Send the data segment  
6 DUT Send a zero window probe  
8 DUT Keep on sending the zer o window probes staying in the  
ESTABLISHED state as long as the tester acknowledges each  
of them at every reception  
Test Iterations  
 
Notes  Derived from RFC 1122 s42217 p92 Probing Zero Windows RFC 793 Section 37 page 
42 
Control Protocol TCP  
MUST  

  
    
  642 TCPPROBINGWINDOWS05  First zero window probe  
Synopsis  TCP SHOULD send the first zero window probe when the receiver window size remains 
zero for the retransmission timeout period  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND  
        request for data segments  
3 DUT Send the data  segment  
4 TESTER Send ACK declaring a zero window  
5 TESTER Cause the application on the DUT side to issue another SEND  
        request for data segment  
6 DUT Send a zero window probe after some delay  
7 TESTER Verify that the probe has been sent by  the DUT after  
        waiting for at least the retransmission timeout  
Pass Criteria  3 DUT Send the data segment  
6 DUT Send a zero window probe after some delay  
7 TESTER Verify that the probe has been sent by the DUT after  
waiting for at least the r etransmission timeout  
Test Iterations  
 
Notes  Derived from RFC 1122 s42217 p92 Probing Zero Windows RFC 793 Section 37 page 
42 
 
SHOULD  

  
    
  643 TCPPROBINGWINDOWS06  Increase  interval zero window probes  
Synopsis  TCP SHOULD increase exponentially the interval between successive zero window 
probes  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND  
        request for data segments  
3 DUT Send the data segment  
4 TESTER Send ACK declaring a zero window  
5 TESTER Cause the application on the DUT side to  issue another SEND  
        request for data segment  
6 DUT Keep sending zero window probes after some delays  
7 TESTER Verify that the delays between successive probes increases  
        continually  
Pass Criteria  3 DUT Send the data segment  
6 DUT Ke ep sending zero window probes after some delays  
7 TESTER Verify that the delays between successive probes increases  
continually  
Test Iterations  
 
Notes  Derived from RFC 1122 s42217 p92 Probing Zero Windows RFC 793 Section 37 
page 42  
 
SHOULD  
 

  
    
  644 49617  Nagle Algorithm  
TCPNAGLE 01 Configurable  TTL value  
Synopsis  The TTL value used to send TCP segments MUST be configurable  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Change the TTL of DUT side application  
3 TESTER Cause the application on the DUT side to issue a SEND  
        request for data segment  
4 DUT Send the data segment  
5 TES TER Verify that the IP datagram received contains the specified  
        TTL value  
Pass Criteria  4 DUT Send the data segment  
5 TESTER Verify that the IP datagram received contains the specified  
TTL value  
Test Iterations  
 
Notes  Derived from RFC 1122 s42219 p93 Time to Live RFC 793 Section 39 page 52  
 
MUST  

  
    
  645 TCPNAGLE02 Buffer all the user data until ACK  
Synopsis  TCP SHOULD implement the Nagle Algorithm ie buffer all the user data regardless of 
PSH until the outstanding data has been acknowledged  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND  
        request for a segment  
3 DUT Send the data segment  
4 TESTER Do not acknowledge the data  
5 TES TER Cause the application to issue another SEND request with  
        the PSH bit if possible to specify  
6 DUT Do not send the data segment  
7 TESTER Acknowledge the previous data  
8 DUT Send the latter data segment  
Pass Criteria  3 DUT Send the da ta segment  
6 DUT Do not send the data segment  
8 DUT Send the latter data segment  
Test Iterations  
 
Notes  Derived from RFC 1122 s4234 p98 When to Send Data SHOULD  

  
    
  646 TCPNAGLE03  Buffer all the user data  until full sized segment  
Synopsis  TCP SHOULD implement the Nagle Algorithm ie it buffers all user data regardless of 
PSH bit until the TCP can send a full sized segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND call  
        for a data segment  
3 DUT Send the data segment  
4 TESTER Do not acknowledge the data  
5 TESTER Cause the application to issue another send request of small  
        size ssz with the PSH bit if possible to specify  
6 DUT Do not send the data segment  
7 TESTER Cause the application to issue one more SEND request with  
        the aggre gate data size equal to effective send MSS  
8 DUT Send the aggregate data segment  
Pass Criteria  3 DUT Send the data segment  
6 DUT Do not send the data segment  
8 DUT Send the aggregate data segment  
Test Iterations  
 
Notes  Derived from RFC 1122 s4234 p98 When to Send Data SHOULD  

  
    
  647 TCPNAGLE04  Disabling on application  
Synopsis  There MUST be a way for an application to disable the Nagle Algorithm on an 
individual connection  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a disabling  
        request of usage of Nagle Algorithm  
3 TESTE R Cause the application to issue a SEND request for a data  
        segment  
4 DUT Send the data segment  
5 TESTER Do not acknowledge the data  
6 TESTER Cause the application to issue another SEND request  
7 DUT Send the data segment  
Pass Criteria  4 DUT Send the data segment  
7 DUT Send the data segment  
Test Iterations  
 
Notes  Derived from RFC 1122 s4234 p98 When to Send Data MUST  
 

  
    
  648 49618  Use of the TCP PUSH Flag  
TCPFLAGSPUSH 01 No Push flag implemented  
Synopsis  If PUSH flags are not implemented then the sending TCP MUST NOT buffer data 
indefinitely  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to SEND a small segment  
        of size ssz  
3 DUT Send data within tmx time  
Pass Criteria  3 DUT Send data within tmx time  
Test Iterations  
 
Notes  Derived from RFC 1122 s4222 p83 Use of Push RFC 793 Section 28 MUST  

  
    
  649 TCPFLAGSPUSH02  Aggregate data  
Synopsis  TCP MAY aggregate data requested by an application for sending until accumulated 
data exceeds effective send MSS  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue 2 SEND calls  
3 DUT Do no t send data  
4 TESTER Cause the application to issue a SEND call so that the  
        accumulated data just exceeds the effective send MSS  
5 DUT Send a data segment with effective send MSS size  
Pass Criteria  3 DUT Do not send data  
5 DUT Send a data segment with effective send MSS size  
Test Iterations  
 
Notes  Derived from RFC 1122 s4222 p82 Use of Push RFC 793 Section 28 MAY  
 

  
    
  650 49619  Use of the Urgent Pointer  
TCPURGENTPTR 01 Pointing to the sequence number  
Synopsis  In the time of transmitting TCP MUST keep the urgent pointer pointing to the sequence 
number of the LAST octet in a sequence of urgent data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND request  
        for a data segment setting both the PUSH and URGENT flags  
3 DUT Send the data segment w ith URG flag bit set and the urgent  
        pointer value providing the offset of the last data byte  
Pass Criteria  3 DUT Send the data segment with URG flag bit set and the urgent  
pointer value providing the offset of the last data byte  
Test Iterations  
 
Notes  Derived from RFC 1122 s4224 p84 Urgent Pointer RFC 793 Section 31 MUST  

  
    
  651 TCPURGENTPTR02  Sequence of urgent data of any length  
Synopsis  TCP MUST support a sequence of urgent data of any length for transmission  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to full window operation in ESTABLISHED  
        state  
2 TESTER Cause the application on the DUT side to issue SEND request  
        for data of size much more than MSS say 10 times with  
        urgent flag set  
3 DUT Send data segments each of size MSS and containing the URG  
        flag bit set with urgent pointer pointing to the sequence  
        num ber of last byte of URG data indicated as an offset  
        from current SEQ  
Pass Criteria  3 DUT Send data segments each of size MSS and containing the URG  
flag bit set with urgent pointer pointing to the sequence  
number of last byte of URG data indic ated as an offset  
from current SEQ  
Test Iterations  
 
Notes  Derived from RFC 1122 s4224 p84 Urgent Pointer RFC 793 Section 31 MUST  

  
    
  652 TCPURGENTPTR03  Sequence number of the octet following the urgent data  
Synopsis  The urgent pointer points to the sequence number of the octet following the urgent 
data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to issue a SEND request  
        for a data segment setting both the PUSH and URGENT flags  
3 DUT Send the data segment with URG flag bit set and the urgent  
        pointer va lue providing the offset of the last1 data byte  
Pass Criteria  3 DUT Send the data segment with URG flag bit set and the urgent  
pointer value providing the offset of the last1 data byte  
Test Iterations  
 
Notes  Derived from RFC 793 Section 31 p17 MUST  

  
    
  653 TCPURGENTPTR04  Data following the urgent pointer  not same buffer  
Synopsis  The data following the urgent pointer non urgent data MUST NOT be delivered to the 
user in the same buffer with preceding urgent data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED state  
2 TESTER Send a data segment with URG flag set and urgent pointer  
        containing t he offset for the SEQ number of a byte that is  
        not the last byte of this data segment  
3 DUT Receive the data segment and issue a signal to the  
        application that urgent data has arrived  
4 TESTER Cause the application on the DUT side to is sue a RECEIVE  
        call with a data buffer having size equal to the size of  
        the incoming data segment  
5 DUT Return the RECEIVE call putting only the urgent data  
Pass Criteria  3 DUT Receive the data segment and issue a signal to the  
applica tion that urgent data has arrived  
5 DUT Return the RECEIVE call putting only the urgent data  
Test Iterations  
 
Notes  Derived from RFC 793 s37 p48 Interfaces  
 
MUST  

  
    
  654 TCPURGENTPTR05  Sequence of urgent data of any length  RFC 793  
Synopsis  TCP MUST support a sequence of urgent data of any length for transmission Note  This 
test supports Urgent Pointer Mechanism of RFC 793  
Prerequisites  Check section prerequisites  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to full window operation in ESTABLISHED  
        state  
2 TESTER Cause the application on the DUT side to issue SEND request  
        for data of size much more than MSS say 10 times with  
        urgent flag set  
3 DUT Send data segments each of size MSS and containing the URG  
        flag bit set with urgent pointer pointing to the sequence  
        number of the octet following the URG data indicated  
        as an offset from current SE Q 
Pass Criteria  3 DUT Send data segments each of size MSS and containing the URG  
flag bit set with urgent pointer pointing to the sequence  
number of the octet following the URG data indicated  
as an offset from current SEQ  
Test Iterations  
 
Notes  Derived from RFC 1122 s4224 p84 Urgent Pointer RFC 793 Section 31 MUST  
 
 

  
    
  655 49620  Slow Start and Congestion Avoidance  
TCPSLOWSTARTCONGESTION 01 Slow Start  initial value of cwnd  
Synopsis  IW the initial value of cwnd MUST be less than or equal to 2SM SS bytes and MUST 
NOT be more than 2 segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS set to SMALLMAXSEGSIZE  
        and window set to LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segments and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
Pass Criteria  4 DUT Send only cwnd ini segments  
Test Iterations  
 
Notes  Derived from RFC 2581 s 31 p 4 Slow Start and Congestion Avoidance MUST  

  
    
  656 TCPSLOWSTARTCONGESTION02  Slow Start  increments cwnd  
Synopsis  During slow start a TCP increments cwnd by at most SMSS bytes for each ACK received 
that acknowledges new data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DU T Send only cwnd ini segments  
5 TESTER Send ACK for the received segments  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and wait  
        for their ACK  
7 TESTER Do not send ACK  
8 DUT Retransmit data packet  
Pass Criteria  4 DUT Send  only cwnd ini segments  
6 DUT send 2cwnd ini segments and wait  
for their ACK  
8 DUT Retransmit data packet  
Test Iterations  
 
Notes  Derived from RFC 2581 s 31 p 4 Slow Start and Congestion Avoidance MUST  

  
    
  657 TCPSLOWSTARTCONGESTION 03 Congestion Avoidance  cwnd less than the 
receivers advertised window  
Synopsis  The TCP output routine never sends more than  the minimum of cwnd and the 
receivers advertised window  
Note cwnd is less than the receivers advertised window   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT  Set cwnd to cwnd ini segments and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segments  
6 DUT Set cwnd to 2cwnd ini send 2c wnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 DUT Set cwnd to 4cwnd ini send 4cwnd ini segments and  
        wait for their ACK  
9 TESTER Send ACK for all the received segments with window as  
        LARGESTWINDOWSIZE  
10 DUT Set cwnd to 8cwnd ini send 8cwnd ini segments and  
        wait for their ACK  
11 TESTER Do not send ACK  
12 DUT Retransmit data packet  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2 cwnd ini segments and  
wait for their ACK  
8 DUT send 4cwnd ini segments and  
wait for their ACK  
10 DUT send 8cwnd ini segments and  
wait for their ACK  
12 DUT Retransmit data packet  
Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance MUST  

  
    
  658 TCPSLOWSTARTCONGESTION04  Congestion Avoidance  never sends more than 
receivers advertised window  
Synopsis  The TCP output routine never sends more than  the minimum of cwnd and the 
receivers advertised window  
Note receivers advertised window is less than the cwnd   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LAR GEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2 cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 DUT Set cwnd to 4cwnd ini send 4cwnd ini segments and  
        wait for their ACK  
9 TESTER Send ACK for all the received seg ments with window as  
        4  SMALLMAXSEGSIZE  
10 DUT Set cwnd to 8cwnd ini send 4 segments and wait for  
        their ACK  
11 TESTER Do not send ACK  
12 DUT Retransmit data packet  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT  send 2cwnd ini segments and  
wait for their ACK  
8 DUT send 4cwnd ini segments and  
wait for their ACK  
10 DUT send 4 segments and wait for  
their ACK  
12 DUT Retransmit data packet  
Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance MUST  

  
    
  659 TCP SLOWSTARTCONGESTION05  Congestion Avoidance  one half of the current 
window size is saved in ssthresh  
Synopsis  When congestion occurs one half of the current window size is saved in ssthresh  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TEST ER Send ACK for all the received segments  
8 DUT Set cwnd to 4cwnd ini segment Send 4cwnd ini segments  
        and wait for their ACK  
9 TESTER Do not send any ACK for the received segments so that RTO  
        occurs on DUT This will indicate co ngestion in the network  
10 DUT Set ssthresh to cwnd2 2cwnd ini and cwnd to LW  
11 DUT Retransmit cwnd segment  
12 TESTER Send ACK for the retransmitted segment  
13 DUT Send only cwnd ini segments  
14 TESTER Send ACK for the all the rec eived segments  
15 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
16 TESTER Send ACK for all the received segments  
17 DUT Start congestion avoidance Send 2cwnd ini  1 segments  
        because the DUT is performing Congestion Avoidance and not  
        4cwnd ini segments as would be the case with Slow Start  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments and  
wait for their ACK  
8 DUT Send 4cwnd ini segments  
and wait for their ACK  
11 DUT Retransmit cwnd segment  
13 DUT Send only cwnd ini segments  
15 DUT send 2cwnd ini segments and  
wait for their ACK  

  
    
  660 17 DUT Start congestion avoidance Send 2cwnd ini  1 segments  
because the DUT is performing  Congestion Avoidance and not  
4cwnd ini segments as would be the case with Slow Start  
Test Iterations  
 
Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance MUST  

  
    
  661 TCPSLOWSTARTCONGESTION06  Congestion Avoidance  one half of the current 
window size  but at least 2 segments is saved in ssthresh  
Synopsis  When congestion occurs one half of the current window size but at least 2 segments 
is saved in ssthresh  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segment  
5 TESTER Send ACK for the received segment  
6 TESTER Repeat  last two steps till DUT send 2 segments  
7 TESTER Do not send any ACK for the received segments so that RTO 
        occurs on DUT This will indicate congestion in the network  
8 DUT Set ssthresh to 2 and cwnd to LW  
9 DUT Send only cwnd segment  
10 TESTER Send ACK for the received segment  
11 TESTER Repeat  last two steps till DUT send 2 segments and  wait  
        for their ACK  
12 TESTER Send ACK for all the received segments  
13 DUT Start congestion avoidance Send 3 segments because the DUT  
        is performing Congestion Avoidance and not 4 segments as  
        would be the case with Slow Start  
Pass Criteria  4 DUT Send only cwnd ini segment  
9 DUT Send only cwnd segment  
13 DUT Start congestion avoidance Send 3 segments because the DUT  
is performing Congestion Avoidance and not 4 segments as  
would be the case with Slow Start  
Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance MUST  

  
    
  662 TCPSLOWSTARTCONGESTION07  Congestion Avoidance  cwnd settings upon a 
timeout  
Synopsis  Upon a timeout cwnd MUST be set to no more than the loss window LW which equals 
1 full sized segment regar dless of the value of IW  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 DUT Set cwnd to 4cwnd ini segment Send 4cwnd ini segments  
        and wait for their ACK  
9 TESTER Do n ot send any ACK for the received segments so that RTO  
        occurs on DUT This will indicate congestion in the network  
10 DUT Set ssthresh to 2 and cwnd to LW  
11 DUT Send only cwnd segment  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments and  wait for their ACK  
8 DUT Send 4cwnd ini segments  and wait for their ACK  
11 DUT Send only cwnd segment  
Test Iterations  
 
Notes  Derived from RFC 2581 s 31 p 5 Slow Start and Congestion Avoidance MUST  

  
    
  663 TCPSLOWSTARTCONGESTION08  Congestion Avoidance  slow start continues 
until TCP is halfway  
Synopsis  Slow start continues until TCP is halfway to where it was when congestion occurred  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TES TER Cause the DUT side application to send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK  for all the received segments  
8 DUT Set cwnd to 4cwnd ini segment Send 4cwnd ini segments  
        and wait for their ACK  
9 TESTER Do not send any ACK for the received segments so that RTO  
        occurs on DUT This will indicate congestion in the network  
10 DUT Set ssthresh to cwnd22cwnd ini and cwnd to LW  
11 DUT Send only cwnd segments  
12 TESTER Send ACK for the received segment  
13 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
14 TE STER Send ACK for all the received segments  
15 DUT Start congestion avoidance by sending 2cwnd ini1  
        segments but not 4cwnd ini 
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments and  
wait for their ACK  
8 DUT Send 4cwnd ini segments  
and wait for their ACK  
11 DUT Send only cwnd segments  
13 DUT send 2cwnd ini segments and  
wait for their ACK  
15 DUT Start congestion avoidance by sending 2cwnd ini1  
segments but not 4cwnd ini 
Test Iterat ions 
 

  
    
  664 Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance MUST  
TCPSLOWSTARTCONGESTION 09 Congestion Avoidance  Formula  
Synopsis  Formula commonly used to update cwnd during congestion avoidance is cwnd  
SMSSSMSScwnd executed on every incoming non duplicate ACK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send DATAP ACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 TESTER Repeat t he last two steps till DUT sends 4 segments  
9 DUT Set cwnd to 4 segment Send 4 segments and wait for  
        their ACK  
10 TESTER Do not send any ACK for the received segments so that RTO  
        occurs on DUT This will indicate congestion in the net work  
11 DUT Set ssthresh  cwnd22 and cwnd to LW  
12 DUT Send only cwnd segment  
13 TESTER Send ACK for the received segment  
14 TESTER Repeat  last step till DUT sends 2 segments  
15 DUT Set cwnd to 2 2SMALLMAXSEGSIZE in bytes send 2  
        segments and wait for their ACK  
16 TESTER Send ACK for all the received segments  
17 DUT Start congestion avoidance Calculate cwnd in bytes as  
        cwnd   segsize  segsize  cwnd   noofACKreceived  
        ie 2SMALLMAXSEGSIZ E  SMALLMAXSEGSIZE  
        SMALLMAXSEGSIZE2SMALLMAXSEGSIZE2   
        2SMALLMAXSEGSIZESMALLMAXSEGSIZE bytes 3 segments  
18 DUT Send 3 segments  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments and  
wait for their ACK  

  
    
  665 9 DUT Send 4 segments and wait for  
their ACK  
12 DUT Send only cwnd segment  
15 DUT send 2  
segments and wait for their ACK  
18 DUT Send 3 segments  
Test Iterations  
 
Notes  Derived from RFC 2581 s 31 p 4 Slow Start and Congestion Avoidance MUST  

  
    
  666 TCPSLOWSTARTCONGESTION10  Congestion Avoidance  increase in cwnd  
Synopsis  The increase in cwnd should be at most one segment each round trip time regardless 
how many ACKs are received in that RTT  
Prerequisites  Check  section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 TESTER Repeat the last two steps till DUT sends 4 segments  
9 DUT Set cwnd to 4 segment Send 4 segments and wait for  
        their ACK  
10 TESTER Do not send any ACK for the  received segments so that RTO  
        occurs on DUT This will indicate congestion in the network  
11 DUT Set ssthresh  cwnd22 and cwnd to LW  
12 DUT Send only cwnd segment  
13 TESTER Send ACK for the received segment  
14 TESTER Repeat  last step till DUT sends 2 segments  
15 TESTER Send ACK for all the received segments  
16 DUT Start congestion avoidance send 3 segments  
17 TESTER Send ACK for all the received segments  
18 DUT Send 4 segments  
19 TESTER Send a single ACK for all the rec eived segments  
20 DUT Send 5 segments  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments and  
wait for their ACK  
9 DUT Send 4 segments and wait for  
their ACK  
12 DUT Send only cwnd segment  
16 DUT Start congestion avoidance send 3 segments  
18 DUT Send 4 segments  

  
    
  667 20 DUT Send 5 segments  
Test Iterations  
 
Notes  Derived from RFC 2001 s2 p3 Congestion Avoidance SHOULD  
 

  
    
  668 49621  Fast RetransmitFast Recovery  
TCPFASTRETRANSMIT 01 After receiving 3 duplicate ACKs  
Synopsis  After receiving 3 duplicate ACKs TCP performs a retransmission of missing segment 
without waiting for retransmission timer to expire  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section ge neral Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE with delay between sending  
        packets so that the calculated RTO on DUT is large  
2 DUT Set cwnd to  cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for all the received segments  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segme nts and  
        wait for their ACK  
7 TESTER Send ACK for all the received segments  
8 DUT Set cwnd to 4cwnd ini send 4cwnd ini segments and  
        wait for their ACK  
9 TESTER On receiving every packet send the last sent ACK in response  
10 DUT  On receiving the 3rd duplicate ACK retransmit the ACKd  
        segment  
11 TESTER Check that DUT retransmits the correct packet  
        without waiting for retransmission timer to expire  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send  2cwnd ini segments  
10 DUT Retransmit the segment indicated by the last received ACK  
12 DUT Send 4 segments  
Test Iterations  
 
Notes  Derived from RFC 2581 s32 p6 Fast RetransmitFast Recovery MUST  

  
    
  669 TCPFASTRETRANSMIT02  When next ACK arrives  
Synopsis  When next ACK arrives that acknowledges new data set cwnd to ssthresh the value set 
in step 1 This is termed deflating the window  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section genera l Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS SMALLMAXSEGSIZE  
        and window LARGEWINDOWSIZE with delay between sending  
        packets so that the calculated RTO on DUT is large  
2 DUT Set cwnd to  cwnd ini segment and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application send DATAPACKETLARGE  
4 DUT Send only cwnd ini segments  
5 TESTER Send ACK for the received segments  
6 DUT Set cwnd to 2cwnd ini and send 2cwnd ini segmen ts 
7 TESTER Send ACK for the received segments  
8 TESTER Repe at the last two steps till DUT sends 8 segments  
9 TESTER Send the last sent ACK 3 times  
10 DUT On receivng the 3 duplicate ACKs  
        set ssthresh to one half the current cwnd  
        Retransmit the segment indicated by the last received ACK  
        and set cwnd to ssthresh plus 3 in segments  
11 TESTER On receiving the retransmitted segment send an ACK for  
        all the segments received so far causing the DUT to set  
        cwnd to the value of ssthresh 4  
12 DUT Send 4 segments  
13 TESTER Send ACK for the received segments  
14 DUT Send 5 segments  
Pass Criteria  4 DUT Send only cwnd ini segments  
6 DUT send 2cwnd ini segments  
10 DUT Retransmit the segment indicated by the last received ACK  
12 DUT Send 4 segments  
14 DUT Send 5 segments  
Test Iterations  
 
Notes  Derived from RFC 2581 s32 p7 Fast RetransmitFast Recovery MUST  
 

  
    
  670 49622  Host Specification  and MSS  
TCPHOSTSPEC 01 Host receiving Datagram Too Big message  
Synopsis  Host receiving Datagram Too Big message MUST reduce its estimate of MTU for relevant 
path based on value of Next Hop MTU field in the message  
Prerequisites  Check section prerequisites  
Test setup  Topolog y 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to set DF  bit 
6 TESTER Cause the application on the DUT side to send large data  
7 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
8 TESTER Send an ICMP packe t with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
9 DUT Send packet containing data  
10 TESTER Check data length does not exceed SMALLPATHMTU  40 if  
         DF bit in the IP header is set IPv4  
                                                             OR if  
         Fragmentation Header is present in the IP header IPv6  
Pass Criteria  3 DUT Send a SYNACK  
7 DUT Send data of size DUT MSS wit h 
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
9 DUT Send packet containing data  

  
    
  671 10 TESTER Check data length does not exceed SMALLPATHMTU  40 if  
 DF bit in the IP header is set IPv4  
OR if  
 Fragmentation Header is prese nt in the IP header IPv6  
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p4 Host specification  MUST  
TCPHOSTSPEC02 After receiving Datagram Too Big message  
Synopsis  After receiving Datagram Too Big message host may reduce the size of datagrams it is 
sending along the path or cease setting DF bit  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to set DF bit  
6 TESTER Cause the application on the DUT side t o send large data  
7 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
          OR with  
         Fragmentation Header present IPv6  
8 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
9 DUT Send packet containing data  
10 TESTER Check whether  
A DF bit is not set IPv4  

  
    
  672 OR  
Fragmentation Header is not present IPv6  
OR  
B length does not exceed SMALLPATHMTU  40 if  
           DF bit is set IPv4  
OR 
           Fragmentation Header is present IPv6  
Pass Criteria  3 DUT Send a SYNACK  
7 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
9 DUT Send pack et containing data  
10 TESTER Check whether  
A DF bit is not set IPv4  
OR  
Fragmentation Header is not present IPv6  
OR  
B length does not exceed SMALLPATHMTU  40 if  
           DF bit is set IPv4  
OR 
           Fragmentation Header is present IPv6  
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p4 Host specification  MUST  

  
    
  673 TCPHOSTSPEC03 Attempt to detect increase   after a Datagram Too Big message   
Synopsis  Attempt to detect increase MUST NOT be done less than 5 minutes after a Datagram 
Too Big message has been received for the given destination  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 Cause DUT to move on to ESTABLISHED state  
2 TESTER Cause the application on the DUT side to send large data  
3 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
4 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALL PATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
5 DUT Send data packet of size less t han SMALLPATHMTU  40 
6 TESTER Send ACK for the received data  
7 DUT Continue sending data of size SMALLPATHMTU  40 
8 TESTER Send ACK for the received data and observe for 5 minutes  
        that DUT never sends data more than SMALLPATHMTU   40 
        bytes  
Pass Criteria  3 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
5 DUT Send data packet of size less than SMALLPATHMTU  40 
7 DUT Continue sending dat a of size SMALLPATHMTU  40 
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p4 Host specification  MUST  

  
    
  674 TCPHOSTSPEC04  Attempt to detect increase  after a previous successful 
attempted increase   
Synopsis  Attempt to detect increase MUST NOT be done less than 1 minute after a previous 
successful attempted increase  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHM TU 
8 DUT Send packet containing data of size SMALLPATHMTU  40 
9 TESTER Send ACK for the received data  
10 DUT Continue sending data of size SMALLPATHMTU  40 
11 TESTER Continue sending ack for the given data  
12 DUT Send data larger than  SMALLPATHMTU  40 
13 TESTER Send ACK for the received data  
14 DUT Increase its PMTU estimate and continue sending data of  
        size same as the size of last data packet sent  
15 TESTER Continue sending ACK for received data and check that within  
        one minute DUT does not send data larger than the size of  
        the last data packet sent  
Pass Criteria  3 DUT Send a SYNACK  

  
    
  675 6 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
8 DUT S end packet containing data of size SMALLPATHMTU  40 
10 DUT Continue sending data of size SMALLPATHMTU  40 
12 DUT Send data larger than SMALLPATHMTU  40 
14 DUT Increase its PMTU estimate and continue sending data of  
size same as the siz e of last data packet sent  
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p4 Host specification  MUST  
TCPHOSTSPEC05 Dealing with Datagram Too Big messages  
Synopsis  Hosts MUST be able to deal with Datagram Too Big messages that do not include the 
next hop MTU  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause  DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to set DF bit  
6 TESTER Cause the application on the DUT side to send large data  
7 DUT Send data of size  DUT MSS with  
         DF bit set IPv4  
          OR with  
         Fragmentation Header present IPv6  
8 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation nee ded and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  

  
    
  676          type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field  set to SMALLPATHMTU  
9 DUT Send packet containing data  
10 TESTER Check if data is smaller than the data last received  
        else check that DF bit is not set IPv4  
        OR Fragmentation Header is not present IPv6  
Pass Criteria  3 DUT Send a SYNACK  
7 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
9 DUT Send packet containing data  
10 TESTER Check if data is smaller than the data last received  
else check that DF bit is not set IP v4 
OR Fragmentation Header is not present IPv6  
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p4 Host specification  MUST  

  
    
  677 TCPHOSTSPEC06 Never reduce Path MTU below 68 octets  
Synopsis  Host MUST never reduce its estimate of the Path MTU below 68 octets  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER  Send an ACK  
5 TESTER Cause the application on the DUT side to set DF bit  
6 TESTER Cause the application on the DUT side to send large data  
7 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
          OR with  
         Fragmentation H eader present IPv6  
8 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to below 68  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         NextHop MTU field set to below 68  
9 DUT Send packet containing data  
10 TESTER Check data length is  not smaller than 68  40 
Pass Criteria  3 DUT Send a SYNACK  
7 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
9 DUT Send packet containing data  
10 TESTER Check data length is not smaller than 68  40 
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p5 Host specification  MUST  

  
    
  678 TCPHOSTSPEC07 No increase of estimate of the Path MTU  
Synopsis  Host MUST not increase its estimate of the Path MTU in response to the contents of a 
Datagram Too Big message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data with DF bit set  
7 DUT Send data with  
         DF b it set IPv4  
          OR with  
         Fragmentation Header present IPv6  
8 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to a value larger than TESTER MSS  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         NextHop MTU field set  to a value larger than TESTER MSS  
9 DUT Send packet containing data  
10 TESTER Check data length does not exceed the size of data received  
        before this packet  
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data with DF bit set  
7 DUT Send data with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
9 DUT Send packet containing data  
10 TESTER Check data length does not exceed the size of data received  

  
    
  679 before this packet  
Test Iterations  
 
Notes  Derived from RFC 1191 s3 p5 Host specification  MUST  
TCPHOSTSPEC08 Datagrams larger than 40 octets plus MSS  
Synopsis  Host must not send datagrams larger than 40 octets plus the Maximum Segment Size 
MSS sent by its peer  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause the application on the DUT side to issue an active  
        OPEN call  
2 DUT Send a SYN  
3 TESTER Send a SYNACK with MSS smaller than DUT MSS  
4 DUT Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data with  
         DF bit set IPv4  
          OR with  
         Fragmentation Header present IPv6  
7 TESTER Check data length is not larger than TES TER MSS  
Pass Criteria  2 DUT Send a SYN  
4 DUT Send an ACK  
6 DUT Send data with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
7 TESTER Check data length is not larger than TESTER MSS  
Test Iterations  
 
Notes  Derived from RFC 1191 s31 p5 TCP MSS Option  MUST  

  
    
  680 TCPHOSTSPEC 09 Host receiving a Datagram Too Big message from an unmodified 
router   PMTU  
Synopsis  Host receiving a Datagram Too Big message from an unmodified router assumes that the 
PMTU is minimum of its currently assumed PMTU and 576  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
          OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to 0  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to 0  
8 DUT Send packet containing data  
9 TESTER Check data length is less than or equal to 576 40 
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
8 DUT Send packet containing data  
9 TESTER Check data length is less than or equal to 576 40 
Test Iterations  
 

  
    
  681 Notes  Derived fr om RFC 1191 s5 p7 Host processing of old style messages  MUST  

  
    
  682 TCPHOSTSPEC10 Host receiving a Datagram Too Big message from an unmodified 
router   stop DF bit  
Synopsis  Host receiving a Datagram Too Big message from an unmodified router stops setting 
the DF bit in datagrams sent on that path  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data of size DUT MSS with  
         DF bit s et IPv4  
                               OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF b it set  
         Next Hop MTU field set to 0  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to 0  
8 DUT Send packet containing data  
9 TESTER Check that DF bit is not set IPv4  
           OR that Fragmentation Header is not present IPv6  
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation H eader present IPv6  
8 DUT Send packet containing data  
9 TESTER Check that DF bit is not set IPv4  
OR that Fragmentation Header is not present IPv6  

  
    
  683 Test Iterations  
 
Notes  Derived from RFC 1191 s5 p7 Host processing of old style messages  MAY  
 

  
    
  684 49623  TCP Layer Actions  
TCPLAYERACTIONS 01 Increase in the PMTU estimate  
Synopsis  An upper layer MUST not retransmit datagrams in response to an increase in the PMTU 
estimate  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Param eters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRA MTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU 8 DUT Send packet containing 
data of size SMALLPATHMTU  40 
9 TESTER Send ACK for the received data  
10 DUT Continue sending data of size SMALLPATHMTU  40 
11 TESTER Continue sendin g ACK for the given data  
12 DUT Send data larger than SMALLPATHMTU  40 
13 TESTER Send ACK for the received data  
14 DUT Increase its PMTU estimate and continue sending data of  
        size same as the size of last data packet sent  
15 TESTER Che ck the sequence number of last two packet received are  
        not same  
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data of size DUT MSS with  

  
    
  685  DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
8 DUT Send packet containing data of size SMALLPATHMTU  40 
10 DUT Continue sending data of size SMALLPATHMTU  40 
12 DUT Send data larger than SMALLPATHMTU  40 
14 DUT Increase its PMTU estimate and continue sending data of  
size same as the size of last data packet sent  
15 TESTER Check the sequence number of last two packet received are  
not same  
Test Iterations  
 
Notes  Derived from RFC 1191 s63 p12 Purging stale PMTU information  MUST  

  
    
  686 TCPLAYERACTIONS02 Datagram Too Big message  treat it as dropped segment  
Synopsis  On receiving Datagram Too Big message treat it as dropped segment and wait till 
retransmission timer expires and retransmit segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to ESTABLISHED  state  
2 TESTER Cause the application on the DUT side to send large data  
3 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
4 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALL PATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
5 DUT Wait till retransmission timer expires and retransmit packet  
        containing data  
6 TESTER Check the sequence number of last two received packet are  
        same  
Pass Criteria   
3 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv 6 
5 DUT Wait till retransmission timer expires and retransmit packet  
containing data  
6 TESTER Check the sequence number of last two received packet are  
same  
Test Iterations  
 

  
    
  687 Notes  Derived from RFC 1191 s64 p13 TCP layer actions  MUST  

  
    
  688 TCPLAYERACTIONS 03 Datagram size used in the retransmission  
Synopsis  The Datagram size used in the retransmission should of course be no larger than the 
new PMTU  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the application on the DUT side to send large data  
6 DUT  Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
8 DUT Retransmit packet containing data  
9 TESTER Check retransmitted data length does not exceed  
        SMALLPATHMTU  40 OR  
         DF bit is uns et IPv4  
                               OR without  
         Fragmentation Header present IPv6  
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
8 DUT Retr ansmit packet containing data  
9 TESTER Check retransmitted data length does not exceed  

  
    
  689 SMALLPATHMTU  40 OR  
 DF bit is unset IPv4  
OR without  
 Fragmentation Header present IPv6  
Test Iterations  
 
Notes  Derived from RFC 1191 s64 p13 TCP layer a ctions  MUST  
TCPLAYERACTIONS04 Retransmission caused  by a Datagram Too Big message   
slow start mechanism  
Synopsis  Retransmission caused by a Datagram Too Big message triggers the slow start 
mechanismie only one segment should be retransmitted  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with SMALLMAXSEGSIZE and  
        LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send large data  
4 DUT Send cwnd ini segment and wait for its ACK  
5 TESTER Send ACK for the received segment  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini seg ments  
        and wait for its ACKs  
7 TESTER Send an ICMP packet with code field set to DATAGRAMTOOBIG  
        and Next Hop MTU field set to SMALLPATHMTU  
8 DUT Retransmit packet containing data and wait for its ACK  
9 TESTER Check whether DUT se nd only one packet  
Pass Criteria  2 DUT Set cwnd to cwnd ini and ssthresh to 65535 bytes  
4 DUT Send cwnd ini segment and wait for its ACK  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments  
and wait for its ACKs  
8 DUT Retransmit packet containing data and wait for its ACK  
9 TESTER Check whether DUT send only one packet  

  
    
  690 Test Iterations  
 
Notes  Derived from RFC 1191 s64 p14 TCP layer actions  MUST  
TCPLAYERACTIONS05 Retransmission caused  by a Datagram Too Big message   
no change o f congestion window  
Synopsis  Retransmission caused by a Datagram Too Big message should not change the 
congestion window It should however trigger the slow start mechanism  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with SMALLMAXSEGSIZE and  
        LARGEWINDOWSIZE  
2 DUT Set cwnd to cwnd ini segments and ssthresh to 65535 bytes  
3 TESTER Cause the DUT side application to send large data  
4 DUT Send cwnd ini segments and wait for their ACK  
5 TESTER Send ACK for the received segments  
6 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and wait  
        for their ACKs  
7 TESTER Send ACKs for al l the received segments  
8 TESTER Repeat the last two steps till DUT sets cwnd to 4 segments  
9 DUT Set cwnd to 4 segments Send 4 segments  
10 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
11 DUT Retransmit data segment and trigger slow start mechanism  
12 TESTER Send ACKs for all the received segments  
13 TESTER Verify that DUT follows Pat h MTU Discovery by not changing  
        the congestion window during slow start  
Pass Criteria  2 DUT Set cwnd to cwnd ini segments and ssthresh to 65535 bytes  
4 DUT Send cwnd ini segments and wait for their ACK  

  
    
  691 6 DUT Set cwnd to 2cwnd ini se nd 2cwnd ini segments and wait  
for their ACKs  
9 DUT Set cwnd to 4 segments Send 4 segments  
11 DUT Retransmit data segment and trigger slow start mechanism  
13 TESTER Verify that DUT follows Path MTU Discovery by not changing  
the congestion window  during slow start  
Test Iterations  
 
Notes  Derived from RFC 1191 s64 p14 TCP layer actions  SHOULD  

  
    
  692 TCPLAYERACTIONS06 Maximum window size  
Synopsis  Maximum window size should be set to greatest multiple of segment size PMTU  40 
that is less than or equal to senders buffer space size  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Inp ut Parameters  
Test Procedure  1 DUT CONFIGURE Set TCP buffer size of the DUT to 4K  
2 TESTER Take DUT to ESTABLISHED state with SMALLMAXSEGSIZE and  
        LARGEWINDOWSIZE  
3 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
4 TESTER  Retrieve DUT buffer size and make the DUT side application  
        send large data  
5 DUT Send cwnd ini segment and wait for its ACK  
6 TESTER Send ACK for the received segment  
7 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and wait for  their ACKs  
8 TESTER Send an ICMP packet with IPv4  
         type set to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMP v6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         NextHop MTU field set to SMALLPATHMTU  
9 DUT Send packet containing data and wait for its ACK  
10 T ESTER Retrieve window size that should be greatest multiple of  
        PMTU  40 and less than or equal to DUT buffer size  
Pass Criteria  3 DUT Set cwnd to cwnd ini segment and ssthresh to 65535 bytes  
5 DUT Send cwnd ini segment and wait for it s ACK  
7 DUT Set cwnd to 2cwnd ini send 2cwnd ini segments and wait for their ACKs  
9 DUT Send packet containing data and wait for its ACK  
10 TESTER Retrieve window size that should be greatest multiple of  
        PMTU  40 and less than or eq ual to DUT buffer size  
Test Iterations  
 
Notes  Derived from RFC 1191 s64 p14 TCP layer actions  SHOULD  

  
    
  693 TCPLAYERACTIONS07 PMTU Discovery  
Synopsis  PMTU Discovery does not affect the value sent in the TCP MSS option  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Cause DUT to move on to LISTEN state  
2 TESTER Send a SYN  
3 DUT Send a SYNACK  
4 TESTER Send an ACK  
5 TESTER Cause the appl ication on the DUT side to send large data  
6 DUT Send data of size DUT MSS with  
         DF bit set IPv4  
                               OR with  
         Fragmentation Header present IPv6  
7 TESTER Send an ICMP packet with IPv4  
         type s et to 3 Destination Unreachable message  
         code field set to 4 Fragmentation needed and DF bit set  
         Next Hop MTU field set to SMALLPATHMTU  
           OR 
     TESTER Send an ICMPv6 packet with IPv6  
         type set to 2 Packet too big message  
         code field set to 0 DATAGRAMTOOBIG  
         Next Hop MTU field set to SMALLPATHMTU  
8 DUT Send packet containing data  
9 TESTER Check Options field of TCP header if it contains MSS then  
        value should be equal to MSS value sent with the initial SYN  
Pass Criteria  3 DUT Send a SYNACK  
6 DUT Send data of size DUT MSS with  
 DF bit set IPv4  
OR with  
 Fragmentation Header present IPv6  
8 DUT Send packet containing data  
9 TEST ER Check Options field of TCP header if it contains MSS then  
value should be equal to MSS value sent with the initial SYN  
Test Iterations  
 

  
    
  694 Notes  Derived from RFC 1191 s64 p14 TCP layer actions  MUST  
 

  
    
  695 49624  Improved Window Algorithms  RFC  813   CONGESTI ON CONTROL  
IN IPTCP  INTERNETWORKS  RFC  896  
TCPIMPROVEDWINDOWING 01 Postponing ack  
Synopsis  So if a segment arrives postpone sending an acknowledgement if both of the following 
conditions hold First the push bit is not set in the segment since it is a reasonable 
assumption that there is more data coming in a subsequent segment Second there  is no 
revised window information to be sent back The text suggested that when setting a timer 
to postpone the sending of an acknowledgement a fixed interval of 200 to 300 milliseconds 
would work properly in practice Note DUT is fine if it changes its window size evenif ack 
does not come within the timing range  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER Cause the DUT to move on to ESTABLISHED  state at a wnp  
2 TESTER Send a data segment with PUSH bit unset  
3 DUT Send ACK  
4 TESTER Verify that the Ack has been received  
        within 200 to 300 milliseconds  
Pass Criteria  3 DUT Send ACK  
4 TESTER Verify that the Ack has been received  
within 200 to 300 milliseconds  
Test Iterations  
 
Notes  Derived from RFC 813 s5 p11 Improved Acknowledgement Algorithms  MUST  

  
    
  696 TCPIMPROVEDWINDOWING02 Avoiding SWS   less 25  
Synopsis  Simple experiments suggest that the exact value of the ratio is not very important but 
that a value of about 25 percent is sufficient to avoid SWS and achieve reasonable 
throughput even for machines with a small offered window  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window 2  PARAM MSS  
2 TESTER Cause the DUT side application to send 4  PARAM MSS  
3 DUT Send data segments  
4 TESTER Send ACK for the 1st received segment with window size PARAM MSS  
PARAM MSS  3  
5 DUT  Usable window is smaller than 25 DUT does not send a new data segment  
Pass Criteria  3 DUT Send data segments  
5 DUT  Usable window is smaller than 25 DUT does not send a new data segment  
Test Iterations  
 
Notes  Derived from RFC 813 s 4 p 8 Improved Window Algorithms  SHOULD  

  
    
  697 TCPIMPROVEDWINDOWING03  Avoiding SWS   more 25  
Synopsis  Simple experiments suggest that the exact value of the ratio is not very important but that 
a value of about 25 percent is sufficient to avoid SWS and achieve reasonable throughput 
even for machines with a small offered window Note Value more than 25 percent will 
release new data from dut  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window 2  PARAM MSS  
2 TESTER Cause the DUT side application to send 4  PARAM MSS  
3 DUT Send data segments  
4 TESTER Send ACK for the 1st received segment with window size 15  PARAM MSS  
5 DUT Calculate usable window and itll be  more than 25 of offered window  
        Itll send 1 new data segment  
Pass Criteria  3 DUT Send data segments  
5 DUT Calculate usable window and itll be more than 25 of offered window  
Itll send 1 new data segment  
Test Iterations  
 
Notes  Derived from RFC 813 s 4 p 8 Improved Window Algorithms  SHOULD  

  
    
  698 TCPIMPROVEDWINDOWING04 Attempt to hold off sendin g  equal to MSS  
Synopsis  An additional enhancement which might help throughput would be to attempt to hold 
off sending until one can send a maxi mum size segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window 2   PARAM MSS  
2 TESTER Cause the DUT side application to send 3  PARAM MSS  
3 DUT Send data segments  
4 TESTER Send ACK for the 1st received segment with window size of 2  PARAM 
MSS  
5 DUT Send a new data segment as the usable window is bigger than  the Maximum 
Segment Size  
Pass Criteria  3 DUT Send data segments  
5 DUT Send a new data segment as the usable window is bigger than the Maximum 
Segment Size  
Test Iterations  
 
Notes  Derived from RFC 813 s 4 p 8 Improved Window Algorithms  MAY  

  
    
  699 TCPIMP ROVEDWINDOWING05  Attempt to hold off sendin g  less than MSS  
Synopsis  An additional enhancement which might help throughput would be to attempt to hold 
off sending until one can send a maximum size segment  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window 2  PARAM MSS  
2 TESTER Cause the DUT side application to send 3  PARA MMSS bytes of data  
3 DUT Send data segments  
4 TESTER Send ACK for the 1st received segment with window size 2  PARAM MSS 
2  
5 DUT Does not send a new data segment as the usable window is smaller than the 
Maximum Segment Size  
        Itll not s end a new data segment  
Pass Criteria  3 DUT Send data segments  
5 DUT Does not send a new data segment as the usable window is smaller than the 
Maximum Segment Size  
        Itll not send a new data segment  
Test Iterations  
 
Notes  Derived from RFC 813 s 4 p 8 Improved Window Algorithms  MAY  

  
    
  700 TCPIMPROVEDWINDOWING08 R efraining from send ing  more than MSS  
Synopsis  If it refrains from sending now it will typically send the data later when an incoming packet 
arrives and changes the state of the system The state changes in one of two ways the 
incoming packet acknowledges old data the distant host has received or an nounces the 
availability of buffer space in the distant host for new data Note This case is for 
announcement of availability of buffer space  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window 2  PARAM MSS  
2 TESTER Cause the DUT side application to send 2  PARAM MSS  15  
3 DUT Send data segments  
4 TESTER Send ACK for the all received segment with window size 0  
5 DUT Itll not send any new data segments  
Pass Criteria  3 DUT Send data segments  
5 DUT Itll not send any new data segments  
Test Iterations  
 
Notes  Derived from RFC 896 Section The solution to the small packet problem  MUST  

  
    
  701 TCPIMPROVEDWINDOWING09 R efraining from send ing  less than MSS  
Synopsis  If it refrains from sending now it will typically send the data later when an incoming packet 
arrives and changes the state of the system The state changes in one of two ways the 
incoming packet acknowledges old data the distant host has received or announces the 
availability of buffer space in the distant host for new data  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Take DUT to ESTABLISHED state with MSS PARAM MSS  
        and window PARAM MSS  
2 TESTER Cause the DUT side application to send PARAM MSS  10 
3 DUT Send 1 data segm ents with push  
4 TESTER Cause the DUT side application to send PARAM MSS  10 
5 DUT Itll not send any new data segment  
6 TESTER Send ACK for the received segment  
7 DUT Itll send a new data segment  
Pass Criteria  3 DUT Send 1 data segments wi th push  
5 DUT Itll not send any new data segment  
7 DUT Itll send a new data segment  
Test Iterations  
 
Notes  Derived from RFC 896 Section The solution to the small packet problem  SHOULD  
 

  
    
  702 49625  Connection Establishment  
TCPCONNECTIONESTAB 01 To verify that the D UT accepts connections from 
several remote sockets with one passive socket  
Synopsis  Ensure that  
  when DUIT is requested to open a TCP passive socket  
  and receive multiple Tcp Segments from 3 different ports  
    containing SYN flag  
      indicating a value of 1  
  then DUT opens a TCP passive socket  
  and sends a TCP Segment to each sending port  
    containing SYN and ACK flags  
      indicating a value of 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an UpperTester OpenTCPSocket  passive   on a PORT1   
2 TESTER Send 3 TCP Segments with SYN set to 1 from 3 different ports  
3 DUT Opens a TCP passive socket and sends 3  TCP segments on each sending port 
with SYN and ACK set to 1  
Pass Criteria  DUT opens a TCP passive socket  
  and sends a TCP Segment to each sending port  
    containing SYN and ACK flags  
      indicating a value of 1  
Test Iterations  
 
Notes  Derived from RFC 793 chapter 15 page 5  

  
    
  703 TCPCONNECT IONESTAB02 To verify that the D UT opens multiple Passive sockets 
and connects them to remote socket  
Synopsis  Ensure that  
  when  
    DUT is requested to open multiple TCP passive sockets  
    and DUT receives multiple Tcp Segments through these sockets  
      containing SYN Flag  
        indicating a value of 1  
  Then  
    DUT opens a TCP passive sockets  
    and DUT  sends multiple TCP segments to the sending port  
      containing SYN and ACK Flags  
        indicating a value of 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an UpperTester OpenMultipleTCPSocket passive3 request  
2 TESTER Send 3 TCP segments with SYN set to 1 to the 3 opened sockets  
3 DUT Opens 3 TCP passive sockets and send 3 TCP segements with SYN and ACK set to 
1 corresponding to the received SYNs  
Pass Criteria  DUT opens a TCP passive sockets  
    and DUT  sends multiple TCP segments to the sending port  
      containing SYN and ACK Flags  
        indicating a value of 1  
Test Iterations  
 
Notes  Derived from RFC 793 chapter 15 page 5  

  
    
  704 TCPCONNECTIONESTAB03 To verify that the D UT opens multiple Active sockets 
and connects them to remote socket  
Synopsis  Ensure that  
  when  
    DUT is requested to open multiple TCP active sockets  
    and DUT receives Tcp Segments with SYNACK Flags set to 1  After that DUT  sends 
SYN 
  Then  
    DUT opens m ultiple TCP active sockets  
    and DUT sends multiple Tcp Segments from the open active sockets  
      containing SYN flag  
        indicating a value of 1  
    and DUT receives SYN ACK as a resonpse to its SYN  
    and DUT sends multiple TCP segments from th e open active sockets  
      containing ACK flag  
        indicating a value of 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send an UpperTester OpenMultipleTCPSocket  active3 request  
2 DUT Opens 3 TCP active sockets and send 3 SYNs from each socket  
3 TESTER Send 3 TCP Segments with SYN ACK set to 1 for each socket  
4 DUT Send 3 TCP Segments with ACK set to 1 from each socket  
Pass Criteria  DUT opens multiple TCP active sockets  
    and DUT sends multiple Tcp Segments from the open active sockets  
      containing SYN flag  
        indicating a value of 1  
    and DUT sends multiple TCP segments from the open active sockets  
      contai ning ACK flag  
        indicating a value of 1  
Test Iterations  
 
Notes  Derived from RFC 793 chapter 15 page 5  

  
    
  705 TCPCONNECTIONESTAB07 To verify that DUT  accepts remote closing of a 
connection  
Synopsis  Ensure that  
  when  
    DUT  receives a FIN packet  
  then  
    DUT  sends an ACK packet  
   and DUT  sends a FIN s in response to users Close request  
   and DUT  moves to CLOSED state  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to state ESTABLISHED  
2 TESTER Send a FIN  packet  
3 DUT Sends an ACK packet  
4 DUT Sends a FIN packet and moves to CLOSED state  
5 TESTER externally check the state of the DUT  
Pass Criteria  DUT  sends an ACK packet and DUT  sends a FIN s in response to users Close request 
and DUT  moves to CLOSED state  
Test Iterations  
 
Notes  Derived from RFC 793 chapter 35  Closing a Connection  
 
 

  
    
  706 TCPCONNECTIONESTAB1 2 To verify that DUT  responds to TCP keep alive 
segments  
Synopsis  Ensure that  
  when  
    DUT  receives an ACK of X with no payload  
  then  
    DUT  sends an ACK packet  
        indicating DUT  stillalive  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a Keep Alive ACK packet with SEGSEQ  SNDNXT  1 Note on a quiet 
connection SNDNXT  RCVNXT so that  the Sequence Number is out of the receive 
window  
3 DUT Sends an ACK packet  
Pass Criteria  DUT  sends an ACK packet indicating DUT  stillalive  
Test Iterations  
 
Notes  Derived from RFC 1122  chapter 4236  TCP Keep Alives  

  
    
  707 49626  Header  
TCPHEADER 01 To verify that D UT generates a TCP packet  containing valid header 
field values  
Synopsis  Ensure that  
  when  
    DUT generates a TCP packet  
  then  
    DUT sends a TCP packet  
      containing a well formed TCP header  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send generateTCPSegment request  
3 DUT Sends a data segment containing valid head er values  
Pass Criteria  DUT sends a TCP packet containing a well formed TCP header  
Test Iterations  
 
Notes  Derived from RFC 793  

  
    
  708 TCPHEADER02  To verify that DUT  accepts the TCP packet  containing valid header 
field values  
Synopsis  Ensure that  
  when  
    DUT receives a valid TCP packet  
  then  
    DUT sends and ACK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a data  packet  
3 DUT Sends an ACK packet with the expected  Ack Number  
Pass Criteria  DUT sends and ACK  
Test Iterations  
 
Notes  RFC 793  

  
    
  709 TCPHEADER04 To verify that a DUT  discards the packet  in case TCP head er 
contains invalid source port  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing a Source P ort 
        indicating a value different from  PORT1  
      containing a sequence number  
        indicating SEQ1  
  then  
    DUT discards the T CP packet  
    and opt ionally DUT sends a RST packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state on PORT1  
2 TESTER Send a TCP packet on a PORT2 with Sequence Number set to SEQ1  
3 DUT DUT discards the TCP packet  and optionally DUT sends a RST packet  
Pass Criteria  DUT discards the TCP packet and optionally DUT sends a RST packet  
Test Iterations  
 
Notes  RFC 793  

  
    
  710 TCPHEADER05 To verify that a DUT  accepts the packet  in case TCP header 
Reserved field having a zero value  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing a Reserved field  
        indicating  a zero valu e 
  then  
    DUT accepts the TCP packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state  
2 TESTER  Send a TCP packet with Reserved field set to zero  
3 DUT Send an ACK with the expected Ack Number  
Pass Criteria  DUT accepts the TCP packet  
Test Iterations  
 
Notes  RFC 793 chapter 31 RFC 4413 chapter 423 Reserved  

  
    
  711 TCPHEADER06 To verify that a DUT  accepts the packet  in case TCP header 
Reserved field having non zero value  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet   
      containing Reserved field   
        indicating  a non zero value  
  then  
    DUT ignores the Reserved field  
    and DUT accepts the TCP packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state  
2 TESTER  Send a TCP packet with Reserved field different from zero  
3 DUT Send an ACK with the expected Ack Number  
Pass Criteria  DUT ignores the Reserved field and DUT accepts the TCP packet  
Test Iterations  
 
Notes  RFC 4413 chapter 423 Reserved  

  
    
  712 TCPHEADER07 To verify that DUT  discards TCP packet s in case TCP header data 
offset field having an invalid non zero value  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing Data Offset  
        indicating  a value less than 5  and non zero  
  then  
    DUT discards TCP packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state  
2 TESTER  Send a TCP packet with Data Offset value less than 5  
3 DUT Discards the TCP packet  
Pass Criteria  DUT discards  the TCP packet  
Test Iterations  
 
Notes  RFC 793  chapter 31   

  
    
  713 TCPHEADER08 To verify that DUT  discards TCP packet s in case TCP header data 
offset field having value greater tha n the actual value  
Synopsis  Ensure th at  
  when  
    DUT receives a TCP p acket  
      containing Data Offset  
        indicating  a value greater than the actual  value  
  then  
    DUT discards TCP packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state  
2 TESTER  Send a TCP packet with Data Offset value greater than 5  
3 DUT Discards the TCP packet  
Pass Criteria  DUT discards TCP packet  
Test Iterations  
 
Notes  RFC 793 chapter 31  

  
    
  714 TCPHEADER09 To verify that DUT  discards the TCP packet  in case TCP header 
checksum value is zero  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing a Checksum  
        indicating a value of 0  
  then  
    DUT discards the T CP pac ket and sends no ACK back  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a TCP packet with a Checksum  0 and Sequence Number  SEQ  
3 DUT Discards the TCP packet and sends no ACK back  
Pass Criteria  DUT discards the TCP pa cket  and does not send an ACK  back  
Test Iterations  
 
Notes  RFC 793  

  
    
  715 TCPHEADER10 To verify that DUT  discards TCP packet s in case header zero option 
length  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing a Header Option  
        indicating a value of NOP  
    and containing  EOP  
        indicating length  0  
  then  
    DUT discards the TCP packet and sends no ACK back  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a TCP packet with a Header Option  NOP and EOP Lentgh  0  
3 DUT Discards the TCP packet and sends no ACK back  
Pass Criteria  DUT discards  the TCP packet and sends no ACK back  
Test Iterations  
 
Notes  RFC 793  
 

  
    
  716 TCPHEADER11 T o verify that DUT  discards TCP packet s with SYN flag set and a 
Multicast IP Destination Address  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing SYN  1  
      and containing IP  Destination Address  
        indicating a value of multicastAddress  
  then  
    Discards the TCP packet and sends no ACK back  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a SYN with IP Destination Address  multicastAddress  
3 DUT Discards the TCP packet and sends no ACK back  
Pass Criteria  Discards the TCP packet and sends no ACK back  
Test Iterations  
 
Notes  RFC 793  

  
    
  717 49627  Sequence  Number  
TCPSEQUENCE 01 To verify that DUT  synchronizes on initial sequence number in 
state LISTEN  
Synopsis  Ensure that  
  when  
    DUT receives a SYN packet  
      containing Sequence Number  
        indicating ISN  
  then  
    DUT sends an ACK  
      containing an Acknowledgment Number  
        indicating ISN1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to state LISTEN  
2 TESTER Send a SYN with the Sequence Number equal to ISN  
3 DUT Sends an SYNACK with an ACK Number equal to ISN1  
Pass Criteria  DUT sends an SYNACK containing an Acknowledgment Number indicating I SN1 
Test Iterations  
 
Notes  RFC 793  chapter 31  

  
    
  718 TCPSEQUENCE02 To verify that DUT  synchronizes on initial sequence number in 
state SYN SENT  
Synopsis  Ensure th at  
  when  
    DUT receives a SYNACK packet  
      containing Sequence Number  
        indicating ISN  
  then  
    DUT sends an ACK packet  
      contain ing Acknowledgment Number  
        indicating ISN1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to state SYN SENT  
2 TESTER Send a SYNACK with the Sequence Number equal to ISN  
3 DUT Sends an ACK with an ACK Number equal to ISN1  
Pass Criteria  DUT sends an ACK packet containing Ackn owledgment Number indicating I SN1 
Test Iterations  
 
Notes  RFC 793  

  
    
  719 TCPSEQUENCE03 To verify that DUT  accepts the TCP packet  in case initial 
sequence number has zero value  
Synopsis  Ensure that  
  when  
    DUT receives a SYN packet  
      containing Sequence Number  
        indicating a zero  value 
  then  
    DUT accepts the TCP packet  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to state LISTEN  
2 TESTER Send a SYN with the Sequence Number equal to 0  
3 DUT Sends an SYNACK with an ACK Number equal to 1  
Pass Criteria  DUT accepts the TCP packet  
Test Iterations  
 
Notes  RFC 793  

  
    
  720 TCPSEQUENCE04 To verify that DUT  accepts the TCP packet  in case initial 
sequence number has maximum value  
Synopsis  Ensure th at  
  when  
    DUT receives a TCP packet  
      containing Sequence Number  
        indicating SeqMaxVal value  
  then  
    DUT a ccepts the TCP packet  
    and DUT sends an SYNACK packet  
      containing Acknowledgment Number  
        indicating 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Send a SYN to DUT at wnp with Initial Sequence Number equal to 
SeqMaxVal  
2 DUT Send SYNACK with Ack Number equal to 0  
Pass Criteria  DUT accepts the TCP packet and DUT sends an SYNACK packet containing 
Ackno wledgment Number i ndicating 0  
Test Iterations  
 
Notes  RFC 793  

  
    
  721 TCPSEQUENCE05 To verify that DUT  accepts the TCP packets  in case sequence 
numbers received are in the right order  
Synopsis  Ensure that  
  when  
    DUT receives a severalTCP packets  
      containing SEQ 
        indicating values incremented correctly  
  then  
    DUT sends an ACK for every received TCP Segments  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER B ring DUT to ESTABLISHED state  
2 TESTER  Send several TCP packets with Sequence Number correcitly incremented  
3 DUT Sends an ACK for every received packet with the expected Ack Numbers  
Pass Criteria  DUT sends an ACK for every received TCP Segments indicating TCP Segments  
Test Iterations  
 
Notes  RFC 793  

  
    
  722 49628  Acknowledgment  

  
    
  723 TCPACKNOWLEDGEMENT 02 To verify that DUT  accpets  the ACK piggybacked with 
next transmit packet  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing ACK flag  
        indicating a value of 1  
      and  a payload  
  then  
    Sends an ACK  
      containing Ack Number  
        indicating the expected value  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send sendTCPPacket on the udpPort to request a TCP packet from 
the DUT  
3 DUT Sends a TCP packet with the expected Sequence Numb er 
4 TESTER Send an ACK with a payload  
5 DUT Accepts the TCP packet and sends an ACK with the expected Akc Number  
Pass Criteria  DUT accepts the TCP packet and sends an ACK with the expected Ack Number  
Test Iterations  
 
Notes  RFC 793  

  
    
  724 TCPACKNOWLEDGEMENT03 To verify that DUT  sends only ACK in case no packet  
left to send  
Synopsis  Ensure th at  
  when  
    DUT has no data left to send  
    and DUT receives a TCP packet  
  then  
    DUT sends an ACK  
      containing an Ack Number  
        indicating the expected value  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  using a passive socket call  
2 TESTER  Send TCP packet  
3 DUT Sends an ACK with the expected Ack Number  
Pass Criteria  DUT sends an ACK with the expected Ack Number  
Test Iterations  
 
Notes  RFC 793 page 74  

  
    
  725 TCP ACKNOWLEDGEMENT04 To verify that DUT  receives ACKs alone no 
piggybagging  
Synopsis  Ensure that  
  whe n  
    DUT receives an ACK  
      containing Length  
        indicating a value of 0 an empty ACK no piggybagging  
   then  
    DUT does no t send an RST 
    and DUT ends connection with the expected ACK number  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send sendTCPPacket to request a TCP packet from the DUT  
3 DUT Send s a TCP packet  
4 TESTER Send an ACK with the expected Ack Number with Length equal to 0  
5 DUT Sends no RST and ends the connection correctly when requested to  
Pass Criteria  DUT does not send an RST and DUT ends connection with the expected ACK num ber 
Test Iterations  
 
Notes  RFC 793  
 

  
    
  726 49629  Control Flags  
TCPCONTROLFLAGS 01 To verify that DUT  generates TCP data packet with PSH 
flag not set  
Synopsis  Ensure that  
  when  
    DUT is requested to generate a TCP packet  
  then  
    DUT generates a TCP packet  
      containing a PSH flag  
        indicating a value of 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send sendTCPPacket to request a TCP packet from the DUT  
3 DUT Sends a TCP packet with PSH flag not set  
Pass Criteria  DUT generates a TCP packet  
      containing a PSH flag  
        indicating a value of 0  
Test Iterations  
 
Notes  RFC 4413 chapter 424  

  
    
  727 TCPCONTROLFLAGS05 To verify that DUT  receives TCP data packet  in case URG 
flag is set  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing URG flag  
        indicating a value of 1  
  then  
    DUT sends an ACK  
      containing an Ack Number  
        indicating the expected value  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a TCP packet with URG being set to DUT  
3 DUT Sends an ACK with expected Ack Number  
Pass Criteria  DUT sends an ACK  
      containing an Ack Number  
        indicating the expected value  
Test Iterations  
 
Notes  RFC 4413 chapter 424  

  
    
  728 TCPCONTROLFLAGS07 To verify that DUT accepts TCP data packet  with both PSH 
and URG Flags set to 1  
Synopsis  Ensure that  
  when  
    DUT receives a TCP packet  
      containing U RG flag and PSH flag  
        indicati ng a value of 1  buffer  
  then  
    DUT sends an ACK  
      containing an Ack Number  
        indicating the expected value  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to ESTABLISHED state  
2 TESTER Send a TCP packet with URG and PSH flags being set to DUT  
3 DUT Sends an ACK with expected Ack Number  
Pass Criteria  DUT sends an ACK  
      containing an Ack Number  
        indicating t he expected value  
Test Iterations  
 
Notes  RFC 4413 chapter 424  

  
    
  729 TCPCONTROLFLAGS08 To verify that DUT  recovers the duplicated SYN by sending 
RST  
Synopsis  Ensure that  
  when  
    DUT receives a SYN packet  
      containing RST flag  
        indicating a value of 1  
      and containg a Sequence Number  
        indicating a value of a late duplicated SYN  
     and DUT receives a SYN packet  
       containing a Sequence Number  
         indicating SEQ  
  then  
    DUT sends a SYNACK  
     containing an Ack Number  
      indicating a value of SEQ  1  
    and DUT moves from state LISTEN to SYN RECEIVED  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER Bring DUT to LISTEN  state  
2 TESTER Send SYN with Sequence Number equal to SEQ1  
3 DUT Sends a SYNACK with Ack Number equal to SEQ11 and moves to SYN 
RECEIVED state  
4 TESTER Send SYN with RST flag set with Sequence Numb er equal to SEQ1  
5 TESTER Send SYN with Sequence Number equal to SEQ2  
6 DUT Sends a SYNACK with Ack Number equal to SEQ21  
Pass Criteria  DUT sends a SYNACK  
     containing an Ack Number  
      indicating a value of SEQ  1  
    and DUT moves fr om state LISTEN to SYN RECEIVED  
Notes  RFC 793  
 

  
    
  730 5 Test Scope Automotive Protocols  
51 Scalable service Oriented MiddlewarE over IP Protocol SOMEIP  
511  General  
5111  Reference d specification  
 
The scope of this chapter is to specify test cases for Scalable service Oriented MiddlewarE over IP 
Protocol from the following standards  
 Specification of Service Discovery V120 R41 Rev 3  
 Example for a Serialization Protocol SOMEIP V110 R41 Rev 3  
5112  Simulated topologies  
 
5113  Required topology related configuration  
 
Tester configuration required for the tests in the following sections pertaining to SOMEIP  tests  
 
 Correct DUT IP Address for DUT interface connected to TESTER interface  
 All the test cases in this suite require DUT to be configured with only one IP interface  
5114  Coverage  
  Specification Document  Section   
Number  Test Category           Test Numbers       
Specification of Service 
Discovery V120 R41 Rev 
3  73  Message format  SOMEIPSRVFORMAT01 to 
SOMEIPSRVFORMAT27  
Specification of Service 
Discovery V120 R41 Rev 
3  739  Options Array  SOMEIPSRVOPTIONS01 to 
SOMEIPSRVOPTIONS15  
Specification of Service 
Discovery V120 R41 Rev 745  StopOfferService entry  SOMEIPSRVSDBEHAVIOR05  HOST 
1HOST 1 DIface 0 TIface 0 
ECU 
DUT 
TOPOLOGY 1                  TOPOLOGY 1 

  
    
  731 3  
Specification of Service 
Discovery V120 R41 Rev 
3  7462  StopSubscribeEventgroup 
entry  SOMEIPSRVSDBEHAVIOR0 6 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67411  Find Service Entry  SOMEIPSRVSDMESSAGE01 
to 
SOMEIPSRVSDMESSAGE06  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67412  Offer Service Entry  SOMEIPSRVSDMESSAGE07 
to 
SOMEIPSRVSDMESSAGE09  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67413  Stop Offer Service Entry  SOMEIPSRVSDMESSAGE10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67421  Subscribe Eventgroup 
Entry  SOMEIPSRVSDMESSAGE11  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67422  Stop Subscribe 
Eventgroup Entry  SOMEIPSRVSDMESSAGE12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67423  Subscribe Eventgroup 
Acknowledgement Entry  SOMEIPSRVSDMESSAGE13  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  67424  Subscribe Eventgroup 
Negative 
Acknowledgement Entry  SOMEIPSRVSDMESSAGE14 
to 
SOMEIPSRVSDMESSAGE19  
Example for a Serialization 
ProtocolSOMEIP V110  
R41 Rev 3  6751  Startup Behavior  SOMEIPSRVSDBEHAVIOR01 
to 
SOMEIPSRVSDBEHAVIOR02  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6752  Server Answer Behavior  SOMEIPSRVSDBEHAVIOR03 
to 
SOMEIPSRVSDBEHAVIOR04  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  61  Definition of Identifiers  SOMEIPSRVBASIC01 to 
SOMEIPSRVBASIC03  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  62311  Mapping of IP Addresses 
and Ports Respons e and 
Error Messages  SOMEIPSRVONWIRE01 to 
SOMEIPSRVONWIRE12  

  
    
  732 Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  62321  Structure of the Message 
ID  SOMEIPSRVONWIRE02  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6234  Request ID  SOMEIPSRVONWIRE03 to 
SOMEIPSRVONWIRE04  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6235  Protocol Version  SOMEIPSRVONWIRE05  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6236  Interface Version  SOMEIPSRVONWIRE05 6 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6237  Message Type  SOMEIPSRVONWIRE07 to 
SOMEIPSRVONWIRE10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6238  Return Code  SOMEIPSRVONWIRE11 to 
SOMEIPSRVONWIRE12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6312  TCP Binding  SOMEIPSRVRPC01 
SOMEIPSRVRPC02 
SOMEIPSRVRPC17  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  635  Fields  SOMEIPSRVRPC03 
SOMEIPSRVRPC11 
SOMEIPSRVRPC12  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  633  FireForget 
Communication  SOMEIPSRVRPC04  
SOMEIPSRVRPC0 5 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6362  Return Code  SOMEIPSRVRPC06 to 
SOMEIPSRVRPC10  
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6313  Multiple Service Instances  SOMEIPSRVRPC13  
SOMEIPSRVR PC1 4 
Example for a Serialization 
ProtocolSOMEIP V110 
R41 Rev 3  6341  Strategy for sending 
notifications  SOMEIPSRVRPC15  
SOMEIPSRVRPC1 6 
 
 

  
    
  733 512  Parameters used in the tests  
5121  User defined configuration parameters for IUT  
Parameter used in 
test Description  
Listen Time Setting  This is the maximum time interval for which anvl waits for a packet for cases 
when a certain event has been triggered on the DUT either by some protocol 
timer or using some external mechanism script  
Default 10  
Tolerance Time 
Setting  Tolerance time associated with an event When waiting or listening then this 
number will be added with the actual wait time or listen time  
Default 1  
Process Time 
Setting  This is the time DUT appoximately takes to process packet ANVL uses this 
process time added with listen time for some time critical situation while 
listening for DUT Responses  
Default 2  
Millisec Tolerance 
Time Setting  Tolerance time associated with some event in Millisecond When waiting or 
listening then this  number will be added with the actual wait time or listen 
time This is currently used in case of DUTs responses are in millisecond interval  
Default 100  
DUT Supports Error 
Messages Setting  This is used to indicate whether DUT supports SOMEIP Error messages  
Default false  
DUT Supports SD 
Reception via Unicast 
Setting  This is Used to indicate whether DUT supports SD message reception via 
Unicast  
Default true  
DUT Supports 
Multiple Service 
Instances Setting  This is Used to indicate whether DUT sup ports Multiple instances of SAME 
service  
Default false  
Server Unknown 
Method ID Setting  This is a Method ID value that is not implemented in DUT and not listed in xml 
specification as well  
Default 15  

  
    
  734 Server Unknown 
Interface Version 
Setting  This is a Service Interface version value that is not implemented in DUT and not 
listed in xml specification as well  
Default 0xFF  
Server Unknown 
Service ID Setting  This is a Service ID value that is not implemented in DUT and not listed in xml 
specification as well  
Default 0xFF  
Server Unknown 
EventGroup ID 
Setting  This is an Eventgroup ID value that is not implemented in DUT and not listed in 
xml specification as well  
Default 50  
Server Interface 
Specification 
XMLSetting  This is path for SOMEIP Service Interface Specification XML file  
Default  someipserverspecxml  
5122  User defined configuration parameters for TESTER  
Parameter used in test  Description  
DIface n  nth Interface of DUT  
SERVICE ID1  Service ID of Service 1  
SERVICE ID2  Service ID of Service 2  
SERVICE ID1INSTANCE ID  Instance ID of Service 1  
SERVICE ID1MAJ VER  Major version supported by Service 1  
SERVICE ID1INTF VERMAJ  Interface Version of Service 1  
SERVICE ID2INTF VERMAJ  Interface Version of Service 2  
SERVICE ID1TTL  TTL value of Service 1  
SERVICE ID1MINOR VER  Minor version supported by Service 1  
SERVICE ID1INST 1  First Instance ID of Service 1  
EVENT GROUP ID2  Eventgroup ID 2  
EVENT GROUP ID1SI1  Eventgroup ID 1 of Service 1  
SERVICE ID1UDP PORT  UDP port number where Service 1 runs  
SOMEIPMULTICASTIPADDR  Multicast Address used by SOMEIP SD  
CLIENT1 CURR REQUEST ID  Current Request ID of Client 1  
EVENT ID1EGID1  Event ID 1 of Eventgroup ID 1  
EVENT ID2EGID1  Event ID 2 of Eventgroup ID 1  
EVENT ID2EGID2  Event ID 2 of Eventgroup ID 12  
EVENT ID2EGID1CYCLIC TIME  Cycle Time of Event ID 2 of Eventgroup 1Here Event ID 
1 is assumed to be a cyclic event  
EVENT GROUP ID1SI1
MulticastAddr  Muticast Address of Eventgroup 1 of Service 1 where 
the event and notifications will be multicast  

  
    
  735 UNKNOWN SERVICE ID  Invalid Service ID  
UNKNOWN EVENT GROUP ID  Invalid Eventgroup ID  
UNKNOWN METHOD IDSI1  Invalid Method ID of Service ID 1  
UNKNOWN INTF VERMAJ SI1  Invalid Interface Version of Service ID 1  
SERVICE ID1REPBASE INTV  Repetition Base Interval of Service 1  
SERVICE ID1TOTAL REPINTV  Total Repetition Period of Service 1 Calculated using 
Repetition max value as  Repetitionbaseintv  2  
repetitonmax  1  
SERVICE ID1INITIAL WAIT TIME  Initial Wait tim e for Service 1  
SERVICE ID1CYCLE INTV  Offer Cycle interval of Service 1  
METHOD ID1SI1  First InOut Type Method Listed in XML file for Service 1  
METHOD ID1SI2  First InOut Type Method Listed in XML file for Service 2  
SERVICE ID2TRANSPORT PORT  Transport port of Service ID 2UDPTCP  
SERVICE ID2INITIAL WAIT TIME  Time taken by the DUT before Sending Offer Service 
message  
SERVER1 IPADDR  IP Address of SOMEIP SD Server 1  
CLIENT1 IPADDR  ANVL client1 IP address  
CLIENT1 UDP PORT  ANVL client1 UDP port  
FOREGROUND  Boolean value set to false to indicate script running in 
foreground  
BACKGROUND  Boolean value set to true to indicate script running in 
background  
ParamToleranceTime  This is tolerance time taken from parameter file  
CLIENT1 LISTEN TIME  Listen time used by ANVL taken from parameter file  
BUSY WAIT  It is to indicate ANVL will be listening to incoming 
packets while waiting  
LAZY WAIT  It is to indicate ANVL will not be listening to incoming 
packets while waiting  
ListenTime  This is the maximum time interval for which anvl waits 
for a packet for cases when a certain event has been 
triggered on the DUT either by some protocol timer or 
using some external mechanism script  
Default 10 second  
ToleranceTime  Tolerance time associated with an event When waiting 
or listening then this number will be added with the 
actual wait time or listen time  
Default 1 second  
513  Terminology us ed in Test Procedure  
 
Name  Description  
TESTER  Entity which is responsible for validating the Device 
under Test DUT  
DUT  Device under Test  

  
    
  736 514  Specification of the SOMEIP TestStub Enhanced Testability Service 
ETS  
5141  Introduction  
51411  Overview  
Defined interfaces are needed to test SOMEIP 1 In order to allow for generic testing tools and test 
cases this interface needs to be defined and possibly standardized This interface and the functionality 
behind it are called Enhanced Testability Serv ice ETS   
The protocol parts currently being addressed by the Enhanced Testability Service include  
SOMEIP Stack  Service Discovery  
SOMEIP Stack  Serialization  
SOMEIP Stack  Remote Procedure Call  
SOMEIP Stack  Service Discovery  
SOM EIP Stack  PublishSubscribe  
 
The Enhanced Testability Service further allows different categories of tests eg when used in 
component testing scenarios for devices under test DUTs These include positive tests testing using 
valid messages negati ve tests testing error handling load testing and regression testing  
51412  References  
1 SOMEIP Protocol Spec ification AUTOSAR FO Release 11 0 
2 SOMEIP Service Discovery Protocol Spec ification AUTOSAR FO Release 11 0 
5142  Enhanced Testability Service  
 
Table 1 List of Methods  
Method  ID FireForget  
checkByteOrder  31 0x1F   

  
    
  737 clientServiceActivate  47 0x2F  X 
clientServiceDeactivate  48 0x30  X 
clientServiceCallEchoUINT8Array  49 0x31   
clientServiceSubscribeEventgroup  50 0x32  X 
echoCommonDatatypes  35 0x23   
echoENUM  23 0x17   
echoExtendedDatatypes  36 0x24   
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39   
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38   
echoFLOAT64  18 0x12   
echoInt64  52 0x34   
echoINT8  14 0x0E   
echoStaticUINT8Array  54 0x36   
echoSTRUCT  24 0x18   
echoSTRUCTSimple  64 0x40   
echoTYPEDEF  26 0x1A   
echoUINT64  51 0x33   
echoUINT8  8 0x08   
echoUINT8Array  9 0x09   
echoUINT8Array8BitLength  62 0x3E   
echoUINT8Array16BitLength  63 0x3F   
echoUINT8Array2Dim  53 0x35   
echoUINT8ArrayMinSize  55 0x37   
echoUINT8E2E  11 0x0B   
echoUINT8RELIABLE  10 0x0A   
echoUNION  25 0x19   
echoUTF16DYNAMIC  22 0x16   
echoUTF16FIXED  20 0x14   
echoUTF8DYNAMIC  21 0x15   

  
    
  738 echoUTF8FIXED  19 0x13   
resetInterface  1 0x01  X 
suspendInterface  2 0x02  X 
triggerEventUINT8  3 0x03  X 
triggerEventUINT8Array  4 0x04  X 
triggerEventUINT8E2E  6 0x06  X 
triggerEventUINT8Reliable  5 0x05  X 
triggerEventUINT8Multicast  58 0x3A  X 
clientServiceGetLastValueOfEventTCP  59 0x3B   
clientServiceGetLastValueOfEventUDPUnicast  60 0x3C   
clientServiceGetLastValueOfEventUDPMulticast  61 0x3D   
echoBitfields  65 0x41   
 
Table 2 List of Events and Fields  
Type  Name  ID Eventgroups  
0x0002  0x0005  0x0006  
Event  TestEventUINT8  0x8001  x x   
Event  TestEventUINT8Array  0x8002  x x   
Event  TestEventUINT8E2E  0x8004  x x   
Event  TestEventUINT8Reliable  0x8003  x    
Event  TestEventUINT8Multicast  0x800B  x x x 
Field  InterfaceVersion  0x8005 Notify  x x   
0x25 Getter  x x   
Field  TestFieldUINT8  0x8006 Notify  x x   
0x26 Getter  x x   
0x27 Setter  x x   
Field  TestFieldUINT8Array  0x8007 Notify  x x   
0x28 Getter  x x   
0x29 Setter  x x   
Field  TestFieldUINT8Reliable  0x8008 Notify  x    
0x2A Getter    
x     
0x2B Setter    
x     
  
 

  
    
  739 5143  SOMEIP Service Discovery SOMEIP SD 
 
Several methods of the Enhanced Testability Service are used to test SOMEIP SD 
 
 
Figure 1 SOMEIP SD state machine of testing methods  
Method  ID 
resetInterface   1 0x01  
 
This method resets the interface to default values  
stm Serv ice Discov ery
Serv ice up Serv ice down
suspendinterface

  
    
  740  
Figure 2 resetInterface  
 
51431  Suspending an SOMEIP Interface suspendInterface  
Method  ID 
suspendInterface   2 0x02  
 
This method allows to suspend the Enhanced Testability Service thus forcing the DUT to stop offering 
the service and start to reoffer the service after a given time  
 
The input parameters include  
 
 Start  wait time in seconds before the service shall be stopped  
 Duration  wait time in seconds during between stopping the service and reoffering it again  
 
sd resetinterface
service
DUT Testabilityclient
PC TestabilityClient
Resets interface to 
default valuesPrecondition

Postcondition
resetInterface

  
    
  741  
Figure 3 suspendInterface  
51432  Testing Client Interaction  
In order to test the correct function as a client the Enhanced Testability Service supports the following 
methods  
Method  ID 
clientServiceActivate  47 0x2F  
clientServiceDeactivate  48 0x30  
clientServiceCallEchoUINT8Array  49 0x31  
clientServiceSubscribeEventgroup  50 0x32  
clientServiceGetLastValueOfEventTCP  59 0x3B  
clientServiceGetLastValueOfEventUDPUnicast  60 0x3C  
clientServiceGetLastValueOfEventUDPMulticast  61 0x3D  
 
The commands clientServiceActivate  and clientServiceDeactivate shall instruct the DUT if it shall start its 
SOMEIP client thus they control when the system shall start finding the Enhanced Testability Service 
with the special configurable Instance ID for example 0x00f4   
sd suspendinterface
service
DUT Testabilityclient
PC TestabilityClient
Wait start seconds to 
suspend
Stay duration 
seconds in suspend 
moderefserv icediscov eryrefserv icediscov eryresumePrecondition

Postcondition
suspendInterfaceduration start

  
    
  742 Using clientServiceEchoUINT8Array the sys tem shall call back the echoUINT8Array method with the 
parameter given and shall return the returned value  
The clientServiceSubscribeEventgroup shall trigger the subscription behavior in Service Discovery  
To ease testing all methods shall support a wait time  so that the reaction of the system can be delayed  
Following methods return the last received value of TestEventUINT8Reliable TestEventUINT8 and 
TestEventUINT8Multicast  respectively  
 clientServiceGetLastValueOfEventTCP  
 clientServiceGetLastValueOfEv entUDPUnicast  
 clientServiceGetLastValueOfEventUDPMulticast  
 
5144  SOMEIP Serialization  
51441  Checking the Byte Order checkByteOrder  
Method  ID 
checkByteOrder   31 0x1F  
 
This method is used to test the correct handling of the byte order  
The input parameters include a uint8 and a big endian uint16 which shall be added and returned as 
output parameter in uint32 big endian  

  
    
  743  
Figure 4 checkByteOrder  
 
51441  Common Data Types echoCommonDatatypes  
Method  ID 
echoCommonDatatypes   35 0x23  
 
This method can be used to test the common data types  
The input parameters shall be echoed back in reversed order   
 
sd checkbyteorder
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
checkByteOrdersummandUINT8 summandUINT16
request
addValues
checkByteOrdersum
response

  
    
  744  
Figure 5 echoCommonDatatypes  
 
51442  Complex Data Types echoExtendedDatatypes  
Method  ID 
echoExtendedDatatypes   36 0x24  
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39  
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38  
 
This method is used to test the complex data types  
The regular variant uses the recommended size of 32bit for length fields type fields and array length 
fields  
The other variants change this to 16 bits or 8 bits respectively  
 
sd echocommondatatypes
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
echoCommonDatatypesbOOLEAN uINT8 uINT16 uINT32 iNT8 iNT16 iNT32 fLOAT32 fLOAT64
request
echoCommonDatatypesfLOAT64 fLOAT32 iNT32 iNT16 iNT8 uINT32 uINT16 uINT8 bOOLEAN
response

  
    
  745  
Figure 6 echoExtendedDatatypes  
 
51443  Echoing data types  
Method  ID 
echoCommonDatatypes  35 0x23  
echoENUM  23 0x17  
echoExtendedDatatypes  36 0x24  
echoExtendedDatatypes16BitLengthAndTypeField  57 0x39  
echoExtendedDatatypes8BitLengthAndTypeField  56 0x38  
echoFLOAT64  18 0x12  
echoInt64  52 0x34  
echoINT8  14 0x0E  
echoStaticUINT8Array  54 0x36  
echoSTRUCT   24 0x18  
echoSTRUCTSimple  64 0x40  
echoTYPEDEF  26 0x1A  
echoUINT64  51 0x33  
echoUINT8  8 0x08  
echoUINT8Array  9 0x09  
echoUINT8Array8BitLength  62 0x3E  
echoUINT8Array16BitLength  63 0x3F  
echoUINT8Array2Dim  53 0x35  
echoUINT8ArrayMinSize  55 0x37  
echoUINT8E2E  11 0x0B  
echoUINT8RELIABLE  10 0x0A  
echoUNION  25 0x19  
echoUTF16DYNAMIC  22 0x16  
sd echoextendeddatatypes
service
DUT Testabilityclient
PC TestabilityClient
Precondition

Postcondition
echoExtendedDatatypesinputData
request
echoExtendedDatatypesreturnData
response

  
    
  746 echoUTF16FIXED  20 0x14  
echoUTF8DYNAMIC  21 0x15  
echoUTF8FIXED  19 0x13  
echoBitfields  65 0x41  
 
A set of methods exist to test a multitude of data types such as bool uint8 uint16 uint32  Only 
three examples are shown in the diagram Keep  in mind that some of the echo routines echo back the 
parameters in another order as the parameters coming in The configuration FIBEXARXML describes 
this in detail  
 
The method echoUINT8 returns the UINT8 value  In this case it sent via UDP  
The echoUDP8Reliable uses TCP instead  
The echoUINT8E2E  uses End toEndprotection  
 

  
    
  747  
Figure 7 echoUINT8echUINT8reliableechoUINT8E2E  
 
51444  Testing Events  
Method  ID 
triggerEventUINT8  3 0x03  
triggerEventUINT8Array  4 0x04  
sd echomsg
service
DU Testabilityclient
PC TestabilityClient
alt 
UINT8
UINT8Reliable
UINT8E2EPrecondition

Postcondition
echoUINT8uINT8Value
echoUINT8uINT8ReturnValue
echoUINT8ReliableuINT8Value
echoUINT8ReliableuINT8ReturnValue
echoUINT8E2EcRCId alive cRC uINT8Value
echoUINT8E2EcRCId alive cRC uINT8Value

  
    
  748 triggerEventUINT8E2E  6 0x06  
triggerEventUINT8Reliable  5 0x05  
triggerEventUINT8Multicast  58 0x3A  
 
After the method triggerEventUINT8Reliable  start duration debounceTime was invoked the service 
Testability waits start seconds and triggers a periodical event testEventUINT8ReliableuINT8Value 
with the passed duration and debounce time  The transport protocol of the event message is TCP  
 
There are more test events and the correspondi ng trigger methods available also for other passed 
datatypes The  diagram below only shows one example  
The full list can be found in the service catalog  
 
 
Figure 8 triggerEventUINT8Reliable  
After th e method triggerEventUINT8Arraystart duration debounceTime was invoked the service 
Testability waits start seconds and triggers a periodical event testEventUINT8ArrayuINT8Array with 
the passed duration and de bounce time  
The transport protocol for  both the trigger method and the event is UDP  
 
sd triggerev entreliable
service
DUT Testabilityservice
PC TestabilityClient
Precondition
Client notified to corresponding event group
Periodically in 
debouncetimeloop loopev ents
Postcondition
triggerEventUINT8Reliablestart duration debounceTime
waitstart
testEventUINT8ReliableuINT8Value

  
    
  749 There are more test events and the corresponding trigger methods available also for other passed 
datatypes The  diagram below only shows one example  
The full list can be found in the service catalog  
 
 
Figure 9 triggerEventUINT8Array  
 
The other triggerEvent methods run as follows E2E methods always use End toEnd protection  
 
 
 
 
51445  Testing fields getter setter notify  
Different test fields are available to test the corresponding getter methods both unreliable via UDP and 
reliable via TCP  The full list of test fields is documented in the service catalog  
sd triggerev entunreliable
service
DUT Testabilityservice
PC TestabilityClient
Precondition
Client notified to corresponding event group
loop loopev ents
Postcondition
triggerEventUINT8Arraystart duration debounceTime
waitstart
testEventUINT8ArrayuINT8Array

  
    
  750  
 
Figure 10 getFieldtestFieldUINT8getFieldtestFieldUINT8Rel iable  
 
Different test fields are available to to test the corresponding setter methods both unreliable via UDP 
and reliable via TCP  The full list of test fields is documented in the service catalog  
sd fieldsgetValue
service
PC TestabilityClientservice
DUT Testability
Precondition
client notified to corresponding event group
alt reliability
udp
tcp
Postcondition
getFieldtestFieldUINT8
getFieldtestFieldUINT8UINT8
getFieldtestFieldUINT8Reliable
getFieldtestFieldUINT8ReliableuINT8Field

  
    
  751  
Figure 11 setField testFieldUINT8s etFieldtestFieldUINT8Reliable  
 
Different  test fields are available to  test the corresponding notifier events both unreliable via UDP and 
reliable via TCP  Additionally  the value of the test fields is updated periodically to trigger a notification 
event  The full list of test fields is documented in the service catalog  
sd fieldssetValue
service
DUT Testabilityservice
PC TestabilityClient
Precondition
client notified to corresponding event group
alt reliability
udp
tcp
Postcondition
setFieldtestFieldUINT8uINT8Field
setFieldtestFieldUINT8uINT8Field
setFieldtestFieldUINT8ReliableuINT8Field
setFieldtestFieldUINT8ReliableuINT8Field

  
    
  752  
Figure 12 notifyFieldtestFieldUINT8  
 
 
 
 
 
  
sd fieldsnotify
service
PC TestabilityClientservice
DUT Testability
Client is subscribed to field
Same behaviour for TCP and UDP field
Field changes by setValue calls and periodically in 500ms intervalls
loop periodic 500ms
opt 
500ms timeout 
Change in field
Postcondition
setFieldtestFieldUINT8UINT8
setFieldtestFieldUINT8uINT8Field
notifyFieldtestFieldUINT8uINT8Field

  
    
  753 5145  SOMEIP Service Discovery  
 
Testing SOMEIP SD does not require additional testing methods but can be achieved with the above 
mentioned commands especially from Sections 51432  and 5144  
  

  
    
  754 515  Test Cases SOMEIP Server  
5151  Setup Verification  
SOMEIPSRVSETUP 01  Service Discovery Offer Message  
Synopsis  Setup Verification for SOMEIP and SOMEIP SD TESTER expects Service 
Discovery Offer Message from DUT  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Type is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Type is set to 0x01  
Reference  Setup Verification MUST  
Notes   

  
    
  755 SOMEIPSRVSETUP 02  DUT Sends SOMEIP Response Message  to SOMEIP Request 
Message  
Synopsis  Setup Verification  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the 
following informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
4 DUT Sends SOMEIP Response Message  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Response Message  
Reference  Setup Verification MUST  
Notes   

  
    
  756 5152  Message  Forma t 
SOMEIPSRVFORMAT 01  Client ID   
Synopsis  The Client ID shall be set statically to 0x0000  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Client ID is set to 0x0000  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Client ID is set to 0x0000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00033 Page 23 Message format MUST  
Notes   

  
    
  757 SOMEIPSRVFORMAT 02  Session ID  
Synopsis  After initialization of the Service Discovery Module the Session ID for 
messages sent by the local ECU shall be 0x0001  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto SERVICE ID1INITIALWAIT
TIME  
        CLIENT1 LISTENTIME second on DIface 0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verif y that received SOMEIP Notification Message 
contains  
         Session ID is set to 0x0001  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Session ID is set to 0x0001  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00034 Page 23 Message format MUST  
Notes   

  
    
  758 SOMEIPSRVFORMAT 03  Protocol Version  
Synopsis  The value for the Protocol Version field shall be statically set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notif ication Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Protocol Version is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Protocol Version is set to 0x01  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00141 Page 24 Message format MUST  
Notes   

  
    
  759 SOMEIPSRVFORMAT 04  Interface Version  
Synopsis  The value for the Interface Version field shall be statically set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Interface Version is set to 0x01  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Interface Version is set to 0x01  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00143 Page 24 Message format MUST  
Notes   

  
    
  760 SOMEIPSRVFORMAT 05  Message Type  
Synopsis  The value for the Message Type field shall be statically set to 0x02  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upt o ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00145 Page 24 Message format MUST  
Notes   

  
    
  761 SOMEIPSRVFORMAT 06  Return Code  
Synopsis  The Return Code field shall be statically set to 0x00 Note This test case is for 
SD message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Return Code is set to 0x00  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Return Code is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00147 Page 25 Message format MUST  
Notes   

  
    
  762 SOMEIPSRVFORMAT 07  Reboot Flag  
Synopsis  The Reboot Flag shall be set to 1 for all messages after reboot until the Session ID 
of the Request ID field wraps and thus starts with 0x0001 again After that the 
Reboot Flag shall be set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Listens upto ParamListenTime on DIface 
0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Reboot Flag bit is set to 1  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Reboot Flag bit is set to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00151 Page 25 Message format MUST  
Notes   

  
    
  763 SOMEIPSRVFORMAT 08  Unicast Flag   
Synopsis  The Unicast Flag of the Flag field shall be set to Unicast Flag and shall be set to 
1 meaning This ECU supports receiving Unicast messages  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Unicast Flag bit is set to 1  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVIC EID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Unicast Flag bit is set to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00153 Page 26 Message format MUST  
Notes   

  
    
  764 SOMEIPSRVFORMAT 09  Undefined bits in the Flag field  
Synopsis  Undefined bits within the Flag field shall be statically set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens  upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Six Flag bits other than Reboot and Unicast bits is set 
to 0 
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Six Flag bits other than Reboot and Unicast bits is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00154 Page 26 Message format MUST  
Notes   

  
    
  765 SOMEIPSRVFORMAT10 Reserved bits  
Synopsis  All bits of the Reserved field shall be statically set to 0 binary  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that receive d SOMEIP Notification Message 
contains  
         Reserved is set to 0x000000  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Reserved is set to 0x000000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00156 Page 26 Message format MUST  
Notes   

  
    
  766 SOMEIPSRVFORMAT11 L ength of the Type 1 Entry  
Synopsis  The length of the Type 1 Entry shall be 16 bytes Note  Offer Service is unnder 
Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
3 DUT Sends SOMEI P Notification Message  
4 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Type is set to 0x01  
         Entry Length is set to NumberOfEntries16  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informat ions 
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
4 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Type is set to 0x01  
 Entry Length is set to NumberOfEntries16  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00160 Page 27 Message format MUST  
Notes   

  
    
  767 SOMEIPSRVFORMAT12 Index First Option Run  of the Type 1 Entry  
Synopsis  The Index First Option Run field of the Type 1 Entry format  layout shall carry 
the index of the first option of the first option run of this entry in the option array 
Note  Offer Service is under Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIP ENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Index 1st Option in Entry Array is set to 0  
6 DUT CON FIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Index 1st Option in Entry Array is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00164 Page 28 Message format MUST  
Notes   

  
    
  768 SOMEIPSRVFORMAT13 Number of Option 1  of the Type 1 Entry  
Synopsis  SWSSD00168 The Number of O ption 1 of the Type 1 Entry format layout 
shall carry the number of options the first option run uses Note  Offer Service is 
under Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPE NTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Num of Opt 1 in Entry Array is greater than or equal to  
1 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Num of Opt 1 in Entry Array is greater than or equal to 1  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00168 Page 28 Message format MUST  
Notes   

  
    
  769 SOMEIPSRVFORMAT14 Service ID field of the Type 1 Entry  
Synopsis  The Service ID field of the Type 1 Entry format layout shall carry the Service ID of 
the service statically configured using the parameter SdServerServiceID and 
SdClientServiceID depending on being a server or client entry Note  Offer Service 
is unnder  Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00173 Page 29 Message format MUST  
Notes   

  
    
  770 SOMEIPSRVFORMAT15 Instance ID field of the Type 1 Entry  
Synopsis  The Instance ID field of the Type 1 Entry format layout shall carry the Instance ID 
of the service statically configured using the parameter SdServerServiceInstanceID 
and SdClientServiceInstanceID depending on being a server or client entry Note  
Offer  Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Instance ID in Entry Array is set to  
           SERVICE ID1INSTANCE ID 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Instance ID in Entry Array is set to  
SERVICE ID1INSTANCE ID 
Reference  Specification of Service Discovery  V120 R41 Rev 3 Section 73 
SWSSD00175 Page 29 Message format MUST  
Notes   

  
    
  771 SOMEIPSRVFORMAT16 Major Version field of the Type 1 Entry  
Synopsis  The Major Version field of the Type 1 Entry format layout shall carry the 
SdServerServiceMajorVersion and SdClientServiceMajorVersion depending on 
being a server or client entry Note  Offer Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Insta nces  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification  Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00178 Page 29 Message form at MUST  
Notes   

  
    
  772 SOMEIPSRVFORMAT17 TTL field of the Type 1 Entry  
Synopsis  The TTL field of the Type 1 Entry format layout defines the lifetime of the entry in 
seconds configured using the parameter SdServerTimerTTL and 
SdClientTimerTTL except for St opEntries which have a TTL of 0 Note  Offer 
Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIP ENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00180 Page 29 Message format MUST  
Notes   

  
    
  773 SOMEIPSRVFORMAT18 Minor Version field of the Type 1 Entry  
Synopsis  The Minor Version field of the Type 1 Entry format layout shall carry the 
SdServerServiceM inorVersion and SdClientServiceMinorVersion Note  Offer 
Service is unnder Entry Type 1  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type  set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE Stop Service on DIfa ce0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00182 Page 30 Message format MUST  
Notes   

  
    
  774 SOMEIPSRVFORMAT 19 Type field of the Type 2 Entry  
Synopsis  The Type field of the Type 2 Entry form at layout shall carry one of the following 
values depending of the purpose of the sent message 0x06 to encode 
SubscribeEventgroup and StopSubscribeEventgroup 0x07 to encode 
SubscribeEventgroupAck and SubscribeEventgroupNack Note  
SubscribeEventgroupAck is unnder Entry Type 2 Test case is to verify 
SubscribeEventgroupAck  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENT RYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informatio ns 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00385 Page 30 Message format MUST  
Notes   

  
    
  775 SOMEIPSRVFORMAT 20 Length of Type 2 Entries  
Synopsis  The length of Type 2 Entries shall be 16 bytes Note  SubscribeEventgroupAck 
is unnder Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEI P Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime  on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT S ends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Entry Length is set to NumberOfEntries16  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Entry Length is set to NumberOfEntries16  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00183 Page 30 Message format MUST  
Notes   

  
    
  776 SOMEIPSRVFORMAT 21 Index First Option Run field of the Type 2 Entry  
Synopsis  The Index First Option Run field of the Type 2 Entry format layout shall carry the 
index of the first option of the first option run of this entry in the option array 
Note  SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Insta nces  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DU T 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER  CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Index 1st Option in Entry Array is set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Index 1st Option in Entry Array is set to 0  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00386 Page 31 Message format MUST  

  
    
  777 SOMEIPSRVFORMAT2 2 Number of Option 1 of the Type 2 Entry  
Synopsis  The Number of Option 1 of the Type 2 Entry format layout shall carry the 
number of options the first option run uses Note  SubscribeEventgroupAck is 
under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTR YSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Num of Opt 1 in Entry Array is greater than or equal to 
1 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Num of Opt 1 in Entry Array is greater than or equal to 1  
Reference  Specification of Se rvice Discovery V120 R41 Rev 3 Section 73 

  
    
  778 SWSSD00188 Page 31 Message format MUST  
Notes   

  
    
  779 SOMEIPSRVFORMAT2 3 Service ID field of the Type 2 Entry  
Synopsis  The Service ID field of the Type 2 Entry format layout shall carry the Service ID of 
the eventgroups service statically configured using the parameter 
SdServerServiceID and SdClientServiceID depending on being a server or client 
entry Note  SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00193 Page 32 Message format MUST  
Notes   

  
    
  780 SOMEIPSRVFORMAT2 4 Instance ID field of the Type 2 Entry  
Synopsis  The Instance ID field of the Type 2 Entry format layout shall carry the Instance ID 
of the eventgroups service statically configured using the parameter 
SdServerServiceInstanceID and SdClientServiceInstanceID depending on being a 
server or client entry N ote  SubscribeEventgroupAck is unnder Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOME IP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGrou p ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Instance ID in Entry Array is set to  
           SERVICE ID1INSTANCE ID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Instance ID in Entry Array is set to  
SERVICE ID1INSTANCE ID 

  
    
  781 Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00195  Page 32 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 5 Major Version field of the Type 2 Entry  
Synopsis  The Major Version field of the Type 2 Entry format layout shall carry the 
SdServerServiceMajorVersion and SdClientServiceMajorVersion depending on 
being a server or client entry Note  SubscribeEventgroupAck is under Entry Type 
2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Messa ge to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
9 DUT CONFIGURE  Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
  782 Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00198 Page 32 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 6 TTL field of the Type  2 Entry Entry  
Synopsis  The TTL field of the Type 2 Entry Entry format layout defines the lifetime of the 
entry in seconds configured using the parameter SdServerTimerTTL and 
SdClientTimerTTL except for Stop  or Nack Entries which use a TTL of 0 Note  
SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notific ation Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Su bscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  

  
    
  783 8 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00200 Page 32 Message format MUST  
Notes   
SOMEIPSRVFORM AT2 7 Reserved field which follows t he TTL field of the Type 2 
Entry  
Synopsis  The Reserved field which follows the TTL field of the Type 2 Entry format 
layout shall be statically set to 0x0000 Note  SubscribeEventgroupAck is under 
Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEI P Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  

  
    
  784          Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe E ventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Reserved in Entry Array is set to 0x0000  
9 DUT CONFIGURE Stop Servic e on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Reserved in Entry Array is set to 0x0000  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00202 Page 33 Message format MUST  
Notes   
SOMEIPSRVFORMAT2 8 Eventgroup ID field of the Type 2 Entry  
Synopsis  The Eventgroup ID field of the Type 2 Entry format layout shall carry the ID of an 
Eventgroup configured using the parameter SdConsumedEventGroupID Note  
SubscribeEventgroupAck is under Entry Type 2  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  

  
    
  785            EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 73 
SWSSD00204 Page 33 Message format MUST  
Notes   

  
    
  786 5153  Options Array  
SOMEIPSRVOPTIONS 01  Length field of the IPv4 Endpoint Option  
Synopsis  The Length field of the IPv4 Endpoint Option shall be set to 0x0009  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENT RYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message  
contains  
         Length of IPv4 EndPoint Option is set to 0x0009  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Length of IPv4 EndPoint Option is set to 0x0009  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00209 Page 36 Options Array MUST  
Notes   

  
    
  787 SOMEIPSRVOPT IONS 02  Type field of the IPv4 Endpoint Option  
Synopsis  The Type field of the IPv4 Endpoint Option shall be statically set to 0x04  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Type of Option Array is set to 
SOMEIPOPTIONIPV4ENDPOINT  
6 DUT CON FIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Type of Option Array  is set to SOMEIPOPTIONIPV4ENDPOINT  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00210 Page 36 Options Array MUST  
Notes   

  
    
  788 SOMEIPSRVOPTIONS 03  Reserved field of the IPv4 Endpoint Option  
Synopsis  The Reserved field of the IPv4 Endpoint Option followed by the IPv4 Address 
field of the Configuration Option segment shall be statically set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIP ENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Not ification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         First Reserved Field in IPv4 EndPoint Option is set to 
0x00 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID   SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 First Reserved Field in IPv4 EndPoint Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00211 Page 36 Options Array MUST  
Notes   

  
    
  789 SOMEIPSRVOPTIONS 04  IPv4 Address field of the IPv4 Endpoint Option  
Synopsis  The IPv4 Address field 32 bits of the IPv4 Endpoint Option shall be set to the 
local IP address of the relevant Service or Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Messa ge 
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         IP Address in IPv4 EndPoint Option is set to  
           SERVER1 IPADDR 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 IP Address in IPv4 EndPoint Option is set to  
SERVER1 IPADDR  
Reference  Specification of Service Discovery  V120 R41 Rev 3 Section 739 
SWSSD00212 Page 37 Options Array SHOULD  
Notes   

  
    
  790 SOMEIPSRVOPTIONS 05  Reserved field of the IPv4 Endpoint Option  
Synopsis  The Reserved field of the IPv4 Endpoint Option shall statically be set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Second Reserved Field in IPv4 EndPoint Option  is set to 
0x00 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Second Reserved Field in IPv4 EndPoint Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00213 Page 37 Options Array MUST  
Notes   

  
    
  791 SOMEIPSRVOPTIONS 06  Layer 4 Protocol field of th e IPv4 Endpoint Option  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Endpoint Option shall be 
set to one of the following values depending on the port specified 0x06 TCP 
0x11 UDP NOTE Checking For UDP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 EndPoint Option is set to 0x11  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 EndPoint Option is set to 0x11  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00214 Page 37 Options Array MUST  
Notes   

  
    
  792 SOMEIPSRVOPTIONS 07  Port Number field  of the IPv4 Endpoint Option  
Synopsis  The Port Number field 16 bits of the IPv4 Endpoint Option shall carry the UDP 
or TCP port number for the service instance or Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSE RVICE 
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Mess age 
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Port Number in IPv4 EndPoint Option is set to  
           SERVICE ID1UDPPORT 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Port Number in IPv4 EndPoint Option is set to  
SERVICE ID1UDP PORT  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00215 Page 37 Options Array MUST  
Notes   

  
    
  793 SOMEIPSRVOPTIONS 08  Length field  of the IPv4 Multicast Option  
Synopsis  The Length field 16 bits of the IPv4 Multicast Option shall be set to 0x0009   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification  Message 
contains  
         Length of IPv4 Multicast Option is set to 0x0009  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Length of IPv4 Multicast Option is set to 0x0009  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00390 P age 39 Options Array MUST  

  
    
  794 SOMEIPSRVOPTIONS 09  Type field of the IPv4 Multicast Option  
Synopsis  The Type field 8 bits of the IPv4 Multicast Option shall be statically set to 
0x14  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containi ng  
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamList enTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Type of Option Array is set to 
SOMEIPOPTIONIPV4MULTICAST  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
information s 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Type of Option Array is set to SOMEIPOPTIONIPV4MULTICAST  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 

  
    
  795 SWSSD00391 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS10 Reserved field after IPv4 Address of the IPv4 Multicast 
Option  
Synopsis  The Reserved field 8 bits of the IPv4 Multicast Option followed by the IPv4 
Address field of the Configuration Option segment shall be statically set to 0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Me ssage to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type s et to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Ty pe set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         First Reserved Field in IPv4 Multicast Option is set to 
0x00 
9 DUT CO NFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
  796 Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 First Reserved Field in IPv4 Multicast Option is set to 0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00392 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS11 IPv4 Address field  of the IPv4 Multicast Option  
Synopsis  The IPv4 Address field 32 bits of the IPv4 Multicast Option shall be set to the 
Multicast IP address of the Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  

  
    
  797          IP Address in IPv4 Multicast Option is set to  
           EVENTGROUPID1SI1MulticastAddr  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 IP Address in IPv4 Multicast Option is set to  
EVENT GROUP ID1SI1MulticastAddr  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00393 Page 39  Options Array MUST  
Notes   
SOMEIPSRVOPTIONS12 Reserved field  of the IPv4 Multicast Option  
Synopsis  The Reserved field 8 bits of the IPv4 Multicast Option shall statically be set to 
0x00  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIEN T1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto  ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 

  
    
  798 Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Second Reserved Field in IPv4 Multic ast Option is set 
to 
           0x00 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Second Reserved Field in IPv4 Multicast Option is set to  
0x00  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00394 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS13 Layer 4 Pr otocol field  of the IPv4 Multicast Option  for UDP  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Multicast Option shall 
be set to 0x11 UDP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  

  
    
  799          Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens  upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 Mul ticast Option is set to 
0x11 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 Multicast Option is set to 0x11  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWSSD00395 Page 39 Options Array MUST  
Notes   
SOMEIPSRVOPTIONS14 Port Number field of the IPv4 Multicast Option  
Synopsis  The Port Number field 16 bits of the IPv4 Multicast Option shall carry the port 
number for transporting Multicast Events of the Eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  

  
    
  800          Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP N otification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Entry Array set to SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Expected EventGroup ID in Subscribe Even tGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4MULTICAST  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains 
         Port Number in IPv4 Multicast Option is set to  
           SERVICE ID1UDPPORT 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 Port Number in IPv4 Multicast Option is set to  
SERVICE ID1UDP PORT  
Reference  Specification of Service Discovery V1 20 R41 Rev 3 Section 739 
SWSSD00396 Page 39 Options Array MUST  
Notes   

  
    
  801 SOMEIPSRVOPTIONS15 Layer 4 Pr otocol field  of the IPv4 Endpoint Option  for TCP  
Synopsis  The Layer 4 Protocol field 8 bits L4 Proto of the IPv4 Endpoint Option shall be 
set to one of the following values depending on the port specified 0x06 TCP 
0x11 UDP NOTE Checking For TCP  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 conta ining  
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Ver ify that received SOMEIP Notification Message 
contains  
         Transport Protocol in IPv4 EndPoint Option is set to 0x06  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Transport Protocol in IPv4 EndPoint Option is set to 0x06  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 739 
SWS SD00214 Page 37 Options Array MUST  
Notes   

  
    
  802 5154  Service  Discovery  Messages  
SOMEIPSRVSDMESSAGE 01  Instance ID  if all service instances shall be returned  
Synopsis  Instance ID shall be set to 0xFFFF if all service instances shall be returned It shall 
be set to the Instance ID of a specific service instance if just a single service 
instance shall be returned NOTE Checking For Instance ID 0xFFFF  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 2  
6 TESTER Extracts the content  of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
7 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Offer Service Entry 1 is not set 
to 
           extractedInstID2  
8 DUT CO NFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 2  
7 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  

  
    
  803 Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3  s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   
SOMEIPSRVSDMESSAGE 02  Instance ID  if a specific instance shall be returned  
Synopsis  Instance ID shall be set to 0xFFFF if all service instances shall be returned It shall 
be set to the Instance ID of a specific service instance if just a single service 
instance shall be returned NOTE Checking For Specific Instance ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general  Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto Para mListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 2  
6 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
7 TESTER Extra cts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to  
           extractedInstID1  
         Service ID in Entry Array set to SERVICE ID1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRY OFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 

  
    
  804 10 DUT Sends SOMEIP Notification Message  
11 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 1  
12 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to  
           extractedInstID2  
         Service ID in Entry Array set to SERVICE ID1 
13 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
14 DUT Sends SOMEIP Noti fication Message  
15 TESTER Verify that received SOMEIP Notification Message 
contains  
         Number of expected Offer Service Entry is set to 1  
16 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERV ICEID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 2  
10 DUT Sends SOMEIP Notification Message  
11 TESTER Verify t hat received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 1  
14 DUT Sends SOMEIP Notification Message  
15 TESTER Verify that received SOMEIP Notification Message contains  
 Number of expected Offer Service Entry is set to 1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  805 SOMEIPSRVSDMESSAGE 03  Major Version when any version shall be returned  
Synopsis  Major Version shall be set to 0xFF that means that services with any version shall 
be returned If set to value different than 0xFF services with this specific major 
version shall be returned only NOTE Checking For Major Version 0xFF  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Major Version set t o 
0xFF 
         SOMEIP Find Service Entry TTL set to 0xFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICE ID1MAJVER 
6 DUT CONF IGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  806 SOMEIPSRVSDMESSAGE 04  Major Version when a specific version shall be 
returned  
Synopsis  Major Version shall be set to 0xFF that means that services with any version shall 
be returned If set to value different than 0xFF services with this specific major 
version shall be returned only NOTE Checking For Specific Major Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Major Version se t to 
           SERVICE ID1MAJVER 
         SOMEIP Find Service Entry TTL set to 0xFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEI PENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Major Version in Entry Array is set to  
           SERVICEID1MAJVER 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Major Version in Entry Array is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  807 SOMEIPSRVSDMESSAGE 05  Minor Ver sion when any version shall be returned  
Synopsis  Minor Version shall be set to 0xFFFF FFFF that means that services with any 
version shall be returned If set to a value different to 0xFFFF FFFF services with 
this specific minor version shall be returned only NOTE Checking For Minor 
Version 0xFFFFFFF F  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Minor  Version set to  
           0xFFFFFFFF  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE Stop Service on  DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  808 SOMEIPSRVSDMESSAGE 06  Minor Version when a specific version shall be 
returned  
Synopsis  Minor Version shall be set to 0xFFFF FFFF that means that services with any 
version shall be returned If set to a value different to 0xFFFF FFFF services with 
this specific minor version shall be returned only NOTE Checking For Specific 
Minor  Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Mino r Version set to  
           SERVICE ID1MINORVER 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         Minor Version in Entry Array is set to  
           SERVICE ID1MINORVER 
6 DUT CONFIGURE St op Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Minor Version in Entry Array is set to  
SERVICE ID1MINOR VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67411 Find 
Service Entry TRSOMEIP00351 Page 66 MUST  
Notes   

  
    
  809 SOMEIPSRVSDMESSAGE 07  TTL and the lifetime of a service instance  
Synopsis  TTL shall be set to the lifetime of the service instance After this lifetime the 
service instance shall considered not been offered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFF ERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to SERVICE ID1TTL 
6 TESTER Wait  till SERVICE ID1TTL To Timeout offer service 
from DUT  
7 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
8 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet  Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODE EOK 
9 DUT Does not send SOMEIP Response Message  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to SERVICE ID1TTL  

  
    
  810 9 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67412 
Offer Service Entry TR SOMEIP00356 Page 67 MUST  
Notes   
SOMEIPSRVSDMESSAGE 08  Offer Service entries for IPv4  
Synopsis  Offer Service entries shall always reference at least an IPv4 or IPv6 Endpoint 
Option to signal how the service is reachable NOTE Test is for IPv4  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is 
greater 
           than or equal to 1  
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67412 
Offer Service Entry TRSOMEIP00357 Page 67 MUST  
Notes   

  
    
  811 SOMEIPSRVSDMESSAGE 09  Endpoint Options Port Numer  
Synopsis  The IP addresses and port numbers of the Endpoint Options shall also be used for 
transporting events and notification events In the case of UDP this information is 
used for the source address and the source port of the events and notification events 
NOTE This test is for UDP port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIE NT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime o n DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto Para mListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry set to EVENT GROUPID1SI1 

  
    
  812 10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Messa ge Expected UDP Src Port set to extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Pr otocol SOMEIP V110 R41 Rev 3 s67412 Offer 
Service Entry TRSOMEIP00360TRSOMEIP00361 Page MUST  
Notes   

  
    
  813 SOMEIPSRVSDMESSAGE10 Stop offer service and TTL field  
Synopsis  The stop offer service entry type shall be used to stop offering service instances 
Stop Offer Service entries shall set the entry fields exactly like the Offer Service 
entry they are stopping except TTL shall be set to 0x000000 NOTE Check For 
TTL  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 DUT CONFIGURE Stop Service on DIface0 with the following 
informations  
         Service ID  SERVICE ID1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSTOPOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to 0  
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
8 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67413 Stop 
Offer Service Entry TRSOMEIP00363 p age 68 MUST  
Notes   

  
    
  814 SOMEIPSRVSDMESSAGE11 Subscribe Eventgroup entry type  
Synopsis  The Subscribe Eventgroup entry type shall be used to subscribe to an eventgroup  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4  Endpoint Option is 
greater 
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to e xtractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 

  
    
  815 10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations 
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Message Expected UDP Dest Por t set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Send s SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67421 
Subscribe Eventgroup Entry TRSOMEIP00385 Page 68 MUST  
Notes   
SOMEIPSRVSDMESSAGE12 Stop Subscribe Eventgroup entry  
Synopsis  The Stop Subscribe Eventgroup entry type shall be used to stop subscribing to 
eventgroups Stop Subscribe Eventgroup entries shall set the entry fields exactly 
like the Subscribe Eventgroup entry they are stopping except TTL shall be set to 
0x000000  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  816 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SO MEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extra cts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
10 DUT Sends SOMEIP Notification Me ssage 
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto Pa ramListenTime on DIface 
0 
         SOMEIP Message Expected UDP Dest Port set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Ev ent ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 TESTER  CLIENT 1 Sends SOMEIP Notification Message to DUT  
         through DIface 0 containing   
         Entry Type set to SOMEIPENTRY STOPSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 

  
    
  817          Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
15 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
16 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Message Expected UDP Dest P ort set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
17 DUT Do es not send SOMEIP Notification Message  
18 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
17 DUT Does not send SOMEIP Notification Message  
Refer ence Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67422 Stop 
Subscribe Eventgroup Entry MUST  
Notes   

  
    
  818 SOMEIPSRVSDMESSAGE13 Subscribe Eventgroup Acknowledgment entry type  
Synopsis  The Subscribe Eventgroup Acknowledgment entry type shall be used to indicate that 
Subscribe Eventgroup entry was accepted Subscribe Eventgroup Acknowledgment 
entries shall set the entry fields in the following way Type shall be set to 0x07 
SubscribeEventgroupAck Service ID Instance ID Major Ver sion Eventgroup ID 
TTL and Reserved shall be the same value as in the Subcribe that is being 
answered  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in E ntry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup I D in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Ve rify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry is set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  

  
    
  819            EventGroup Ack Entr y is set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to EVENT GROUPID1SI1 
         TTL in Subscribe EventGroup Ack Entry is set to 0xFFFFFF  
         Reserved Field in Subscribe Ev entGroup Ack Entry is set to 
0 
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service ID in Subscribe EventGroup Ack  
Entry is set to SERVICE ID1 
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedInstID1  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to EVENT GROUP ID1SI1 
 TTL in Subscribe EventGroup Ack Entry is set to 0xFFFF FF 
 Reserved Field in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe EventGroup Ack Entry is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67423 
Subscribe Eventgroup  Acknowledgement Subscribe Eventgroup MUST  
Notes   
SOMEIPSRVSDMESSAGE14 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup  entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be t he same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 NOTE Check 
For TTL Field and Type  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 

  
    
  820          Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification M essage to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Ser vice ID in Subscribe EventGroup Ack  
           Entry set to UNKNOWN SERVICEID 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  821 SOMEIPSRVSDMESSAGE15 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 NOTE 
Checking for later Condition that Service ID I nstance ID Major Version 
Eventgroup ID and Reserved shall be the same value as in the subscribe   
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup  ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe Eve ntGroup Ack  
           Entry set to UNKNOWN SERVICEID 

  
    
  822 8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack  Entry is set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to EVENT GROUPID1SI1 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
         Reserved Field in Subscribe Even tGroup Ack Entry is set to 
0 
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Cri teria 4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedI nstID1  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to EVENT GROUP ID1SI1 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
 Reserved Field in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe Even tGroup Ack Entry is set to  
SERVICE ID1MAJ VER  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  823 SOMEIPSRVSDMESSAGE16 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative A cknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general I nput Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           UNKNOWN SERVICEID 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGr oup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
8 DUT Sends  SOMEIP Notification Message  

  
    
  824 9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry is set to UNKNOWN SERVICEID 
         TTL in Subscribe EventGroup Ack  Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify th at received SOMEIP Notification Message contains  
 SOMEIP Expected Service ID in Subscribe EventGroup Ack  
Entry is set to UNKNOWN SERVICE ID 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   
SOMEIPSRVSDMESSAGE17 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative A cknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Instance ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOF FERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 

  
    
  825 4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID11  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Service Instance ID in Subs cribe 
           EventGroup Ack Entry is set to extractedInstID11  
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteri a 4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Service Instance ID in Subscribe  
EventGroup Ack Entry is set to extractedInstI D11  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  826 SOMEIPSRVSDMESSAGE18 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set th e entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answered The TTL shall be set to 0x000000  Reasons for 
sending a Subscribe Eventgroup Negative Acknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Major Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER1 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  

  
    
  827            Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message 
contains 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
         Major Version in Subscribe EventGroup Ack Entry is set to  
           SERVICE ID1MAJVER1 
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Subscribe EventGroup Ack Entry is set to 0  
 Major Version in Subscribe EventGroup Ack Entry is set to  
SERVICE ID1MAJ VER1  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subscribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   
SOMEIPSRVSDMESSAGE19 Subscribe Eventgroup Negative Acknowledgment 
entry type  
Synopsis  The Subscribe Eventgroup Negative Acknowledgment entry type shall be used to 
indicate that Subscribe Eventgroup entry was NOT accepted Subscribe Eventgroup 
Negative Acknowledgment entries shall set the entry fields in the following way 
Type shall be set to 0x07 SubscribeEventgroupAck Service ID Instance ID 
Major Version Eventgroup ID and Reserved shall be the same value as in the 
subscribe that is being answere d The TTL shall be set to 0x000000 Reasons for 
sending a Subscribe Eventgroup Negative Acknowledgment include Combination 
of Service ID Instance ID Eventgroup ID and Major Version is unknown NOTE 
Test For Unknown Event Group ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 

  
    
  828          Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Se rvice Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0xFFFFFF  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           UNKNOWN EVENTGROUPID 
         Service Instance ID in Subsc ribe Eventgroup Entry set to  
           extractedInstID1  
         Major Version in Subscribe EventGroup Entry set to  
           SERVICE ID1MAJVER 
         Reserved Field in Subscribe EventGroup Ack Entry set to 0  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify th at received SOMEIP Notification Message 
contains  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
           Entry is set to UNKNOWN EVENTGROUPID 
         TTL in Subscribe EventGroup Ack Entry is set to 0  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
9 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected EventGroup ID in Subscribe EventGroup Ack  
Entry is set to UNKNOWN EVENT GROUP ID 
 TTL in Subscribe EventGroup Ack Entry is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s67424 
Subsc ribe Eventgroup Negative Acknowledgement Subscribe MUST  
Notes   

  
    
  829 5155  Service  Discovery  Communication  Behavior  
SOMEIPSRVSDBEHAVIOR 01  After message s in the Repeti tion Phase the delay is 
doubled  
Synopsis  After sending the first message the Repetition Phase of this Service Instancethese 
Service Instances is entered After each message sent in the Repetition Phase the 
delay is doubled  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Message  
4 TESTER CLIENT 1 Listens upto  
        SERVICE ID1REPBASEINTV3ParamToleranceTime second 
on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
5 DUT Sends 2 SOMEIP Notification Messages  
6 TESTER Verify that the time interval b etween 
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is greater than  
        SERVICE ID1REPBASEINTV2   
         ParamToleranceTimeMillisec micro second  
7 TESTER Verify that the ti me interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is less than  
        SERVICE ID1REPBASEINTV2    
         ParamToleranceTimeMillisec micro second  
8 DUT CONFIGURE S top Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
5 DUT Sends 2 SOMEIP Notification Messages  
6 TESTER Verify that the time interval between  
recepti on of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  

  
    
  830 SERVICE ID1REPBASE INTV2  
ParamToleranceTimeMillisec micro second  
7 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is less than  
SERVICE ID1REPBASE INTV2   
ParamToleranceTimeMillisec micro second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6751 
Startup Behavior TRSOMEIP00404 TRSOMEIP00406 Page 71 
SHOULD  
Notes   

  
    
  831 SOMEIPSRVSDBEHAVIOR 02  Main Phase Offer Messages and Publish Messages  
cyclically  
Synopsis  In the Main Phase Offer Messages and Publish Messages shall be sent cyclically 
if a CYCLICOFFERDELAY is configured  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Noti fication Message  
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Phase  
5 TESTER CLIENT 1 Listens upto  
        SERVICE ID1CYCLEINTV2ParamToleranceTime second on 
DIface0 
         Entry Type set to SOMEIPENTR YOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
6 DUT Sends 2 SOMEIP Notification Messages  
7 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notifica tion Message  
         is greater than  
        SERVICE ID1CYCLEINTV    ParamToleranceTime 
second 
8 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is less than  
        SERVICE ID1CYCLEINTV    ParamToleranceTime 
second 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Me ssage  
6 DUT Sends 2 SOMEIP Notification Messages  
7 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  

  
    
  832 SERVICE ID1CYCLE INTV  ParamToleranceTime secon d 
8 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is less than  
SERVICE ID1CYCLE INTV  ParamToleranceTime second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6751 
Startup Behavior TRSOMEIP00412 Page 71 SHOULD  
Notes   
SOMEIPSRVSDBEHAVIOR 03  Response  if the last offer was more than half of cyclic 
offer delay  
Synopsis  Find messages received with the Unicast Flag set to 1 shall be answered with a 
multicast RESPONSE if the last offer was sent 12 CYCLICOFFERDELAY or 
longer ago  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Message  
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Pha se 
5 TESTER CLIENT 1 Listens upto SERVICE ID1CYCLEINTV 
second 
        on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
6 DUT Sends SOMEIP Notification Message  
7 TESTER Wait till SERVICE ID1CYCLEINTV2 For DUT to 
consume 
        12 CyclicOfferDelay  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 

  
    
  833          Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Message Expected IP Dst Address set to  
           SOMEIPMULTICASTIPADDR  
10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
6 DUT Sends SOMEIP Notification Message  
10 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6752 
Server Answer Behavior TRSOMEIP00423 Pag e 73 SHOULD  
Notes   

  
    
  834 SOMEIPSRVSDBEHAVIOR 04  Response for Find messages with Unicast Flag set to 0  
Synopsis  Find messages received with Unicast Flag set to 0 multicast shall be answered 
with a multicast response  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 DUT Sends SOMEIP Notification Messa ge 
4 TESTER Wait till SERVICE ID1TOTALREPINTV For DUT to 
enter 
        Main Phase  
5 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Unicast Flag in Notification Message set to 0  
         Service ID in Entry Array set to SERVICE ID1 
6 TESTER CLIENT 1 Listens upto SERVICE ID1CYCLEINTV 
second 
        on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         SOMEIP Message Expected IP Dst Address set to  
           SOMEIPMULTICASTIPADDR  
7 DUT Sends SOMEIP Notification Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the followin g 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  3 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6752 
Server Answer Beh avior TRSOMEIP00423 Page 73 SHOULD  
Notes   

  
    
  835 SOMEIPSRVSDBEHAVIOR 05  Stop offering Service Instances  
Synopsis  The Stop Offer Service entry type shall be used to stop offering Service Instances  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICEID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Stop Service on DIface 0 with the followin g 
informations  
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 

  
    
  836          Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
11 DUT Sends SOME IP Notification Message  
12 TESTER Verify that received SOMEIP Notification Message 
contains  
         TTL in Entry Array is set to 0  
13 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
14 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Arr ay set to SERVICE ID1 
15 DUT Does not send SOMEIP Notification Message  
16 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DU T Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
12 TESTER Verify that received SOMEIP Notification Message contains  
 TTL in Entry Array is set to 0  
15 DUT Does not send SOMEIP Notification Message  
Reference  Specif ication of Service Discovery V120 R41 Rev 3 Section 745 
SWSSD00422 Page 48 StopOfferService entry SHOULD  
Notes   

  
    
  837 SOMEIPSRVSDBEHAVIOR 06  Stop subscribing to an Eventgroup  
Synopsis  To stop subscribing to an Eventgroup the StopSubscribeEventgroup entry shall 
be used  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set t o SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscrib e EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 

  
    
  838          Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Eve nt ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSTO PSUBSCRIBE  
         SOMEIP Subscribe Eventgroup Entry TTL set to 0x000000  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           SERVICE ID1INSTANCE ID 
13 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Ex pected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
14 DUT Does not send SOMEIP Notification Message  
15 DUT CONFIGURE Stop Service on DIface 0 with the following  
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
14 DUT Does not send SOMEIP Notification Message  
Reference  Specification of Service Discovery V120 R41 Rev 3 Section 7462 Page 50 
StopSubscribeEventgroup entry SHOULD  
Notes   

  
    
  839 5156  SOME IP Basic  Functionality  
SOMEIPSRVBASIC 01  Define service using the Service ID  
Synopsis  A service shall be identified using the Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOME IP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID s et to 
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected R eturn Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DU T Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00001 Page 14 MUST  
Notes   

  
    
  840 SOMEIPSRVBASIC 02  Reserved values for Service Instance IDs  
Synopsis  The Service Instance IDs of 0x0000 and 0xFFFF shall not be used for a service 
since 0x0000 is reserved and 0xFFFF is used to describe all service instances  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         SOMEIP Find Service Entry Service Instance ID set to 
0xFFFF 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Mess age 
contains  
         Service Instance ID of Offer Service Entry 1 is not set 
to 0 
         Service Instance ID of Offer Service Entry 1 is not set 
to 
           0xFFFF 
6 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to 0  
 Service Instance ID of Offer Se rvice Entry 1 is not set to  
0xFFFF  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00008 Page 14 MUST  
Notes   

  
    
  841 SOMEIPSRVBASIC 03  Method ID of a notification has highest bit set to 1  
Synopsis  Methods shall use Method IDs with the highest bit set to 0 while the Method IDs 
highest bit shall be set to 1 for events and notifications of fields NOTE Checking 
for notification  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER  CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime  on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message 
contains  
         SOMEIP Expected Number Of IPv4 Endpoint Option is 
greater 
           than or equal to 1  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedport  
7 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
8 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set t o 
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
9 TESTER CLIENT 1 Listens upto  ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  

  
    
  842          SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
10 DUT Sends SOMEIP Notification Message  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP M essage Expected UDP Dest Port set to 
extractedport  
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
13 DUT Sends SOMEIP Notification Message  
14 TESTER Verify that received SOMEIP Notification Message 
contains  
         0Bit field of MethodEventID in SOMEIP Packet Header 
is 
           set to 1  
15 DUT CONFIGURE Stop Service on D Iface0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
5 TESTER Verify that received SOMEIP Notification Message contains  
 SOMEIP Expected Number Of IPv4 Endpoint Option  is greater  
than or equal to 1  
10 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
14 TESTER Verify that received SOMEIP Notification Message contains  
 0Bit field of MethodEventID in SOMEIP Packet Header is  
set to 1 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s61 
Definition of Identifiers TRSOMEIP00011 Page 14 MUST  
Notes   

  
    
  843 5157  Specification  of the SOMEIP  onwire  format  
SOMEIPSRVONWIRE 01  IP addresses and port number  of the Reponse message  
Synopsis  For the response and error message the IP addresses and port number of the 
transport protocol shall match the request message NOTE Checking for Response 
message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on D Iface
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 conta ining  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Message Expected IP Src Address set to  
           SERVER1 IPADDR 
         SOMEIP Message Expected IP Dst Address set to  
           CLIENT1 IPADDR 
         SOMEIP Message Expected UDP Src Port set to  
           SERVICE ID1UDPPORT 
         SOMEIP Message Expected UDP Dest Port set to  
           CLIENT1 UDPPORT 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEI PRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  

  
    
  844 7 DUT Sends SOMEIP Respon se Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s62311 
Mapping of IP Addresses and Ports in Response and Error MUST  
Notes   

  
    
  845 SOMEIPSRVONWIRE 02  MSB of Method ID in Response Message  
Synopsis  With 16 Bit Service ID and a 16 Bit Method ID starting with a 0 Bit this allows 
for up to 65536 services with up to 32768 methods each NOTE Checking for 0 bit 
in MSB of Method ID in Response Message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTim e on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         0Bit field of  MethodEventID in SOMEIP Packet Header is  
           set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOME IP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 0Bit field of MethodEventID in SOMEIP Packet Header is  
set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s62321 
Structure of the Message ID TRSOMEIP00038 Page 18 MUST  
Notes   

  
    
  846 SOMEIPSRVONWIRE 03  Copy Request ID from the request to the response message  
Synopsis  When generating a response message the server has to copy the Request ID from 
the request to the response message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Proce dure 1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on  
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message 
contains  
         SOMEIP Packet Expected Header Request ID is set to  
           CLIENT1 CURRREQUESTID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Mes sage 
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 SOMEIP Packet Expected Header Request ID is set to  
CLIENT1 CURR REQUEST ID 

  
    
  847 Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6234 
Request ID 32 Bit TRSOMEIP00043 Page 19 MUST  
Notes   
SOMEIPSRVONWIRE 04  Request IDs may be reused if response arrived  
Synopsis  Request IDs might be reused as soon as the response arrived or is not expected to 
arrive anymore timeout NOTE Testing first condition where response arrived  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Chec k section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type  set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Pac ket Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIE NT1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to S OMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  848 0 
         SOMEIP Packet  Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
10 DUT Sends SOMEIP Response Message  
11 DUT CONFIGURE  Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
10 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6234 
Request ID 32 Bit TRSOMEIP00044 Page 19 MUST  
Notes   
SOMEIPSRVONWIRE 05  Protocol Version  
Synopsis  Protocol Version is an 8 Bit field containing the SOMEIP protocol version which 
currently shall be set to 0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedu re 1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Protocol Version set to 0x01  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header  Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Protocol Version set to 0xFF  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID se t to 
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  849 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEWRONGPROTOCOLVERSION  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Mes sage to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Protocol Version set to 0x01  
         SOMEIP Send Request Message Service  ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Protocol Version set to 0x01  
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODE EOK 
10 DUT Sends SOMEIP Response Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
10 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6235 
Protocol Version 8 Bit TRSOMEIP00052 Page 20 MUST  
Notes   

  
    
  850 SOMEIPSRVONWIRE 06  Interface Version  
Synopsis  Interface Version is an 8 Bit field that contains the Major Version of the Service 
Interface  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE  Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Typ e set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set  to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Ex pected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         Interface Version is set to S ERVICEID1INTFVERMAJ 
9 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header In terface Version set to  
           UNKNOWN INTFVERMAJSI1 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
  851            METHODID1SI1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Interface Version set to UNKNOWN INTFVERMAJSI1 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVIC EID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEWRONGINTERFACEVERSION  
11 DUT Sends SOMEIPMSGTYPEERROR Message  
12 DUT CONFIGURE Stop Service on DIfac e0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 Interface Versi on is set to SERVICE ID1INTF VER MAJ  
11 DUT Sends SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6236 
Interface Version 8 Bit TRSOMEIP00053 Page 20 MUST  
Notes   
SOMEIPSRVONWIRE 07  Message Type  and Response after a Request  
Synopsis  The Message Type field is used to differentiate different types of messages and shall 
contain the following values 0x00 REQUEST A request expecting a response even 
void 0x80 RESPONSE The response message NOTE Testing Response message 
after sending a request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSE RVICE 
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Se nds SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  

  
    
  852         DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send He ader Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Interface Version set to SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to  SERVICEID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informati ons 
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP 00055 Page 20 MUST  
Notes   

  
    
  853 SOMEIPSRVONWIRE 08  Message Type  and Request no Return  
Synopsis  The Message Type field is used to differentiate different types of messages and 
shall contain the following values 0x01 REQUESTNORETURN A fire forget 
request  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface  Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens u pto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Does not send SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Send s SOMEIP Notification Message  
7 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MUST  

  
    
  854 SOMEIPSRVONWIRE 09  Message Type and Request ACK  
Synopsis  The Message Type field is used to differentiate different types of messages and 
shall contain the following values 0x40 REQUESTACK Acknowledgment for 
REQUEST optional  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamList enTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Se rvice ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIPMSGTYPE REQUESTACK Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEREQUESTACK Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MAY  

  
    
  855 SOMEIPSRVONWIRE10 Message Type and Unkown Service ID  
Synopsis  The Message Type field is used to differentiate different types  of messages and 
shall contain the following values 0x81 ERROR The response containing an error 
NOTE Checking for error UNKNOWN Service ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFF ERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto Par amListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           UNKNOWN SERVICEID 
         SOMEIP Send Request Me ssage Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 

  
    
  856 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to UNKNOWN SERVICEID 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNSERVICE  
10 DUT Sends SOMEIPMSGTYPEERROR Message  
11 DUT CONFIGURE Stop Servi ce on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
10 DUT Sends SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6237 
Message Type 8 Bit TRSOMEIP00055 Page 20 MUST  
Notes   
SOMEIPSRVONWIRE11 Return code for normal request response  
Synopsis  The Return Code is used to signal whether a request was success fully been 
processed NOTE Checking for Normal Request Response Communication ie 
Error Code EOK  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
  857            METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
7 DUT Sends SOMEIP Response Message  
8 TESTER  Verify that received SOMEIP Response Message contains  
         Return Code is set to SOMEIPRETCODEEOK  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 Return Code is set to SOMEIPRETCODEEOK  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6238 
Return Code 8 Bit TRSOMEIP00058 TRSOMEIP00191 Page 21 
MUST  
Notes   
SOMEIPSRVONWIRE12 Return code for an Unknown Method ID error  
Synopsis  The Return Code is used to signal whether a request was successfully been 
processed NOTE Chec king for Error in case of Unknown Method ID in Request 
Response Communication ie Error Code EUNKNOWNMETHOD  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 

  
    
  858          SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
7 DUT Sends SOMEIPMSGTYP EERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         Return Code is set to SOMEIPRETCODEEUNKNOWNMETHOD  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SE RVICEID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Return Code is set to SOMEIPRETCODEEUNKNOWNMETHOD  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6238 Return 
Code 8 Bit TRSOMEIP00058 TRSOMEIP00191 Page 21 MUST  
Notes   

  
    
  859 5158  RPC  Protocol  specification  
SOMEIPSRVRPC 01  Use a single TCP connection for all Methods  
Synopsis  The c lient and server shall use a single TCP connection for all methods events 
and notifications of a service instance NOTE This test is for methods  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPE NTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID2 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI2 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expe cted Service ID set to SERVICE ID2 
         SOMEIP Expected Method ID set to METHOD ID1SI2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  

  
    
  860 Notes   
SOMEIPSRVRPC 02  Use a single TCP connection for all Notifications  
Synopsis  The client and server shall use a single TCP connection for all methods events 
and notifications of a service instance NOTE This test is for Notifications  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID2 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6  
7 TESTER CL IENT1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID2 
         EventGroup ID in Subs cribe Eventgroup Entry set to  
           EVENTGROUPID1SI2 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
8 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to  SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID2 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI2 
9 DUT Sends SOMEIP Notification Message  
10  
11 DUT CONFIGURE Trigger Event on DIface 0 with the following 

  
    
  861 informations  
         Event ID  EVENT ID1EGID2 
         Event Group ID  EVENT GROUPID1SI2 
         Service ID  SERVICE ID2 
12 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID2 
13 DUT Sends SOMEIP Notification Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
9 DUT Sends SOMEIP Notification Message  
13 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  
Notes   

  
    
  862 SOMEIPSRVRPC 03  Getter of a field method  
Synopsis  The getter of a field shall be a requestresponse call that has an empty payload in 
the request message and the value of the field in the payload of the response 
message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Noti fication Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICEID1 
         SOMEIP Send Request Message Method ID set to  
           METHODIDGETSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD IDGETSI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Extracts the content of SOMEIP Packet Length to  
        extractedPktLen  
9 TESTER Verify that received SOMEIP Response Message contains  
         SOMEIP Expected Response Message Payload is set to  
           METHODIDGETSI1RESPPAYLOADSERIALIZED  
10 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  

  
    
  863 7 DUT Sends SOMEIP Response Message  
9 TESTER Verify that received SOMEIP Response  Message contains  
 SOMEIP Expected Response Message Payload is set to  
METHOD IDGET SI1RESP PAYLOAD SERIALIZED  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s635 Fields 
TRSOMEIP00181 Page 38 MUST  
Notes   
SOMEIPSRVRPC 04  Fire  forget requests  
Synopsis  Requests without response message are called fireforget The implementation is 
basically the same as for RequestResponse with the following differences There is 
no response message The message type is s et to REQUESTNORETURN ie 
0x01  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notific ation Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Hea der Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 

  
    
  864          SOMEIP Expected Method ID set to METHO DID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
7 DUT Does not send SOMEIP Response Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s633 
FireForget Communication TRSOMEIP00170 Page 36 MUST  
Notes   
SOMEIPSRVRPC 05 Fire  forget requests  shall return no error  
Synopsis  Fire  Forget messages shall not return an error The system shall not return an 
error message for fireforget methods  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input  
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIPMSGTYPEREQUESTNORETURN 
Message 
        to DUT through DIface 0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set  to 
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 

  
    
  865          SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI
1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s633 
FireForget Communication TRSOMEIP00171 TRSOMEIP00189 
MUST  
Notes   
SOMEIPSRVRPC 06  Error handling the the bits of the return code  
Synopsis  The Error Handling is based on an 8 Bit StdreturnType  The two most 
significant bits are reserved and shall be set to 0  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSER VICE 
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set  to 
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 

  
    
  866 6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Ser vice ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODID
SI1 
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         Most Significant 2 bits in Retu rn Code is set to 0  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Most Significant 2 bits in Return Code is set to 0  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00187 Page 38 MUST  
Notes   
SOMEIPSRV RPC 07  Ignore the two most significant bits from return code  
Synopsis  The receiver of a return code shall ignore the values of the two most significant 
bits  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   

  
    
  867          SOMEIP Packet Send  Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Code set to 0xC0  
         SOMEIP Send Request Messa ge Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID se t to 
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
7 DUT Sends SOMEIP Re sponse Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00187 Page 38 MUST  
Notes   
SOMEIPSRVRPC 08  Do not reply to messages already carrying an error  
Synopsis  Implementations shall not answer with errors to SOMEIP message already 
carrying an error ie return code 0x01  0x1f  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  

  
    
  868 5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Code set to 0x01  
         SOMEIP Send Request Message Service ID set to  
           SERVICEID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Packet Header Return Co de set to 0x1f  
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
10 DUT Does not send SOMEIPMSGTYPEE RROR Message  
11 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
10 DUT Does not  send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 
Return Code TRSOMEIP00539 Page 40 MUST  
Notes   

  
    
  869 SOMEIPSRVRPC 09  No payload in Error message  
Synopsis  For requestresponse metho ds the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Return Code have to be set to the 
appropriate values NOTE Checking for No Payload  in Error message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamLi stenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Packet Header Length is set to 8  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  870 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Packet Header Length is set to 8  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC10 Do not return an  error if Message Type is incorrect  
Synopsis  The system shall not return an error message for eventsnotifications and 
fireforget methods if the Message Type is set incorrectly to Request or Response 
NOTE Checking for Fire and Forget Method  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODIDFIREFORGETSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIfac e
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to  
           METHODIDFIREFORGETSI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEENOTOK  

  
    
  871 7 DUT Does not send SOMEIPMSGTYPEERROR Message  
8 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Does not send SOMEIPMSGTYPEERROR Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00537 Page 39 MUST  
Notes   
SOMEIPSRVRPC11 Setter of a field and payload  
Synopsis  The setter of a field shall be a requestresponse call that has the desired valued of 
the field in the payload of the request message and the value that was set to field in 
the payload of the response message  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP R equest Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID2SI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP P acket Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID2SI1 

  
    
  872          SOMEIP Expected Return Code set to SOMEIPRET CODEEOK  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
         SOMEIP Packet Header Length is greater than 8  
         SOMEIP Expected Response Message Payload is set to  
           METHODID2SI1RESPSERIALIZED  
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIP Response Message  
8 TESTER Verify that received SOMEIP Response Message contains  
 SOMEIP Packet Header Length is greater than 8  
 SOMEIP Expected Response Message Payload is set to  
METHOD ID2SI1RESP SERIALIZED  
Reference  Example for a Serialization Protocol SOMEIP V110 R41  Rev 3 s635 Fields 
TRSOMEIP00182 Page 38 MUST  
Notes   

  
    
  873 SOMEIPSRVRPC12 Notifier and event message on field change  
Synopsis  The notifier shall send an event message that transports the value of a field on 
change and follows the rules for events  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the  content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set 
to 
           extractedIns tID1 
7 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expe cted Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 

  
    
  874          Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListen Time on 
DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s635 Fields 
TRSOMEIP00183 Page 38 MUST  
Notes   

  
    
  875 SOMEIPSRVRPC13 Different services can share the same port  
Synopsis  While different Ser vices shall be able to share the same port number of the transport 
layer protocol used multiple Service Instances of the same service on one single 
ECU shall listen on different ports per Service Instance NOTE Checking For case  
Different Services same  port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  1  
2 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
         Number Of Instances  1  
3 TESTER CLIENT 1 Sends SOMEIP Notification Message t o DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         Service ID in Entry Array set to  SERVICEID2 
4 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
         Service ID in Entry Array set to SERVICE ID2 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 1  
5 DUT Sends SOMEIP Notification Message  
6 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option  
        Transport Port to extractedTransPort  
7 TESTER Set Destination Port Of client1 to extractedTransPort  
8 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID se t to 
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
9 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 

  
    
  876          SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
10 DUT Sends SOMEIP Response Message  
11 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID2INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID2 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI2 
12 TESTER CLIENT 1 Listens upto ParamListenT ime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID2 
         SOMEIP Expected Method ID set to METHOD ID1SI2 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
13 DUT Sends SOMEIP Response Message  
14 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
15 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID2 
Pass Criteria  5 DUT Sends SOMEIP Notification Message  
10 DUT Sends SOMEIP Response Message  
13 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6313 
Multiple Service Instances TRSOMEIP00163 Page 35 MAY  
Notes   

  
    
  877 SOMEIPSRVRPC14 Different instances of the same service must use different ports  
Synopsis  While different Services shall be able to share the same po rt number of the transport 
layer protocol used multiple Service Instances of the same service on one single 
ECU shall listen on different ports per Service Instance NOTE Checking For case  
Different instances of same Service different port  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID   SERVICEID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVIC EID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Services Service ID set to SERVICE ID1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 2  
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID o f Offer 
Service 
        Entry 2 to extractedInstID2  
6 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Offer Service Entry 1 is not set to  
           extractedInstID2  
7 TESTER Extracts the content of  SOMEIP IPv4 Endpoint Option 
Number 1  
        Transport Port to extractedTransPort1  
8 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 2  
        Transport Port to extractedTransPort2  
9 TESTER Set Destination Port Of client1 to extr actedTransPort1  
10 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface V ersion set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  

  
    
  878            METHODID1SI1 
11 TESTER CLIENT 1 Listens up to ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
12 DUT Sends SOMEIP Response Message  
13 TESTER Set Destination Port Of client1 to extractedTransPort2  
14 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID2INTFVERMAJ 
         SOMEIP Send Request Message Service  ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
15 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
16 DUT Sends SOMEIP Response M essage 
17 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
6 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  
12 DUT Sends SOMEIP Response Message  
16 DUT Sends SOMEIP Response Message  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6313 
Multiple Servic eInstances TRSOMEIP00163 Page 35 MUST  
Notes   

  
    
  879 SOMEIPSRVRPC15 Update on change value  
Synopsis  Update on change  send an update as soon as a value changes eg door open  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOME IP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 1 to extractedIns tID1 
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in Subscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Service Instance ID in Subscribe  
           EventGroup Ack Entry set to extr actedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIGURE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID1EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 

  
    
  880 DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID1EGID1 
11 DUT Sends SOMEIP Notification Message  
12 DUT CONFIGURE Stop Service on DIface 0 with t he following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends SOMEIP Notification Message  
Reference  Example for a Serialization Protocol  SOMEIP V110 R41 Rev 3 s6341 
Strategy for sending notifications TRSOMEIP00176 Page 37 MUST  
Notes   

  
    
  881 SOMEIPSRVRPC16 Cyclic update  of a value  
Synopsis  Cyclic update  send an updated value in a fixed interval eg every 300 ms  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of  Service Instance ID of Offer 
Service 
        Entry 1 to extractedInstID1  
6 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYSUBSCRIBE  
         Service ID in S ubscribe Eventgroup Entry set to  
           SERVICE ID1 
         EventGroup ID in Subscribe Eventgroup Entry set to  
           EVENTGROUPID1SI1 
         Service Instance ID in Subscribe Eventgroup Entry set to  
           extractedInstID1  
7 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 
0 
         Entry Type set to SOMEIPENTRYSUBSCRIBEACK  
         SOMEIP Expected Service ID in Subscribe EventGroup Ack  
           Entry set to SERVICE ID1 
         SOMEIP Expected Servic e Instance ID in Subscribe  
           EventGroup Ack Entry set to extractedInstID1  
         SOMEIP Expected EventGroup ID in Subscribe EventGroup 
Ack 
           Entry set to EVENT GROUPID1SI1 
8 DUT Sends SOMEIP Notification Message  
9 DUT CONFIG URE Trigger Event on DIface 0 with the following 
informations  
         Event ID  EVENT ID2EGID1 
         Event Group ID  EVENT GROUPID1SI1 
         Service ID  SERVICE ID1 
10 TESTER CLIENT 1 Listens upto ParamListenTime on 

  
    
  882 DIface0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Return Code set to SOMEIPRETCODEEOK  
         SOMEIP Expected Event ID in SOMEIP Header set to  
           EVENTID2EGID1 
11 DUT Sends 2 SOMEIP N otification Messages  
12 TESTER Verify that the time interval between  
        reception of 1st SOMEIP Notification Message and 2nd  
         SOMEIP Notification Message  
         is greater than  
        EVENTID2EGID1CYCLICTIME   
         ParamToleranceTimeMillisec micro second  
13 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
8 DUT Sends SOMEIP Notification Message  
11 DUT Sends 2 SOMEIP Notification Messages  
12 TESTER Verify that the time interval between  
reception of 1st SOMEIP Notification Message and 2nd  
SOMEIP Notification Message  
is greater than  
EVENT ID2EGID1CYCLIC TIME  
ParamToleranceTimeMilli sec micro second  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6341 
Strategy for sending notifications TRSOMEIP00176 Page 37 MUST  
Notes   

  
    
  883 SOMEIPSRVRPC17 Multiple instances use multiple TCP connections  
Synopsis  When having more than one instance of a service a TCP connection per services 
instance is needed  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  2  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Expected Offer Serv ices Service ID set to SERVICE ID
1 
         SOMEIP Expected Type of Option set to  
           SOMEIPOPTIONIPV4ENDPOINT  
         SOMEIP Expected Number Of IPv4 Endpoint Option set to 2  
         Number Of Expected Offer Service Entries set to 2  
4 DUT Sends SOMEIP Notification Message  
5 TESTER Extracts the content of Service Instance ID of Offer 
Service 
        Entry 2 to extractedInstID2  
6 TESTER Verify that received SOMEIP Notification Message 
contains  
         Service Instance ID of Off er Service Entry 1 is not set 
to 
           extractedInstID2  
7 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 1  
        Transport Port to extractedTransPort1  
8 TESTER Extracts the content of SOMEIP IPv4 Endpoint Option 
Number 2  
        Transport Port to extractedTransPort2  
9 TESTER Set Destination Port Of client1 to extractedTransPort1  
10 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 

  
    
  884          SOMEIP Send Re quest Message Method ID set to  
           METHODID1SI1 
11 TESTER CLIENT 1 Listens upto ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Se rvice ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
12 DUT Sends SOMEIP Response Message  
13 TESTER Set Destination Port Of client1 to 
extracte dTransPort2  
14 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT 
through 
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Versi on set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           METHODID1SI1 
15 TESTER CLIENT 1 Listens upto  ParamListenTime on 
DIface0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to METHOD ID1SI1 
         SOMEIP Expected Return Code set to 
SOMEIPRETCODEEOK  
16 DUT Sends SOMEIP Response Message  
17 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
6 TESTER Verify that received SOMEIP Notification Message contains  
 Service Instance ID of Offer Service Entry 1 is not set to  
extractedInstID2  
12 DUT Sends SOMEIP Response Message  
16 DUT Sends SOMEIP Response Message  
Refer ence Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6312 TCP 
Binding TRSOMEIP00150 Page 33 MUST  
Notes   

  
    
  885 SOMEIPSRVRPC18 In Response copy Message ID  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Return Code have to be set to the 
appropriate values NOT E Checking For Message ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in En try Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamLi stenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Expected Service ID is set to SERVICE ID1 
         SOMEIP Expected Method ID is set to  
           UNKNOWN METHODIDSI1 
9 DUT CONFIGURE Stop Service on DIfa ce0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  886 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Expected Service ID is set to SERVICE ID1 
 SOMEIP Expected Method ID is set to  
UNKNOWN METHOD IDSI1 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC19 In Response copy Request ID  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message Type and Re turn Code have to be set to the 
appropriate values NOTE Checking For Request ID  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set t o SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry Array set to SE RVICEID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 
         SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  

  
    
  887 8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
         SOMEIP Packet Expected Header Request ID is set to  
           CLIENT1 CURRREQUESTID 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 SOMEIP Packet Expected Header Request ID is set to  
CLIENT1 CURR REQUEST ID 
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362 Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
SOMEIPSRVRPC20 In Response copy Interface Version  
Synopsis  For requestresponse methods the error message shall copy over the fields of the 
SOMEIP header ie Message ID Request ID and Interface Version but not the 
payload In addition Message T ype and Return Code have to be set to the 
appropriate values NOTE Checking For Interface Version  
Prerequisites  Check section prerequisites  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 DUT CONFIGURE Start Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
         Number Of Instances  1  
2 TESTER CLIENT 1 Sends SOMEIP Notification Message to DUT 
through 
        DIface0 containing   
         Entry Type set to SOMEIPENTRYFINDSERVICE  
         Service ID in Entry Array set to SERVICE ID1 
3 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         Entry Type set to SOMEIPENTRYOFFERSERVICE  
         Service ID in Entry  Array set to SERVICE ID1 
4 DUT Sends SOMEIP Notification Message  
5 TESTER CLIENT 1 Sends SOMEIP Request Message to DUT through  
        DIface0 containing   
         SOMEIP Packet Send Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Packet Send Header Interface Version set to  
           SERVICE ID1INTFVERMAJ 
         SOMEIP Send Request Message Service ID set to  
           SERVICE ID1 

  
    
  888          SOMEIP Send Request Message Method ID set to  
           UNKNOWN METHODIDSI1 
6 TESTER CLIENT 1 Listens upto ParamListenTime on DIface 0 
         SOMEIP Packet Expected Header Request ID set to  
           CLIENT1 CURRREQUESTID 
         SOMEIP Expected Service ID set to SERVICE ID1 
         SOMEIP Expected Method ID set to UNKNOWN METHODIDSI1 
         SOMEIP Expected Return Code set to  
           SOMEIPRETCODEEUNKNOWNMETHOD  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Mes sage 
contains  
         Interface Version is set to SERVICE ID1INTFVERMAJ 
9 DUT CONFIGURE Stop Service on DIface 0 with the following 
informations  
         Service ID  SERVICE ID1 
Pass Criteria  4 DUT Sends SOMEIP Notification Message  
7 DUT Sends SOMEIPMSGTYPEERROR Message  
8 TESTER Verify that received SOMEIPMSGTYPEERROR Message 
contains  
 Interface Version is set to SERVICE ID1INTF VER MAJ  
Reference  Example for a Serialization Protocol SOMEIP V110 R41 Rev 3 s6362  Return 
Code TRSOMEIP00190 Page 39 MUST  
Notes   
 
 
  

  
    
  889 516  Test Cases ETS  
51611  SOMEIPETS01 ArrayLengthlongerasmessagelengthallowsit  
Synopsys  Check that the DUT gives back an error message when the array length is longer 
then the SOMEIP length allows it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section ge neral Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
longer than allowed by message length  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
PRSSOMEIP00099  
PRSSOMEIP00100  
Notes  The test will also pass if the DU T ignor es the request   
 
51612  SOMEIPETS02  ArrayLengthtoolong  
Synopsys  Check that the DUT gives back an error message when the array length i s longer 
than the actual array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
longer than the actual array  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00902PRSSOMEIP00099  
Notes  The test will also pass if the DU T ignor es the request   
 

  
    
  890 51613  SOMEIPETS03 ArrayLengthtooshortstripsPayload  
Synopsys  Check that the DUT strips the payload of the array to the array length when the 
array length is shorter then the actual array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with Array Length 
shorter then the actual array  
2 TESTER send SOMEIP Message  using method echoUINT8   
3 DUT returns method response M essage with stripped 
Payload 
Pass Criteria  DUT returns method response M essage with stripped Payload  
Reference  PRSSOMEIP00099  
Notes    
 
51614  SOMEIPETS 04 BurstTest  
Synopsys  Check that the DUT can handle  a burst  of requests in a short time and process 
them to give back an answer to all of them  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create valid SOMEIP Message   
2 TESTER send burst of SOMEIP Message  requests using 
method echoUINT8   
3 DUT returns method response M essage response to each 
request 
Pass Criteria  DUT returns method response M essage response to each request  
Reference  PRSSOMEIP00065  
Notes    
 
51615  SOMEIPETS 05 checkByteOrder  
Synopsys  Check byte order handling of parameters sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  891 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  with two parameters 
UINT8 and UINT16  
2 TESTER send SOMEIP Message  using method checkByteOrder  
3 DUT returns method response message with valid UINT32 
value  sum of the two passed Parameters UINT8  
UINT16 in the Request  
Pass Criteria  DUT returns method response message with valid UINT32 value  sum 
of the two passed Parameters UINT8  UINT16 in the Request  
Reference  PRSSOMEIP00191PRSSOMEIP00065  
Notes    
51616  SOMEIPETS 07 echoBitfields  
Synopsys  Check  the bitfields and the ir order  sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoBitfields  
3 DUT returns method response message with bitfields in 
reversed order per bitfield  compared to the reuquest  
Pass Criteria  DUT returns method response message with bitfields in reversed 
order per bitfield  compared to the reuquest  
Reference  PRSSOMEIP00191PRSSOMEIP 003001PRSSOMEIP00300  
Notes    
 
51617  SOMEIPETS 08 echoCommonDatatypes  
Synopsys  Check Common  Datatypes boolean UINT81632 INT81632 float32 
parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 

  
    
  892 echoCommonDatatypes  
3 DUT returns method response message with same data 
values and order as in the request  
Pass Criteria  DUT returns method response message with same content values 
and order as in the request  
Reference  PRSSOMEIP00065  
Notes    
 
51618  SOMEIPETS 09 echoENUM  
Synopsys  Check Enum parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message 
2 TESTER send SOMEIP Message  using method echoENUM  
3 DUT returns method response message with same data 
values and order as in the request  
Pass Criteria  DUT returns method response message with same content values 
and order as in the request  
Reference  PRSSOMEIP00191  
Notes    
 
51619  SOMEIPETS 12 echoExtDatatypes16BitLengthStructureOfStrings  
Synopsys  Check echoExtendedDatatypes16BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with  a 16Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes16BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  

  
    
  893 Reference  PRSSOMEIP00079  
Notes   
 
516110  SOMEIPETS 13 echoExtDatatypes16BitLengthStructureOfStringUnion  
Synopsys  Check echoExtendedDatatypes16BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 16Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes16BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00079  
Notes   
 
516111  SOMEIPETS 14 echoExtDatatypes8BitLengthStructureOfStrings  
Synopsys  Check echoExtendedDatatypes8BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 8Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testabilit y Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes8BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00079  
Notes   
 

  
    
  894 516112  SOMEIPETS 15 echoExtDatatypes8BitLengthStructureOfStringUnion  
Synopsys  Check echoExtendedDatatypes8BitLengthAndTypeField parameters and their order 
sending and receiving  The method returns the passed parameter with a 8Bit 
Length and Type field  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoExtendedDatatypes8BitLengthAndTypeField  
2 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00191  
Notes   
 
516113  SOMEIPETS 19 echoFLOAT64  
Synopsys  Check echoFLOAT64 parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER create SOMEIP Message  
4 TESTER send SOMEIP Message  using method echoFLOAT64  
5 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516114  SOMEIPETS21  echoINT8  
Synopsys  Check echoINT8  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  895 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message 
2 TESTER send SOMEIP Message  using method echoINT8  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516115  SOMEIPETS22  echoStaticUINT8ArrayOneDimensional  
Synopsys  Check echoStaticUINT8ArrayOne Dimensional parameters and their order 
sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoStaticUINT8Array  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00099PRSSOMEIP00100  
Notes   
 
516116  SOMEIPETS25  echoTYPEDEF  
Synopsys  Check echoTypedef parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  

  
    
  896 2 TESTER send SOMEIP Message  using method echoTypedef  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516117  SOMEIPETS27  echoUINT8  
Synopsys  Check echoUINT8  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoUINT8  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00052PRSSOMEIP00053PRSSOMEIP00058  
Notes   
 
516118  SOMEIPETS 28 echoUINT8Array  
Synopsys  Check echoUINT8Array  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array  
3 DUT returns method response message with same value 
as in the request 
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00375PRSSOMEIP00377  

  
    
  897 PRSSOMEIP00114PRSSOMEIP00052PRSSOMEIP00053  
Notes    
516119  SOMEIPETS 29 echoUINT8Array16Bitlength  
Synopsys  Check  echoUINT8Array16BitLength parameters and that the length field is 16 Bit 
long and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array16Bitlength  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00375PRSSOMEIP00377  
PRSSOMEIP00052PRSSOMEIP00107  
Notes   
 
516120  SOMEIPETS30  echoUINT8Array2Dim  
Synopsys  Check echoUINT8Array2Dim  parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array2Dim  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00101PRSSOMEIP00102  
PRSSOMEIP00377PRSSOMEIP00114PRSSOMEIP00052  
Notes   

  
    
  898  
516121  SOMEIPETS31  echoUINT8Array8Bitlength  
Synopsys  Check echoUINT8Array8BitLength parameters and that the length field is 8 Bit 
long and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8Array8Bitlength  
3 DUT returns method response message with same value as 
in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00099PRSSOMEIP00100PRSSOMEIP00052  
Notes    
516122  SOMEIPETS32  echoUINT8ArrayMinSize  
Synopsys  Check echoUINT8ArrayMinSize  parameters and their order sending and 
receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8ArrayMinSize  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00377PRSSOMEIP00114  
Notes   
 

  
    
  899 516123  SOMEIPETS33  echoUINT8ArrayMinSize tooshort  
Synopsys  Check that the DUT can handle an echoUINT8ArrayMinSize which is shorter 
than 3 elements of the array  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  with a too short arra y 
using method echoUINT8ArrayMinSize  
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00377PRSSOMEIP00114  
Notes   
 
516124  SOMEIPETS34  echoUINT8E2E  
Synopsys  The method returns the transferred UINT8 value back to the invoker The 
method is E2E protected  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameter s 
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8E2E  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065  
Notes   
 
516125  SOMEIPETS35  echoUINT8RELIABLE  
Synopsys  Check echoUINT8RELIABLE parameters and their order and check for handling 
a tcp connection sending and receiving  

  
    
  900 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8RELIABLE  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request  
Reference  PRSSOMEIP00065PRSSOMEIP00708  
Notes   
 
516126  SOMEIPETS36 echoUINT8RELIABLECheckMagicCookies  
Synopsys  Check that the DUT sends out magic cookie messages by sending a lot of 
SOMEIP messages over TCP  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUINT8RELIABLE  
3 DUT returns method response message with same value 
as in the request  
4 DUT sends Magic cookies  
Pass Criteria  DUT returns method response message with same value as in the 
request 
DUT sends Magic cookies  
Reference  PRSSOMEIP00154PRSSOMEIP00161  
Notes   
516127  SOMEIPETS37 
echoUINT8RELIABLEclientclosesTCPconnectionautomatically  
Synopsys  Client builds up a connection and sends a  reset interface message  
 DUT sends a FINACK when the service is stopped  
 Client shall close tcp connection automatically according to FINACK from 
DUT  tcp connection successful  

  
    
  901 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a reset interface message  
2 DUT sends a FINACK when the service is stopped  
Pass Criteria  DUT sends a FINACK when the service is stopped 
Reference  PRSSOMEIP00708PRSSOMEIP00711  
Notes   
 
516128  SOMEIPETS38  echoUNION  
Synopsys  Check echoUNION parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method echoUNION  
3 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes   
 
516129  SOMEIPETS39  echoUTF16DYNAMIC  
Synopsys  Check echoUNION parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  
3 DUT returns method response message with same value 

  
    
  902 as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00084PRSSOMEIP00085  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516130  SOMEIPETS40 echoUTF16DYNAMIClengthtoolongforString  
Synopsys  Tester sending out a length which is longer than the actual string and DUT 
should give back  an Error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with too big length  
2 DUT returns Error Message  MALFORMEDMESSAGE   
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
516131  SOMEIPETS41 
echoUTF16DYNAMIClengthtooshortformalformedString  
Synopsys  According to the SOMEIP specification for UTF 16 strings with dynamic length 
devices receiving this type of strings shall strip the total amount of bytes received to 
fit the exact length specified int the strings length field This test case wi ll request 
the DUT to reply a echoUTF16DYNAMIC as defined in the Testability Service 
carrying a dynamic UTF 16 string whose specified length forces the DUT to reduce 
the received string to only 2 bytes  resulting in an invalid payload consisting only o f 
an incomplete BOM  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  903 Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with  
i Source MAC set to the testers MAC address  
ii destination MAC set to the DUTs MAC address  
iii  Source Port set to 30492  
iv destination port  set to the UDP endpoint option 
provided by the DUTs OfferService for the 
Testability Service  
v Source I P set to the testers IP address  
vi destination IP set to the UDP endpoint option 
provided by the DUTs OfferServi ce for the 
Testability Service  
vii  ServiceID set to 0x0101  
viii  Instance Id set to 0x01  
ix MethodID set to 0x0016  
x Payload 0x00 00 00 80 FE FF 00 48 00 48  00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48  
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00  48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 00  
2 DUT returns method response message with same value as 
in the request  
3 TESTER repeat  step 1 but changing the payload of the 
echoUTF16Dynamic re quest to  
xi 0x00 00 00 02 FE FF 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 
00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 48 00 
48 00 48 00 48 00 48 00 48 00 48 00 00  
  
4 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns method response message with  same value as in the 
request 
DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00084PRSSOMEIP00085  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516132  SOMEIPETS42 echoUTF16DYNAMIClengthtooshortforString  
Synopsys  Check that the DUT rejects with a malformed message an echoUTF16DYNAMIC 

  
    
  904 string which has a length that is shorter than the actual string  
Prerequisites  DUT ETS is running and offering th e Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER create SOMEIP Message  
2 TESTER send SOMEIP Message  with a length which is 
shorter than the actual string  using method 
echoUTF16DYNAMIC  
3 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
 
516133  SOMEIPETS43 echoUTF16DYNAMICoddnumberbeforetermination  
Synopsys  Check that the DUT can handle an echoUTF16DYNAMIC string which has an odd 
number by sending a byte more before the termination and the DUT should give 
back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte before the termination  using method 
echoUTF16DYNAMIC  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372PRSSOMEIP00085  
PRSSOMEIP00086PRSSOMEIP00092  
Notes   
516134  SOMEIPETS44 
echoUTF16DYNAMICwithoddnumberaftertermination  
Synopsys  Check that the  DUT can handle an echoUTF16DYNAMIC string which has an odd 
number by sending a byte more after the termination and the DUT should strip this 
byte away  

  
    
  905 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte after the termination  using method 
echoUTF16DYNAMIC  
2 DUT returns method response message with  odd number 
after the termination and corrected  values 
Pass Criteria  DUT returns method response message with odd number after the 
termination and corrected  values 
Reference  PRSSOMEIP00372PRSSOMEIP00085  
PRSSOMEIP00086PRSSOMEIP00092  
Notes   
 
516135  SOMEIPETS4 5 echoUTF16DYNAMICwrongBOM  
Synopsys  Check that the DUT can handle an echoUTF16DYNAMIC string which has a 
wrong BOM and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with a wrong BOM  using 
method echoUTF16DYNAMIC  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00087  
Notes   
516136  SOMEIPETS46  echoUTF16FIXED  
Synopsys  Check echoUTF16FIXED parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using method 

  
    
  906 echoUTF16FIXED  
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 
Reference  PRSSOMEIP00373PRSSOMEIP00084  
PRSSOMEIP00085PRSSOMEIP00087  
Notes   
 
516137  SOMEIPETS47 echoUTF16FIXEDwithoddnumber  
Synopsys  Check that the DUT can handle an echoUTF16FIXED string which has an odd 
number by sending a byte more after the termination and the DUT should strip this 
byte away  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section  general Input Parameters  
Test Procedure  3 TESTER send SOMEIP Message  which has an odd number by 
sending one additional  byte after the termination  using method 
echoUTF16FIXED  
1 DUT returns method response message with odd number 
after the termination and without the additional byte  
Pass Criteria  DUT returns method response message with odd number after the 
termination and without the additional byte  
Reference  PRSSOMEIP00085PRSSOMEIP00086  
Notes   
516138  SOMEIPETS48  echoUTF8DYNAMIC  
Synopsys  Check echoUTF8DYNAMIC parameters and their order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message using method 
echoUTF8DYNAMIC   
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 

  
    
  907 request 
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516139  SOMEIPETS49 echoUTF8DYNAMIClengthtoolongforString  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
length that is longer than the actual string and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has a length that is longer 
than the actual string  using method echoUTF8DYNAMIC   
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372  
Notes   
516140  SOMEIPETS50 
echoUTF8DYNAMIClengthtooshortformalformedString  
Synopsys  According to the SOMEIP specification for UTF 8 strings with dynamic length 
ECUs receiving this type of strings shall strip the total amount  of bytes received to fit 
the exact length specified in the strings length field This test case will request the 
DUT to reply an echoUTF8DYNAMIC as defined in the Testability Service 
carrying a dynamic UTF 8 string whose specified length forces the DU T to reduce 
the received string to only 2 bytes  resulting in an invalid payload consisting only of 
an incomplete BOM  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check sect ion general Input Parameters  
Test 
Procedure  1 TESTER send SOMEIP Message  using method 
echoUTF16DYNAMIC  with  
xii  Source MAC set to the testers MAC address  

  
    
  908 xiii  destination MAC set to the DUTs MAC address  
xiv  Source Port set to 30492  
xv destination port  set to the UDP endpoint option 
provided by the DUTs OfferService for the 
Testability Service  
xvi  Source IP set to the testers IP address  
xvii  destination IP set to the UDP endpoint option 
provided by the DUTs OfferServi ce for the 
Testability Service  
xviii  ServiceID set to 0x0101  
xix  Instance Id set to 0x01  
xx MethodID set to 0x0015  
xxi  Payload 0x00 00 00 80 EF BB BF 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 4 8 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 00  
2 DUT returns method response message with  same value as 
in the request  
3 TESTER repeat  step 1 but changing the payload of the 
echoUTF16Dynamic request to  
xxii  0x00 00 00 02 EF BB BF 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 
48 48 48 48 48 48 48 48 48 48 48 48 00  
 
4 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns method response message with same value as in the 
request 
DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00093PRSSOMEIP00372  
PRSSOMEIP00087PRSSOMEIP00091  
PRSSOMEIP00092PRSSOMEIP00094  
PRSSOMEIP00095  
Notes   
 
516141  SOMEIPETS51 echoUTF8DYNAMIClengthtooshortforString  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
length that is shorter than the actual string  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
  909 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  which has a length that is 
shorter  than the actual string  using method echoUTF8DYNAMIC   
2 DUT returns method response message with data string 
stripped to the length field value  
Pass Criteria  DUT returns method response message with data string stripped to 
the length field value  
Reference  PRSSOMEIP00372  
Notes   
516142  SOMEIPETS5 2 echoUTF8DYNAMICwrongBOM  
Synopsys  Check that the DUT can handle an echoUTF8DYNAMIC string which has a 
wrong BOM and the DUT should give back an error  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with wrong BOM using method 
echoUTF8DYNAMIC   
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00372PRSSOMEIP00087  
PRSSOMEIP00091PRSSOMEIP00092  
PRSSOMEIP00094PRSSOMEIP00095  
Notes   
516143  SOMEIPETS5 3 echoUTF8FIXED  
Synopsys  Check echoUTF8FIXED parameters and their  order sending and receiving  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  using  method echoUTF8FIXED  
2 DUT returns method response message with same value 
as in the request  
Pass Criteria  DUT returns method response message with same value as in the 
request 

  
    
  910 Reference  PRSSOMEIP00373PRSSOMEIP00087  
Notes   
516144  SOMEIPETS5 4 Lengthequals0Test  
Synopsys  Check that the DUT gives back an error message when the SOMEIP length 
equals zero  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with length zero  using  
method echoUINT8  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
Notes   
516145  SOMEIPETS55 Lengthsmallerthan8Test  
Synopsys  Check that the DUT gives back an error message when the SOMEIP length is 
less than  8 bytes  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with length less than  8 bytes 
using  method echoUINT8  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00042  
Notes   
516146  SOMEIPETS58 Lengthwaytoolong  
Synopsys  Tester sends a much longer SOMEIP length than the current payload with a few 
requests and DUT should give back an Error message or directly ignore it  

  
    
  911 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP messages with a much longer SOMEIP 
length than the current payload  
2 DUT returns Error Message  MALFORMEDMESSAGE  or 
ignores the Message  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  or ignores the 
Message 
Reference  PRSSOMEIP00902PRSSOMEIP00191  
Notes   
516147  SOMEIPETS59 
ResetInterfacewrongFireandforgetpackagegetNoErrorback  
Synopsys  Check that the DUT doesnt answer or send an error message to a wrong 
FireForget message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER use method TestFieldUINT8  with Field Getter 
method 
2 DUT returns the requested field value  
3 TESTER store the returned value and increment it  
4 TESTER use  method TestFieldUINT8  with Setter method 
and set the incremented value  
5 DUT return the field value which was set by the 
Tester 
6 TESTER trigger a reset of the interface by using 
method resetInte rface 
7 TESTER use  method TestFieldUINT8  with Field Getter 
method to request the field value again  
8 DUT returns the incremented value which was set by 
the Tester in step 4  
Pass Criteria  DUT returns the incremented value which was set by the Tester in 
step 4 
Reference  PRSSOMEIP00701PRSSOMEIP00170  
PRSSOMEIP00171PRSSOMEIP00189  
Notes   

  
    
  912 516148  SOMEIPETS60 SDDiscoverPortandIP  
Synopsys  The DUT has to answer the Testers Multicast FindService with a Unicast 
OfferService stating all IPs and Ports needed to fulfill all sort of possible 
Comunications with it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send Multicast FindService  
2 DUT returns Unicast OfferService stating all IPs and Ports 
needed to fulfill all sort of possible Comunications with it  
Pass Criteria  DUT returns Unicast OfferService stating all IPs and Ports needed to fulfill all 
sort of possible Comunications with it  
Reference  PRSSOMEIPSD00310PRSSOMEIPSD00357  
PRSSOMEIPSD00358PRSSOMEIPSD00361  
PRSSOMEIPSD00362  
Notes   
 
516149  SOMEIPETS61 SendingtwoSOMEIPMessagesinarow  
Synopsys  Sending three SOMEIP messages in one UDP package DUT has to reply on all 
three SOMEIP messages  and send the correct response  
Check the handling when more SOMEIP messages are in one transport protocol 
frame  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send two SOMEIP messages in one UDP frame  eg 
using the methods echoUINT8 and echoENUM  in combination  
4 DUT returns the method results of both requests in one 
message or separate messages  
Pass Criteria  DUT returns the method results of both requests in one message or 
separate messages  
Reference  PRSSOMEIPSD00310PRSSOMEIPSD00357  
PRSSOMEIPSD00358PRSSOMEIPSD00361  

  
    
  913 PRSSOMEIPSD00362  
Notes   
516150  SOMEIPETS63 StringUTF16FIXEDtoolongstripsto64Byte  
Synopsys  Check that the DUT strips a UTF16FIXED string which is too long to 64 Byte  
Check string length handling  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a echoUTF16FIXED message with 
unrepairable payload  
2 DUT returns Error Message  MALFORMEDMESSAGE  
3 TESTER send a echoUTF16FIXED message with 
repairable payload  
4 DUT answers with a correctly repaired message  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
DUT answers with a correctly repaired message  
Reference  PRSSOMEIP00373  
Notes   
516151  SOMEIPETS64 StringUTF16FIXEDtooshort  
Synopsys  Check that the DUT which has a UTF16FIXED string which is shorter than 64 
Byte gives back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  5 TESTER send SOMEIP Message  with string which is shorter 
than 64 Byte using method echoUTF16FIXED   
6 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00373  
Notes   

  
    
  914 516152  SOMEIPETS65 StringUTF8FIXEDtoolongstripsto64Byte  
Synopsys  Check that the DUT strips a UTF8FIXED string which is too  large  larger than  64 
Byte  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with string which is lager  
than 64 Byte using method echoUTF16FIXED   
2 DUT returns method response message with payload  
stripped to 64 Byte  
Pass Criteria  DUT returns method response message with payload stripped to 64 
Byte 
Reference  PRSSOMEIP00373  
Notes   
516153  SOMEIPETS66 StringUTF8FIXEDtooshort  
Synopsys  Check that the DUT which has a UTF8FIXED string which is shorter than 64 
Byte gives back an error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with string which is shorter  
than 64 Byte using method UTF8FIXED  
2 DUT returns Error Message  MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message  MALFORMEDMESSAGE  
Reference  PRSSOMEIP00373  
Notes   
516154  SOMEIPETS67 UINT8ArraywithLength0stripsPayload  
Synopsys  Check that the DUT strips the array to no payload when the array length equals 
zero  

  
    
  915 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Paramet ers Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message  with array length equal to zero 
using method UINT8Array  
2 DUT returns method response message with payload 
length zero no payload  
Pass Criteria  DUT returns method response message with payload length zero no 
payload  
Reference  PRSSOMEIP00375PRSSOMEIP00377PRSSOMEIP00114  
Notes   
516155  SOMEIPETS68 UnalignedSOMEIPMessagesoverTCP  
Synopsys  Sending three SOMEIP messages in one TCP package and one SOMEI P message 
is unaligned DUT has  to reply to all three SOMEIP messages and send the correct 
response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send three SOMEIP Message s in one TCP package  
with one unaligned SOMEI P message using method 
echoUINT8array  
2 DUT returns method response messages to all three 
requests  
Pass Criteria  DUT returns method response messages to all three requests  
Reference  PRSSOMEIP00142PRSSOMEIP00569  
Notes   
516156  SOMEIPETS69 UnalignedSOMEIPMessagesoverUDP  
Synopsys  Sending three SOMEIP messages in one UDP package and one SOMEIP message is 
unaligned DUT hast to reply on all three SOMEIP messages and send the correct 
response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  916 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send three SOMEIP Messages in one UDP package  
with one unaligned SOMEIP message using method echoUINT8array  
2 DUT returns method response messages to all three 
requests  
Pass Criteria  DUT returns method response messages to all three requests  
Reference  PRSSOMEIP00142PRSSOMEIP00569  
Notes  
 
516157  SOMEIPETS70 UnionLengthlongerasmesagelengthallowsit  
Synopsys  Check that the DUT gives back an error message when the union length is longer then the 
SOMEIP length allows it  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where the union length is longer 
then the SOMEIP length allows it  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516158  SOMEIPETS71 UnionLengthtoolong  
Synopsys  Check that the DUT gives back an error message when the union length is longer than the 

  
    
  917 actual union  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union length is longer 
than the actual union  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516159  SOMEIPETS72 UnionLengthtooshort  
Synopsys  Tester sending out a request where the union length is shorter than the actual message 
length allows it and the DUT should give back an Error message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union length is is 
shorter than the actual message length allows it  using method echoUNION 
2 DUT returns Error Message MALFORMEDMESSAGE  
Pass Criteria  DUT returns Error Message MALFORMEDMESSAGE  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 

  
    
  918 516160  SOMEIPETS73 
UnionwithwrongtypefieldforunionmemberPadding  
Synopsys  Check that the DUT gives back the correct Union for the type field with or without 
padding when the union has the wrong type field for the payload  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message where  the union has the wrong 
type field for the payload  using method echoUNION 
2 DUT returns method response messages with the correct 
union type and adjusted padding  
Pass Criteria  DUT returns method response messages with the correct union type 
and adjusted padding  
Reference  PRSSOMEIP00119PRSSOMEIP00126  
Notes  
 
516161  SOMEIPETS74  WrongInterfaceVersion  
Synopsys  Check that the DUT gives back an error message or ignores it when a wrong interface 
version arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with wrong Interface Version 
using method echoU INT8 
2 DUT returns Error Message WRONGINTERFACEVERSION  or ignores 
the request  
Pass Criteria  DUT returns Error Message WRONGINTERFACEVERSION  or ignores the request  

  
    
  919 Reference  PRSSOMEIP00053PRSSOMEIP00058  
PRSSOMEIP00190PRSSOMEIP00191  
Notes  
 
516162  SOMEIPETS75  WrongMessageType  
Synopsys  Check that the DUT gives back an error message or ignore s it when a wrong Message  
Type  arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SOMEIP Message with wrong Message Type  using 
method echoU INT8 
2 DUT returns Error Message WRONGMESSAGETYPE  or ignores the 
request  
Pass Criteria  DUT returns Error Message WRONGMESSAGETYPE  or ignores the request  
Reference  PRSSOMEIP00055PRSSOMEIP00701  
Notes  
 
516163  SOMEIPETS76  WrongMethodID  
Synopsys  Check that the DUT gives back an error message or ignore s it when a wrong M ethod ID 
arrives in a request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  920 Test Procedure  1 TESTER send SOMEIP Message with wrong M ethod ID using method 
echoU INT8 
2 DUT returns Error Message UNKNOWNMETHOD  or ignores the 
request  
Pass Criteria  DUT returns Error Message UNKNOWNMETHOD  or ignores the request  
Reference  PRSSOMEIP00058PRSSOMEIP00190  
PRSSOMEIP00191PRSSOMEIP00055  
Notes  
 
516164  SOMEIPETS77  WrongServiceID  
Synopsys  Check that the DUT gives back  an error message when a wrong S ervice I D arrives in a 
request or the DU T shall ignore the request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SOMEIP Message with wrong S ervice I D using method 
echoU INT8 
4 DUT returns Error Message UNKNOWNSERVICE  or ignores the request  
Pass Criteria  DUT returns Error Message UNKNOWNSERVICE  or ignores the request  
Reference  PRSSOMEIP00190PRSSOMEIP00191  
Notes  
 
 
516165  SOMEIPETS78 WrongSOMEIPProtocolVersion  
Synopsys  Check that the DUT gives back  an error message when a wrong Protocol Version arrives in 
a request or the DU T shall ignore the request  

  
    
  921 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  5 TESTER send SOMEIP Message with wrong Protocol Version using 
method echoU  echoUINT8 NION  
6 DUT returns Error Message WRONGPROTOCOLVERSION or ignores the 
request  
Pass Criteria  DUT returns Error Message WRONGPROTOCOLVERSION or ignores the request  
Reference  PRSSOMEIP00052PR SSOMEIP00190PRSSOMEIP00191  
Notes  
 
 
516166  SOMEIPETS81 ClientServiceActivateServerreboot  
Synopsys  Check if the DUT detected a reboot of a server it reacts properly by re establishing the 
communication  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  
2 TESTER  send OfferService to offer the Testers ETS with a TCP Endpoint 
option  
3 DUT establishes a TCP connection with the tester based o n the offered 
end point options  
4 DUT subscribes to the event group clientServiceSubscribeEventgroup 
0x0032 The end point option of this subscription shall match the 
parameters of the TCP connection IP address and port  
5 TESTER  send SubscribeEventgroup Ack to the DU T 
6 TESTER simulate  a reboot by sending OfferService entries in SOMEIP SD 
message with lower Session ID as before  

  
    
  922 7 DUT renew s its TCP connection by closing the old one and opening a new 
one 
Pass Criteria  DUT establishes a TCP connection with the tester based on the offered end point options  
DUT subscribes to the event group clientServiceSubscribeEventgroup 0x0032 The end 
point option of this subscription shall match the parameters of the TCP connection IP 
address and port  
DUT renews its TCP connection by closing the old one and opening a new one  
Reference  PRSSOMEIPSD00385  
Notes  No ICMP port unreachable message shall be sent from the DUT 
 
516167  SOMEIPETS82 ClientServiceActivateServerreboot2  
Synopsys  Check if the DUT detected a reboot of a server it reacts properly by using the newly 
assigned UDP Port  
Prerequisites  DUT ETS is  running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  
2 TESTER  send OfferService to offer the Testers ETS with a UDP Endpoint 
option  
3 DUT subscribes to the event group clientServ iceSubscribeEventgroup 
0x0032  
4 TESTER  send SubscribeEventgroup Ack to the DU T 
5 TESTER send a SOMEIP Event to the D UT 
6 TESTER simulate  a reboot by sending OfferService entries in SOMEIP SD 
message with lower Session ID as before  
7 TESTER send OfferService to offer the Testers ETS again with another 
UDP port in the endpoint option  
8 DUT subscribes again to  the event group 
clientServ iceSubscribeEventgroup 0x0032  
9 TESTER  send SubscribeEventgroup Ack to the DU T 
10 TESTER send  a SOMEIP Event to the D UT from the new UDP port  

  
    
  923 Pass Criteria  DUT subscribes to the event group clientServiceSubscribeEventgroup 0x0032  
DUT subscribes again t o the event group clientServiceSubscribeEventgroup 0x0032  
Reference  PRSSOMEIPSD00385  
Notes  No ICMP port unreachable message shall be sent from the DUT 
516168  SOMEIPETS84  ClientServiceDeactivate  
Synopsys  The DUT is expected to stop the Client Mode halting all reactions to clientService related 
Requests  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DU Ts ETS client Service mode  by method 
clientServiceActivate  with a t imeout value  of 1 Second  
2 DUT starts the  client Start up Phase  
3 TESTER trigger the DUT to subscribe to the Testers Eventgroup using 
method clientServiceSubscribeEventgroup  
4 TESTER send OfferService message with the eventgroup parameterized 
in step 3  
5 DUT sends SubscribeEventgroup  
6 TESTER  deactivate the DU Ts ETS client Service mode  by method 
clientServiceDeactivate  
7 DUT sends StopSubscribeEventgroup  to cancel the subscription of step 5  
Pass Criteria  DUT starts the client Start up Phase  
DUT sends SubscribeEventgroup  
DUT sends StopSubscribeEventgroup  to cacnel the subscription of step 5  
Reference  PRSSOMEIPSD00386PRSSOMEIP00710  
PRSSOMEIP007 08PRSSOMEIPSD00351  
Notes  
 

  
    
  924 516169  SOMEIPETS85  EventgroupEventsAndFieldsAll2  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fiel ds regarding the 
Eventgroup 0x02  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated 
in the SubscribeEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
TestfieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 
SubscribeEventgroup Messag e 
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387  
PRSSOMEIPSD00391  
Notes   
516170  SOMEIPETS86  EventgroupEventsAndFieldsAll2 TCP  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fiel ds regarding the 
Eventgroup 0x02  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  925 Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated 
in the Subscri beEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
TestfieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 
SubscribeEventgroup Messag e 
Reference  PRSSOM EIPSD00386  
PRSSOMEIPSD00387PRSSOMEIPSD00391  
PRSSOMEIPSD00391  
Notes   
 
516171  SOMEIPETS87  EventgroupEventsAndFieldsUnreliable5  
Synopsys  The DUT has to se nd out SubscribeEventgroupAck and all initial Fields regarding the 
Eventgroup 0x05  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  SubscribeEventgroup Message for Eventgroup 0x0 5 
2 DUT sends SubscribeEventgroupAck  
3 DUT sends all initial Events to the same IP and Port the Tester indicated in 
the SubscribeEventgroup Messag e 
 Interface Version Method ID 0x8005  
 TestfieldUINT8 Method ID 0x8006  
 Testfi eldUINT8Array Method ID 0x8007  
 
Testf ieldUINT8E2E Method ID 0x8009  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends all initial Events to the same IP and Port the Tester indicated in the 

  
    
  926 SubscribeEventgroup Messag e 
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387PRSSOMEIPSD00391  
Notes  
 
516172  SOMEIPETS88 SDAnswermultiplesubscribestogether  
Synopsys  The DUT has to accept each SubscribeEventgroup Entry it receives  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send  a message wi th multiple SubscribeEventgroup Entries  for 
the Eventgroups   
 0x02  
 0x05  
 0x06  
2 DUT sends SubscribeEventgroupAck for each entry  
Pass Criteria  DUT sends SubscribeEventgroupAck for each entry  
Reference  PRSSOMEIPSD00263SIPSD65SIPSD836  
Notes  
 
516173  SOMEIPETS89 
SDCallingsameportsbeforeandaftersuspendInterface  
Synopsys  A certain amount of method calls are made using specific source ports and all against the 
same SOMEIP port offered by the DUT  Once the tester has finished one request it will 
perform a new request against the DUTs SOMEIP port and therefore the DUT must be able 
to resume listening and dispatching requests on that port as soon as a previous request has 
finished  

  
    
  927 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER First TesFieldUINT8 Getter and Setter  
2 DUT responds normally  
3 TESTER request Interface Version  
4 DUT tells his Interface Version through another Port  
5 TESTER Second TestFieldUINT8 Getter and Setter  
6 DUT Similar to the first Try but using different Ports  
7 TESTER First TestFieldUINT8Array  
8 DUT The DUT has to answer the Getter and Set ter on the given Port  
9 TESTER SuspendInterface  
10 DUT suspends the Interface for the given ammount of Time and sends a 
StopOfferService Message  
11 TESTER Third TestFieldUINT8  
12 DUT has to answer again using the same Ports thus this must still be 
available  
13 TESTER Second call to InterfaceVersion  
14 DUT has to be able to answer to the same Ports it did before the 
SuspendInterface  
15 TESTER Fourth TestFieldUINT8  
16 DUT The same Ports must be open  
17 TESTER Second TestFieldUINT8Array  
18 DUT must have available the same  Ports it had for the first call  
Pass Criteria  
 
Reference  PRSSOMEIPSD00356PRSSOMEIPSD00364 PRSSOMEIPSD00357  
Notes  
 
516174  SOMEIPETS91 SDCheckOfferServiceRequestIDincrementation  
Synopsys  The DUTs regular OfferService Messages ha ve to increment  the Session ID from one 
iteration to the next one  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
  928 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER observe the DUTs OfferService Messages  and analyze the 
Session IDs 
2 DUT increments the Session IDs of its OfferService Messages  
Pass Criteria  DUT increments the Session IDs of its OfferService Messages  
Reference  PRSSOMEIPSD00157  PRSSOMEIPSD00355 PRSSOMEIPSD00154  
Notes  
 
516175  SOMEIPETS92 SDCheckReactiontoaSubscribewithttl0  
Synopsys  The DUT shall not respond to a  unicast SubscribeEventgroup Request with TTL  0 ie 
StopSubscribeEventgroup  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send a unicast SubscribeEventgroup message with 
a TTL set to 0  
4 DUT does not react to the request  
Pass Criteria  DUT does not react to the request  
Reference  PRSSOMEIPSD00386 PRSSOMEIPSD00387PRSSOMEIPSD00391  
Notes  
 
 
516176  SOMEIPETS93 
SDCheckRebootDetectionseparatemulticastandunicast  
Synopsys  The DUT has to detect that the Client performed a reboot when sending Multicast and 

  
    
  929 Unicast  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  Test descriptionA Multicast  Test  
1 TESTER send FindService 0x0101 with Session ID 0x0004  
2 DUT can answer with a unicast or multicast offer service message  
3 TESTER subscribes to the Eventgroup 0x5 of the offered ETS by the DU T 
with Session ID 0x0004   
4 DUT shall send a SubscribeEventgroupAck to the tester  After the 
Acknowledge the D UT shall immediately send an initial event Notify of 
Field InterfaceVersion 0x8005 due to the new subscriptio n 
5 TESTER send a second FindService 0x0101 with Session ID 0x0005 1 
second  after step 1  
6 DUT can answer with a unicast or multicast offer service message  
7 TESTER subscribe to the Eventgroup 0x5 of the offered ETS by the D UT with 
Session ID 0x0005  
8 DUT shall send a SubscribeEventgroupAck to the tester  Afte r the second 
subscri ption the DU T is not allowed to send the initial event again  
9 TESTER send a third FindService 0x0101 with the Session ID 0x0001 
Client reboot simulation  
10 DUT can answer with a unicast or multicast offer service message  
11 TESTER subscribe to  the Eventgroup 0x5 of the offered ETS by the DuT with 
Session ID 0x0001  
12 DUT shall send a SubscribeEventgroupAck to the tester  It is expected that 
the DUT  sends the initial event again which means that it has detected the 
client reboot  
 
B Unicast  Test  
 
13 TESTER subscribe to the Eventgroup 0x5 of the offered ETS by the DuT with 
Session ID 0x0004  
14 DUT shall send a SubscribeEventgroupAck to the tester After the 
Acknowledge the DUT shall immediately send an initial event Notify of 
Field InterfaceVer sion 0x800 5 due to the new subscription  
15 TESTER sends  second Subscribe to the Eventgroup 0x5 with a higher 
Session ID 0x000 5 
16 DUT shall send a SubscribeEventgroupAck to the tester After the second 
subscription the DUT is not allowed t o send the ini tial event again  

  
    
  930 17 TESTER send a third Subscribe to the Eventgroup 0x5 with the Session ID 
0x0001 Client reboot s imulation  
18 DUT shall send a SubscribeEventgroupAck to the tester  It is expected that 
the DU T sends the initial event again which means tha t it has detected the 
client reboot  
 
C Unicast and Multicast  Robustness test  
 
19 Finally in order to see if the DUT is able to keep the reboot detection 
separated for multicast M and unicast U Messages both types of 
Messages are cross sent There is  no real reboot since the Session IDs for 
each kind of them are always incremented but they are lower for unicast 
than for multicast If the DUT is not able to keep them separated it would 
believe that a reboot happened and the Test would fail  
Pass Crit eria See expected DUT reactions above  
Reference  
 
Notes  
 
 
516177  SOMEIPETS94 SDCheckRebootDetectionServerSide  
Synopsys  The DUT has to detect a reboot of the Tester  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  20 TESTER send a SubscribeEventgroup message for 
Eventgroup 0x02 
21 DUT sends SubscribeEventgroup Ack 
22 TESTER trigger the DUT to send Events by using the method 
TriggerEventUint8  
  
23 DUT sends TestEventUint8  
24 TESTER send FindService message with a SessionID of 0x 05 
25 DUT continues sending TestEventUint8  
26 TESTER send FindService message with a SessionID of 0x 05 to 

  
    
  931 simulated a reboot  
27 DUT stops sending TestEventUin t8 
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends TestEventUint8  
DUT continues sending TestEventUint8  
DUT stops sending TestEventUint8  
Reference  PRSSOMEIPSD00157  
Notes  
 
516178  SOMEIPETS95 SDChecksubscribeeventgroupttlexpired  
Synopsys  The DUT has to detect that the Testers Subscription has expired ttl  3 and must  not 
respond to the Trigger that the Tester invokes after the TTL expired  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a SubscribeEventgroup message for 
Eventgroup 0x02 with a ttl value of 3 seconds  
2 DUT sends SubscribeEventgroup Ack 
3 TESTER wait for at least 3 seconds until the subscription has expired  
4 TESTER trigger the DUT to send Events by using the method 
TriggerEventUint8  
5 DUT does not send any TestEventUint8  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT does not send any TestEventUint8  
Reference  PRSSOMEIPSD00386  
Notes  
 
516179  SOMEIPETS96 
SDCheckTCPConnectionbeforeSubscribeEventgroup  
Synopsys  The DUT has to deny a SubscribeEventgroup request  for Eventgroup 0x02 with a 

  
    
  932 SubscribeEventgroupNAck in case the SubscribeEventgroup  request includes a TCP 
Endpoint Option but a TCP connection has not been established in advance  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a SubscribeEventgroup message for Eventgroup 
0x02 with a a  TCP Endpoint Option but the corresponding TCP 
connection is not established  
2 DUT sends SubscribeEventgroup NAck  
Pass Criteria  DUT sends SubscribeEventgroup NAck  
Reference  PRSSOMEIPSD00362  
Notes  
 
516180  SOMEIPETS97 SDClientrestartstcpconnection  
Synopsys  On the DUT Client Mode is started and a SubscribeEventgroup attempt is triggered therefor 
the DUT will try to establish a TCP Connection which will be refused by the Tester 
The DUT 
has to react to this refusal by trying to re engage the TCP Connection with a second TCP SYN 
Message as soon as it receives another OfferService Message 
The Tester will react to this 
accepting the se cond TCP SYN and expects that this leads the DUT to finally subscribe 
 After 
all this the client Mode is deactivated in order not to interfere with other TestCases  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  and send SubscribeEventgroup  
2 DUT trys to establish a TCP Connection  
3 TESTER refuse the TCP Connection  
4 DUT has to react to this refusal by trying to re engage the TCP Connection 

  
    
  933 with a second TCP SYN Message as soon as it receives another OfferService 
Message  
5 TESTER accept  the second TCP SYN  
Pass Criteria  DUT trys to establish a TCP Connection  
DUT has to react to this refusal by trying to re engage the TCP Connection with a second 
TCP SYN Message as soon as it receives another OfferService Message  
 
Reference  PRSSOMEIPSD00527  
Notes  
 
 
516181  SOMEIPETS98 SDClientSe rvicesubscribewithoutmethodcall  
Synopsys  The Tester activates the clientService Mode on the DUT and starts  sending OfferService 
Messages The DUT shall not try to subscribe with each OfferService it receives since the 
clientServiceSubscribeEventgroup Message that is needed for the DUT to can subscribe is 
not being sent by the tester 
 At the End of the TestCase the ClientService Mode is 
deactivated to prevent it from interfering with other TestCases  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  and start  sending OfferService Messages  
2 DUT shall not try to subscribe with each OfferService it receives  
Pass Criteria  DUT shall not try to subscribe with each OfferService it receives  
Reference  PRSSOMEIPSD00386  
Notes  
 
 

  
    
  934 516182  SOMEIPETS 99 SDClientServiceActivate  
Synopsys  The DUT is triggered to enter the Client Mode without stopping its already running Server 
Mode  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts the c lient Start Up procedure and stay s ready to behave as a 
client while it keeps running also the Server Mode  
3 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientServiceDea ctivate  
Pass Criteria  DUT starts the c lient Start Up procedure and stay s ready to behave as a client while it 
keeps running also the Server Mode  
Reference  PRSSO MEIPSD00350PRSSOMEIPSD00351  
Notes  
 
516183  SOMEIPETS100 
SDClientServiceActivatenoFindServicesinMainPhase  
Synopsys  The clientService Mode shall only send FindService Messages during the Start Up Phase 
not in the Main  Phase  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sen ding FindService messages during the Start Phase and 
stops sending FindService messages when entering the Main Phase  
3 TESTER deactivate the DUT s ETS client Service mode  by the method 

  
    
  935 clientServiceDea ctivate  
Pass Criteria  DUT starts sending FindService messages during the Start Phase and stops sending 
FindService messages when entering the Main Phase  
Reference  PRSSOMEIPSD00351  
Notes  
 
516184  SOMEIPETS101 SDClientServiceActivatesendStopOfferService  
Synopsys  Client Mode is activated on the DUT and when the DUT starts sending FindService messages  
the Tester send s StopOfferService T he DUT is expected to understand that the Service and 
Instance ID that it is look ing for is no longer available I t should stop sending FindService 
Messages for this Service an d Instance ID
 Find ALL FindService Messages are still allowed  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER send StopOfferService as soon as the first FindService message 
from the DUT arrives at the Tester  
4 DUT stops sending FindService messages  
5 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientServiceDea ctivate  
Pass Criteria  DUT starts sending FindService messages  
DUT stops sending FindService messages  
Reference  PRSSOMEIPSD00351PRSSOMEIPSD00363  
Notes  
 
516185  SOMEIPETS 103 SDClientServiceGetLastValueOfEventTCP  
Synopsys  The Tester activates the clietnService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it
 After that it sends it a UINT8 TCP Event to the IP and Port the DUT 

  
    
  936 indicated with its SubscribeEventgroup Message valued as 0x08 
 This Value has to be 
returned by the DUT once the Tester triggers the clientServiceGetLastValueOfEventTCP 
Method after this the clientService Mode is deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 TCP Event to the IP and Port the DUT indicated with 
its SubscribeEve ntgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventTCP Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup  Message  
DUT return the value of step 5  
Reference  PRSSOMEIPSD00380PRSSOMEIPSD00362  
Notes  
 
 
516186  SOMEIPETS 104 SDClientServiceGetLastValueOfEventUDPMulticast  
Synopsys  The Tester activates the clientService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it After that it sends it a UINT8 multicast Event to the IP and Port the DUT 
indicated with the Testers SubscribeEventgroupAck Message valued  as 0x08 
This Value has 
to be returned by the DUT once the Tester triggers the 
clientServiceGetLastValueOfEventUDPMulticast Method after this the clientService Mode 
is 
deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  937 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER  Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 multicast Event to the IP and Port the DUT indicated 
with its SubscribeEventgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventUDPMulticast Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeE ventgroup  Message  
DUT return the value of step 5  
Reference  PRSSOMEIPSD00360PRSSOMEIPSD00361  
Notes  
 
 
516187  SOMEIPETS 105 SDClientServiceGetLastValueOfEventUDPUnicast  
Synopsys  The Tester activates the clietnService Mode on the DUT checks its Behaviour and triggers it 
to subscribe to it After that it sends it a UINT8 UDP unicast Event to the IP and Port the 
DUT indicated with his SubscribeEventgroup Message valued as 0x08 
 This Value has to be 
returned by the DUT once the Tester triggers the 
clientServiceGetLastValueOfEventUDPUnicast Method after this the clientService Mode is 
deactivated on the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  

  
    
  938 Procedure  2 DUT starts sending FindService messages  
3 TESTER Send OfferService Messages  
4 DUT sends SubscribeEventgroup  Message  
5 TESTER send a UINT8 UDP Event to the IP and Port the DUT indicated with 
its SubscribeEventgroup Message valued as 0x08  
6 TESTER trigger  the clientServiceGetLastValueOfEventUDPUnicast Method  
7 DUT return the value of step 5  
8 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup  Message  
DUT return the value of step 5  
Reference  PRSSO MEIPSD00360PRSSOMEIPSD00361  PRSSOMEIPSD00380  
Notes  
 
 
516188  SOMEIPETS 106 SDClientServiceSubscribeEventgroup  
Synopsys  Client Mode is activated on the DUT and  it has to subscribe to the Tester  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER activate the DUT s ETS client Service mode  by the method 
clientServiceActivate  
2 DUT starts sending FindService messages  
3 TESTER Send clientServiceSubscribeEventgroup Message  
4 TESTER send OfferService Messages offering the  ETS service  
5 DUT sends SubscribeEventgroup  Message to subscribe to the ETS 
service  
6 TESTER deactivate the DUT s ETS client Service mode  by the method 
clientService Deactivate  
Pass Criteria  DUT starts sending FindService messages  
DUT sends SubscribeEventgroup Message to subscribe to the ETS service  
Reference  PRSSOMEIPSD00385PRSSOMEIPSD00386  
PRSSOMEIPSD00268PRSSOMEIPSD00380  

  
    
  939 Notes  
 
516189  SOMEIPETS107 SDConsiderEntriesOrder  
Synopsys  The Tester initially subscribes to the DUT and then sends a Message containing two Entries 
A SubscribeEventgroup with TTL 0 and normal SubscribeEventgroup 
 The Testcases awaits 
the DUT first to delete the Tester from the List of subscribed Entities and then an 
SubscribeEventgroupAck in this order for the SubscribeEventgroup this one should be 
followed by the initial Fields for the subscribed Eventgroup 0x 05 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message to subscribe to Eventgroup 
0x05  
2 DUT sends SubscribeEventgroup Ack and the initial Events  
3 TESTER Send SD Message containing two Entries  
 StopSubscribeEventgroup Entry TTL  0 for Eventgroup 0x05  
 SubscribeEventgroup Entry for Eventgroup 0x05 to resubscribe  
4 DUT sends SubscribeEventgroup Ack and the initial Events again 
corresponding to the re subscription  
Pass Criteria  DUT sends SubscribeEventgroup Ack and the initial Events  
DUT sends SubscribeEventgroup Ack and the initial Events again corr esponding to the re 
subscription  
Reference  PRSSOMEIPSD00263  
Notes  
 
516190  SOMEIPETS108 SDDeregisterfromEventgroup  
Synopsys  The Tes ter subscribes and unsubscribes  Right after having received the Initial Events 
corresponding to the SubscribeEventgroup the Tester tries to trigger the TestEventUINT8 
and expects the DUT to ignore the Trigger since the initial Subscription is not active 
anymore  

  
    
  940 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message to subscribe to Eventgroup 
0x05  
2 DUT sends SubscribeEventgroup Ack and the initial Events  
3 TESTER Send StopSubscribeEventgroup message for Eventgroup 0x05  
4 TESTER by using the method TestEventUINT8  trigger the DUT to send a 
corresponding Event  
5 DUT does not send the Event as the initial s ubscription is not active 
anymore  
Pass Criteria  DUT sends SubscribeEventgroup Ack and the initial Events  
DUT does not send the Event as the initial s ubscription is not active anymore  
Reference  PRSSOMEIPSD00388PRSSOMEIPSD00389PRSSOMEIPSD00386  
Notes  
 
516191  SOMEIPETS109 SDDonotspecifyaport  
Synopsys  The Tester sends a SubscribeEventgroup Message without indicating a Port in the Endpoint  
Options  This should lead the DUT to reject the whole Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  Message without specifying a port in 
the Endpoint option port number is 0  
2 DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00380PRSSOMEIPSD00393  

  
    
  941 Notes  
 
 
516192  SOMEIPETS110 SDDonotspecifyIPv4Adress  
Synopsys  The Tester sends a SubscribeEventgroup Message which does not indicate IPv4 Addresses in 
the Endpoint  Options since this is not possible without malforming the message the 
transmitted IP is 32000 this should lead the DUT to reject the Message and answer with 
a SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  Message without specifying a valid IP 
address in the Endpoint option  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup Nack to reject the subscription attempt  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  
Notes  
 
 
516193  SOMEIPETS111 SDEmptyEntriesArray  
Synopsys  The Tester sends a SubscribeEventgroup Message which states a total length of Zero for 
the Entries Array though it should not be interpreted and complete ly ignored  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setu p Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  942 Test Procedure  1 TESTER send SubscribeEventgroup  Message with Entries Array  length 
zero  
2 DUT ignores the SubscribeEventgroup  message shows no reaction  
Pass Criteria  DUT ignores the SubscribeEventgroup  message shows no reaction  
Reference  PRSSOMEIPSD00540  
Notes  
 
 
516194  SOMEIPETS 112 SDEmptyOption  
Synopsys  The Tester sends Subscribe Eventgroup with IPv4Option length  0 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
options array length  0  
2 DUT sends SubscribeEventgroup NAck to reject the subscription 
attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00307  
Notes  
 
516195  SOMEIPETS113 SDEmptyOptionsArray  
Synopsys  The Tester sends Subscribe Eventgroup with IPv4Option length  0 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  

  
    
  943 Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
options array length  0  
4 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00393  
Notes  
 
 
516196  SOMEIPETS114 SDEntriesLengthwrongcombined  
Synopsys  The Tester sends SubscribeEventgroup  with two correct Entries but a shortened Entries 
Array l ength The DUT shall respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
two correct Entries but a shortened Entries Array l ength  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00265 PRSSOMEIPSD00264PRSSOMEIPSD00393  
Notes  
 
516197  SOMEIPETS115 SDEntryreferencesmoreoptionsthanexist  
Synopsys  The Tester sends SubscribeEventgroup  with more option references than existing option s 
The DUT shall respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  

  
    
  944 Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
more option references than existing option s 
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
 
516198  SOMEIPETS116 SDEntryreferencesnonexistingoptiontype  
Synopsys  The Tester sends SubscribeEventgroup  with unknown Option type 0x77 The DUT shall 
respond Subscribe EventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
unknown Option type 0x77  
2 DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Pass Criteria  DUT sends SubscribeEventgroup NAck to reject the subscription attempt  
Reference  PRSSOMEIPSD00305PRSSOM EIPSD00307PRSSOMEIPSD00393  
Notes  
 
 

  
    
  945 516199  SOMEIPETS117 SDEntryreferencesoptionsofsamekind  
Synopsys  The Tester sends SubscribeEventgroup  with two options of the same type  The DUT shall 
respond Subscribe Eventgroup NAck or ignore the request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message for DefaultEventgroup with 
two options of the same type  
2 DUT may send SubscribeEventgroup NAck to reject the subscription 
attempt or may ignore the request  
Pass Criteria  DUT may send SubscribeEventgroup NAck to reject the subscription attempt or may 
ignore the request  
Reference  PRSSOMEIPSD00393  
Notes  
 
5161100  SOMEIPETS118 SDIgnoreOptionsinFindService  
Synopsys  The Tester sends 10 Find Service messages with IPv4 Endpoint O ption The DUT shall 
ignore the options and respond with at least one  unicast Offer Service  message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Find Service messages with IPv4 Endpoint O ption  in 
100ms intervals  
2 DUT sends at least one  unicast Offer Service  message  
Pass Criteria  DUT sends at least one  unicast Offer Service  message  
Reference  PRSSOMEIPSD00268SIPSD877SIPSD878  
Notes  
 

  
    
  946  
5161101  SOMEIPETS119 SDIndicatewrongl4protoparam  
Synopsys  The SubscribeEventgroup Message sent by the Tester refers to an IPv4Endpoint Option with 
a wrong l4proto Parameter neither UDP or TCP since this way not all needed Endpoint 
Options are present in a cor rect way the Message has to be rejected with a 
SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message referencing an IPv4Endpoint 
Option with a wrong l4proto Parameter  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends at least one  unicast Offer Service  message  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
Notes  
 
5161102  SOMEIPETS120 SDInitialEventsafterSubscribewithalternateIPs  
Synopsys  The DUT has to answer the Testers SubscribeEvengroup Message with a 
SubscribeEventgroupAck and immediatelly after send out the corresponding Initial Fields 
for the Subscribed Eventgroup  to the destination stated in the SubscribeEventgroup 
Endpoint Option  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message referencing an IPv 4Endpoint 
Option which differs from the Testers IP and Port  
2 DUT sends SubscribeEventgroup Ack to the DUTs IP address and Port  
3 DUT sends the  initial fields to the IP address and Port given in the Endpoint 

  
    
  947 option of the request  
Pass Criteria  DUT sends SubscribeEventgroup Ack to the DUTs IP address and Port  
DUT sends the initial fields to the IP address and Port given in the Endpoint option o f the 
request  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00387  
PRSSOMEIPSD00391PRSSOMEIPSD00391  
Notes  
 
5161103  SOMEIPETS121 SDInitialEventsafterSubscribeEventgroup  
Synopsys  The DUT has to answer the Testers SubscribeEvengroup Message with a 
SubscribeEventgroupAck and immediatelly after send out the corresponding Initial Fields for 
the Subscribed Eventgroup  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message for Eventgroup 0x05  
2 DUT sends SubscribeEventgroup Ack  
3 DUT sends the initial fields  
Pass Criteria  DUT sends SubscribeEventgroup Ack  
DUT sends the initial fields  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00391PRSSOMEIPSD00391  
PRSSOMEIPSD00310PRSSOMEIPSD00380PRSSOMEIPSD00360  
PRSSOMEIPSD00361PRSSOMEIPSD00362  
Notes  
 
 
5161104  SOMEIPETS 122 SDInterfaceVersion  
Synopsys  The DUT has to answer indicating its Interface Version in the correct format  

  
    
  948 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger  the Interface Version Getter method  
2 DUT returns the method response   
Pass Criteria  DUT returns the method response  
Reference  PRSSOMEIPSD00357  
PRSSOMEIPSD00360PRSSOMEIPSD00361  
Notes  
 
5161105  SOMEIPETS123 
SDLengthofEntryArraylongerthanmessageallows  
Synopsys  The Tester sends a SubscribeEventgroup Message whos Entry Array Length exceeds the 
Message total Length and so the Message should be unrecognizable for the DUT or at least 
too damaged to be answe red with  a SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup  message  with an  Entry Array length 
exceed ing the total Length  of the m essage  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265P RSSOMEIPSD00153PRSSOMEIPSD00270  
Notes  
 
 

  
    
  949 5161106  SOMEIPETS124 SDLengthofEntryArraytoolong  
Synopsys  The Messages Ent ry Array Length does not exceed  the Message total Length but goes far 
beyond its normal Limit and so the Message turns defect and must be rejected by the DUT  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup  message  with an  Entry Array length 
exceed ing the total Length  of the m essage  by at least 20 Bytes  
4 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00393  
PRSSOMEIPSD00270PRSSOMEIPSD00264  
PRSSOMEIPSD00566  
Notes  
 
5161107  SOMEIPETS125 SDLengthofEntryArraytooshort  
Synopsys  The Tester sends a SubscribeEventgroup Message  with an  Entry Array Length shorter 
than it should be based on the Le ngth indicated by each Option  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology  1 
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup  message  with an  Entry Array Length 
less than the sum of the Lengths indicated by each Option  
2 DUT sends SubscribeEventgroupNA ck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00270  
Notes  
 

  
    
  950 5161108  SOMEIPETS127 SDMulticastFindService  
Synopsys  The DUT receives 10 Multicast FindService Messages every 100ms asking for a valid 
ServiceIns tance ID depending on the DUT The DUT has to answer using a Unicast 
OfferService for this ServiceInstance ID 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
requesting  a valid ServiceIns tance ID depending on the DUT  
2 DUT responses with at least one  unicast OfferService  message  
Pass Criteria  DUT responses with at least one u nicast OfferService  message  
Reference  PRSSOMEIPSD00305PRSSOMEIPSD00306  
PRSSOMEIPSD00307PRSSOMEIPSD00261  
Notes  
 
5161109  SOMEIPETS128 
SDMulticastFindServiceMajorMinorVersionsettoall  
Synopsys  The DUT receives both 10 multicast FindService Requests with Major Version and later with 
a Minor Version set to 0xFF all of them in 100ms intervals and is expected to answer each 
one of th em with at least one unicast OfferService Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
with Major Version  set to 0xFF  Minor Version  set to Default value  
2 DUT responses with at least one u nicast OfferService  message  
3 TESTER send 10 Multicast FindService messages  in an interval of  100ms 
with Minor Version  set to 0xFF FFFFFF  Major Version  set to Default value  
4 DUT responses with at least one u nicast OfferService  message  

  
    
  951 Pass Criteria  DUT responses with at least one u nicast OfferService  message  
DUT responses with at least one u nicast  OfferService  message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSOMEIPSD00306PRSSOMEIPSD00307 
PRSSOMEIPSD00351PRSSOMEIPSD00351  
Notes  
 
5161110  SOMEIPETS130 SDMulticast FindService withunicastFlagto0  
Synopsys  The DUT receives a multicast FindService Request with its Unicast Flag set to 0 and is 
expected to ignore this flag and to answer with a unicast OfferService Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test  Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send a Multicast FindService message with Unicast Flag set to 0  
2 DUT sends a unicast OfferService Message  
Pass Criteria  DUT sends a unicast OfferService Message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSO MEIPSD00306PRSSOMEIPSD00307  
Notes  
 
5161111  SOMEIPETS134 SDOptionLengthendspastOptionsArrayVarA  
Synopsys  The Tester sends a SubscribeEventgroup Message whose Options Length surpasses the 
total Length indicated for the options Array and so the Message must be answered with an 
SubscribeEventgroupNAck or not answered at all  
 
In Variant A of this testCase the total length indicated in the SOMEIP Header is slightly 
shortened from 60 to 48 Bytes in order to cut the Options Array and make this one look 
shorter than it really is  
 
The Length of the Option Array is cut in the same order as in the SOMEIP Header lossing 
also 12 Bytes 
from 24 to 12 only the Options individual Length fields are  correct  

  
    
  952 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with an actual Option  Length  
greater  than the indicated options Array length  
2 TESTER sends SubscribeEventgroupNAck to reject the subscription request  
or ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00274PRSSOMEIPSD00393PRSSOMEIP00042  
Notes  
 
5161112  SOMEIPETS135 SDOptionLengthendspastOptionsArrayVarB  
Synopsys  The Tester sends a SubscribeEventgroup Message whose Options has a Length which 
surpasses the Length indicated  for the Options Array and so the Message must be answered 
with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with an actual Option  Length  
greater  than the indicated options Array length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  or 
ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00274PRSSOMEIPSD00393PRSSOMEIP00042  
Notes  
 

  
    
  953 5161113  SOMEIPETS136 
SDOptionLengthshorterGT0asspecifiedfortype  
Synopsys  The Tester sends a Sub scribeEventgroup Message with  a UDP Option Length less than  
specified for the Type 4 Bytes instead of 9 The  Message must be answered with an 
SubscribeEvent groupNAck or be fully ignored  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with UDP Option Length less 
than  specified for the Type  4 Bytes instead of 9  
2 DUT sends Subs cribeEventgroupNAck to reject the subscription request  or 
ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
Notes  
 
5161114  SOMEIPETS137 SDOptionshorterwithunalignednextoption  
Synopsys  The Tester sends a SubscribeEventgroup Message which first Option has a Length of 14 Bytes 
and the second one of 4 Bytes both are wrong sized but the total expected Length for the 
Optio ns Array is appearantly kept since the missing bytes are deleted from the UDP option 
and added as dummy bytes at the end of the TCP option  
 
The total SOMEIP length is kept at 60 and the missing bytes from the options array are 
replenished with dummy byte s 
 
The DUT has to answer this Message with a SubscribeEventgroupNAck since this change in 
the Option Sizes disrupts them and should turn them useless  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  954 Test 
Procedure  1 TESTER send SubscribeEventgroup Message with  
 TCP endpoint option length  14 bytes append dummy bytes  
 UDP endpoint option length  4 bytes cut to 4 bytes  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request   
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00393  
PRSSOMEIP00042PRSSOMEIPSD00265PRSSOMEIPSD00274  
Notes  
 
5161115  SOMEIPETS138 SDOptionsArraylongerthanmessageallows  
Synopsys  The Tester sends a SubscribeEventgroup Message which stated Options Array Length is 
longer than the Message itself Option Array Length is 0x28 instead of 0x18  
 
The DUT shall return  SubscribeEventgroupAck  Due to AUTOSAR compatibility purpo ses it 
is also allowed to ignore t he message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input  Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Options Array Length  actual length  
2 DUT sends SubscribeEventgroupAck message or ignore the reuqest  
Pass Criteria  DUT sends SubscribeEventgroupAck message or ignore the reuqest  
Reference  PRSSOMEIPSD00390  
Notes  
 
 
5161116  SOMEIPETS139 SDOptionsArraytooshort  
Synopsys  The Tester sends a SubscribeEventgroup Message which  Options Array Length is shorter 
than  required 2 By tes instead of the original 24 T he Message must be answered with 

  
    
  955 SubscribeEventgroupNAck since the required Options for this Entry are not accesible 
anymore  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check s ection general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message with  
 Options Array Length  actual length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00265PRSSOMEIPSD00270PRSSOMEIPSD00566  
Notes  
 
5161117  SOMEIPETS140 SDRequestnonexistingEventgroupID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Eventgroup ID 
The Message must be answered with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Eventgroup ID  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 

  
    
  956 5161118  SOMEIPETS141 SDRequestnonexistingInstanceID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Instance ID 
The Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Instance ID 
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
5161119  SOMEIPETS142 SDRequestnonexistingMajorVersion  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing Major 
Version  The Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing Major Version  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00394PRSSOMEIPSD00393  
Notes  
 

  
    
  957 5161120  SOMEIPETS143 SDRequestnonexistingServiceID  
Synopsys  The Tester sends a SubscribeEventgroup Message requesting a non existing ServiceID  The 
Message must be answered with an SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 non existing ServiceID  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00386PRSSOMEIPSD00394PRSSOMEIPSD00393  
Notes  
 
5161121  SOMEIPETS144 SDReservedFieldEndpointOptionset  
Synopsys  The Tester sends a SubscribeEventgroup Message with the reserved Fields of the Endpoint 
Options set T he Message must be answered with SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the  Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 reserved Fields of the Endpoint Options set  
2 DUT ignores the reserved fields and sends SubscribeEventgroupAck  
Pass Criteria  DUT ignores the reserved fields and sends SubscribeEventgroupAck  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00391  
Notes  
 

  
    
  958 5161122  SOMEIPETS 146 SDResetInterface  
Synopsys  The Tester gets the TestFieldUINT8 Value hold by the DUT and stores it later  it sets a new 
different one For both Requests the Tester expects an answer which is checked against the 
SOMEIP Specifications 
 Once this Preparations are taken the Tester triggers the DUT to 
reset and after waitin g 3 Seconds for the Reset to complete it asks again for the 
TestFieldUINT8 Value expecting it to be at least different from the one he set before the 
Reset  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topol ogy 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER get the TestFieldUINT8 Value hold by the DUT and store  it 
2 DUT returns the value  
3 TESTER set a new different value  
4 DUT returns the value  
5 TESTER trigger  the DUT to reset  
6 TESTER ask  again for the TestFieldUINT8 Value  
7 DUT returns the value which shall be at least different from the one he set before 
the Reset  
Pass Criteria  DUT returns the value  
DUT returns the value  
DUT returns the value which shall b e at least different from the one he set before the Reset  
Reference  PRSSOMEIPSD00356PRSSOMEIP00170  
Notes  
 
5161123  SOMEIPETS147 SDSendtriggerEventUINT8Eventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  

  
    
  959 Test 
Procedure  8 TESTER send SubscribeEventgroup Message for  Eventgroup 0x02  
9 DUT sends SubscribeEventgroupAck  
10 TESTER trigger  the method triggerEventUINT8  
11 DUT sends the field TestEventUINT8 to the IP and port indicated in the Endpoint 
Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8 to the IP and port indicated in the Endpoint Option of 
the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00360  
PRSSOMEIPSD00361  
Notes  
 
 
5161124  SOMEIPETS148 SDSend triggerEventUINT8ArrayEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8Array  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced  Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method triggerEventUINT8Array  
4 DUT sends the field TestEventUINT8Array to the IP and port indicated in the 
Endpoint Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Array to the IP and port indicated in the  Endpoint 
Option of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310PRSSOMEIPSD00380  
Notes  
 

  
    
  960 5161125  SOMEIPETS149 SDSendtriggerEventUINT8E2EEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send TestEvent UINT8E2E  
events afterwards The DUT shall acknowledge the subscription and send the field events to 
the IP address und port indicated by the Endpoint Option in the subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x02  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger Event UINT8E2E  
4 DUT sends the field TestEventUINT8E2E to the IP and port indicated in the Endpoint 
Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8E2E to the IP and port indicated in the Endpoint Option 
of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310PRSSOMEIPSD00380  
Notes  
 
5161126  SOMEIPETS150 SDSendtriggerEventUINT8MulticastEventgroup6  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send 
TestEvent UINT8Multicast  events afterwards The DUT shall acknowledge the subscription 
and send the field events to the IP address und port indicated by the Endpoint Option in the 
subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Servic e 
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x06  
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger  trigger UINT8Multicast  
4 DUT sends the field TestEventUINT8Multicast to the IP and port indicated in the 
Endpoint Option of the request  

  
    
  961 Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Multicast to the IP and port indicated in the Endpoint 
Optio n of the request  
Reference  TBD 
Notes  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00323  
PRSSOMEIPSD00324PRSSOMEIPSD00325  
PRSSOMEIPSD00326PRSSOMEIPSD0039  
5161127  SOMEIPETS151 SDSendtriggerEventUINT8ReliableEventgroup2  
Synopsys  The Tester subscribes to an Eventgroup and triggers the DUT to send 
TestEventUINT8Reliable  events afterwards The DUT shall acknowledge the subscription 
and send the field events to the IP address und port indicated by the Endpoint Option in the 
subscription request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send SubscribeEventgroup Message for  Eventgroup 0x0 2 
2 DUT sends SubscribeEventgroupAck  
3 TESTER trigger  the method trigger Event UINT8Reliable  
4 DUT sends the field Test Event UINT8Reliable  to the IP and port indicated in the 
Endpoint Option of the request  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends the field TestEventUINT8Reliable  to the IP and port indicated in the Endpoint 
Option of the request  
Reference  PRSSOMEIPSD00307PRSSOMEIPSD00310  
PRSSOMEIPSD00380PRSSOMEIPSD00362  
Notes  
 
5161128  SOMEIPETS152 SDSessionIDisoneafterwrapping  
Synopsys  The Tester sends lots of FindService Messages  in order to observe the session id 
incrementation and wrap around of the OfferService responses After wrap around the 
session id has to start from 1  

  
    
  962 Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send lots of FindService Messages  
2 DUT responses with OfferService messages and starts with session id 1 after 
wrap around  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT responses with OfferService messages and starts with session id 1 after wrap around  
Reference  PRSSOMEIPSD00159  
Notes  
 
5161129  SOMEIPETS153 SDSOMEIPLengthshorterasexpected  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
SOMEIP Length is less than the actual length  
The DUT shall reject the request with SubscribeEventgroupNAck  or may ignore the 
request  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER  send SubscribeEventgroup Message with  
 SOMEIP Length is less than the actual length  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request 
or ignores the request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  or ignores the 
request  
Reference  PRSSOMEIP00042PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 

  
    
  963 5161130  SOMEIPETS154 SDSpecifyanunexistingIPv4Address  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address in the EndpointOption   
The DUT shall reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address in the EndpointOption  
2 DUT sends SubscribeEventgroupNAck to reject the subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request   
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  
Notes  
 
5161131  SOMEIPETS155 SDSubscribeafterStopSubscribe  
Synopsys  The Tester subsc ribes to an Eventgroup unsubscribes und subscribes again  
The DUT shall confirm the first subscription accept the unsubscribe message and react 
correctly to the re subscription  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message  
2 DUT sends SubscribeEventgroupAck  
3 TESTER send Stop SubscribeEventgroup Message  
4 DUT sends SubscribeEventgroupAck and sends all releated initial fields  
Pass Criteria  DUT sends SubscribeEventgroupAck  
DUT sends SubscribeEventgroupAck and sends all releated initial fields  
Reference  PRSSOMEIPSD00263PRSSOMEIPSD00386  

  
    
  964 Notes  
 
5161132  SOMEIPETS162 SDSubscribeEventgroupwithunallowedoptionip  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address  in the EndpointOption  IP address  IP address of the DUT  
The DUT shall  reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Tes tability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address  in the EndpointOption   
2 DUT sends SubscribeEventgroupNAck to reject the  subscription request  
Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PR SSOMEIPSD00393  
PRSSOMEIPSD00566  
Notes  
 
5161133  SOMEIPETS164 
SDSubscribeEventgroupwithunallowedoptionip2  
Synopsys  The Tester subscribes to an Eventgroup with wrong parameters in the request  
Invalid IPv4 Address  in the EndpointOption  IP address  111111111111  
The DUT shall  reject the request with SubscribeEventgroupNAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Parameters  Check section general Input Parameters  
Test Procedure  3 TESTER send SubscribeEventgroup Message with  
 Invalid IPv4 Address  in the EndpointOption   
4 DUT sends SubscribeEventgroupNAck to reject the subscription request  

  
    
  965 Pass Criteria  DUT sends SubscribeEventgroupNAck to reject the subscription request  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393PRSSOMEIPSD00566  
Notes  
 
5161134  SOMEIPETS 163 SDSuspendInterface  
Synopsys  The Tester retrieves the TestFieldUINT8 Value the DUT has before the Suspension and sets a 
new one for both Requ ests it expects a valid Answer After that the SuspendInterface 
Request is sent to the DUT and two conditions are expected  
 
 First during the suspension time which must least as long as the suspendInterface 
Message stated in his Options the DUT should not send out any kind of Messa ge 
It should notify this by sending out a StopOfferService Message  
 
 Second after the Suspension finished the Getter is called again and the Value returned 
must not be the same as set by the Tester before the Suspension since after the suspension 
Time  the Interface is expected not to reset  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8  by using the method Getter  
2 DUT returns  the field TestFieldUINT8  
3 TESTER set a new value for the field TestFieldUINT8  by using the method Setter  
4 DUT returns  the field TestFieldUINT8  with the value set by the Tester in step 3  
5 TESTER send the SuspendInterface Request  
6 DUT should not send out any kind of Message  during the suspension time   
It should notify this by sending out a StopOfferService Message  
7 TESTER after the Suspension fi nished  call Getter again  
8 DUT returns the value Value returned must not be the same as set by the Tester 
before the Suspension  
Pass Criteria  DUT returns the field TestFieldUINT8  
DUT returns the field TestFieldUINT8 with the value set by the Tester in s tep 3  
DUT should not send out any kind of Message during the suspension time  
It should notify this by sending out a StopOfferService Message  
DUT returns the value Value returned must not be the same as set by the Tester before the 
Suspension  

  
    
  966 Reference  PRSSOMEIPSD00356PRSSOMEIPSD00364SIPSD811PRSSOMEIPSD00363  
Notes  
 
5161135  SOMEIPETS 166 SDTestFieldUINT8  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8  by using the methods Getter 
and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8  by using the method 
Getter  
2 DUT returns  the field TestFieldUINT8  
3 TESTER set a new value for the field TestFieldUINT8  by using the method Setter  
4 DUT returns  the field TestFieldUINT8  with the value set by the Tester in step 3  
Pass Criteria  DUT returns the field TestFieldUINT8  
DUT returns the field TestFieldUINT8 with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00357PRSSOMEIPSD00360  
PRSSOMEIPSD00361PRSSOMEIP00180  
Notes  
 
5161136  SOMEIPETS 167 SDTestFieldUINT8Array  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8Array  by using the methods 
Getter and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8Array  by using the 
method Getter  

  
    
  967 2 DUT returns  the field TestFieldUINT8Array  
3 TESTER set a new value for the field TestFieldUINT8Array  by using the method 
Setter  
4 DUT returns  the field TestFieldUINT8Array  with the value set by the Tester in 
step 3  
Pass Criteria  DUT returns the field TestField UINT8Array  
DUT returns the field TestFieldUINT8Array  with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00357  
Notes  
 
 
5161137  SOMEIPETS 168 SDTestFieldUINT8Reliable  
Synopsys  The Tester triggers the DUT to send the field TestFieldUINT8Reliable  by using the 
methods Getter and Setter The DUT shall respond correctly  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER trigger the DUT to send the field TestFieldUINT8Reliable  by using the 
method Getter  
2 DUT returns  the field TestFieldUINT8Reliable  
3 TESTER set a new value for the field TestFieldUINT8Reliable  by using the 
method Setter  
4 DUT returns  the field TestFieldUINT8Reliable  with the value set by the Tester in 
step 3  
Pass Criteria  DUT returns the field TestFieldUINT8Reliable  
DUT returns the field TestFieldUINT8Reliable  with the value set by the Tester in step 3  
Reference  PRSSOMEIPSD00362  
Notes  
 
5161138  SOMEIPETS171 SD UnicastFindService  
Synopsys  The Tester requests a service the DUT offers by sending several unicast FindService 
messages The DUT shall respond with at least one unicast OfferService message  

  
    
  968 Prerequisites  DUT ETS is running and offer ing the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send several unicast FindService messages to request a service the DUT 
offers  
2 DUT sends at least one unicast OfferService message  
Pass Criteria  DUT sends at least one unicast OfferService message  
Reference  PRSSOMEIPSD00268PRSSOMEIPSD00305  
PRSSOMEIPSD00306PRSSOMEIPSD00307  
Notes  
 
5161139  SOMEIPETS172 SOMEIPETS173 SDUnicastSubscribeEventgroup  
Synopsys  The Tester sends a unicast subscription request and expects the DUT to send a unicast 
subscription acknowledgement in response  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send unicast subscribeEventgroup indicating the Option settings  
 index1stOptions  0  
 index2ndOptions  1  
 numOfOptions1  1  
 numOfOptions2   1 
2 DUT sends unicast subscribeEventgroupAck  
3 TESTER send subscribeEventgroup indicating a deviating Endpoint Option 
configuration  
 index1stOptions  0  
 index2ndOptions  0 
 numOfOptions1  2 
 numOfOptions2   0 
4 DUT sends unicast subscribeEventgroupAck  
Pass Criteria  DUT sends unicast subscribeEventgroupAck  

  
    
  969 DUT sends unicast subscribeEventgroupAck  
Reference  PRSSOMEIPSD00386 PRSSO MEIPSD00387PRSSOMEIPSD00391  
Notes  
 
5161140  SOMEIPETS174 SDUnknownOptiontype  
Synopsys  The Tester sends a SubscribeEventgroup Message referencing an unknown Option type this 
turns useless one of the two Endpoint Options needed by the DUT since the unknown one 
has to be ignored and so the Message must be answered with a SubscribeEventgroupNAck 
Message  
Prerequisites  DUT ETS is running  and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test 
Procedure  1 TESTER send subscribeEventgroup with an unknown Option type  
2 DUT sends subscribeEventgroupNAck  
Pass Criteria  DUT sends subscribeEventgroupNAck  
Reference  PRSSOMEIPSD00273PRSSOMEIPSD00393  
Notes  
 
5161141  SOMEIPETS 175 SD Unreferencedoption  
Synopsys  The Tester sends a SubscribeEventgroup Message containing all needed Endpoint Options 
including a not ne eded Configuration Endpoint Option  
 
This last Option is not referenced and so the Message must be answered by the DUT with 
an SubscribeEventgroupAck  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input Check section general Input Parameters  

  
    
  970 Parameters  
Test Procedure  1 TESTER send subscribeEventgroup containing all needed Endpoint Options 
including a not needed Configuration Endpoint Option  
2 DUT sends subscribeEventgroupAck  
Pass Criteria  DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00337PRSSOMEIPSD00387PRSSOMEIPSD00393  
Notes  
 
 
5161142  SOMEIPETS176 SDUnuseddataafterOptionsArray  
Synopsys  The DUT receives a unicast SubscribeEventgroup Request with unused Payload Data right 
after the Options Array and which is included in the SOMEIP Length Field and is expected 
to answer with a SubscribeEventgroupAck Message  
 
The extra payload Data is 0x30303a3031  
 
After that a second SubscribeEventgroup is sent which also includes  the extra b ytes at the 
end but does not count them to the messagess total length  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test P rocedure  1 TESTER send subscribeEventgroup with unused Payload Data right after the 
Options Array and which is included in the SOMEIP Length Field  
2 DUT sends subscribeEventgroupAck  
3 TESTER send subscribeEventgroup with unused Payload Data right after the 
Options Array but not count ed to the messagess total length  
4 DUT sends subscribeEventgroupAck  
Pass Criteria  DUT sends subscribeEventgroupAck  
DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00153PRSSO MEIPSD00273  
Notes  
 
 

  
    
  971 5161143  SOMEIPETS177 SD UnuseddataafterOptionsArraywronglength  
Synopsys  The DUT receives a unicast SubscribeEventgroup Request with unused Payload Data whos 
Length is not included in the SOMEIP Length Field at the End and is expected to answer 
with an SubscribeEventgroupAck Message  
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send subscribeEventgroup Request with unused Payload Data whos 
Length is not included in th e SOMEIP Length Field at the e nd 
2 DUT sends subscribeEventgroupAck   
Pass Criteria  DUT sends subscribeEventgroupAck  
Reference  PRSSOMEIPSD00153PRSSOMEIPSD00273  
Notes  
 
 
5161144  SOMEIPETS178 SubscribeusingwrongSOMEIPMessageID  
Synopsys  The Tester sends a SubscribeEventgroup Message whose SOMEIP header uses a wrong 
Message ID for Service Discovery this should lead the DUT to reject the Message since it 
cannot be interpreted as a valid SOMEIP SD 
Prerequisites  DUT ETS is running and offering the Enhanced Testability Service  
Test setup  Topology 1  
Test Input 
Parameters  Check section general Input Parameters  
Test Procedure  1 TESTER send subscribeEventgroup Message whose SOMEIP header uses a wrong 
Message ID for Service Discovery   
2 DUT sends subscribeEventgroupNAck   
Pass Criteria  DUT sends subscribeEventgroupNAck  
Reference  PRSSOMEIPSD00306PRSSOMEIPSD00307  
PRSSOMEIPSD00380PRSSOMEIPSD00393  

  
